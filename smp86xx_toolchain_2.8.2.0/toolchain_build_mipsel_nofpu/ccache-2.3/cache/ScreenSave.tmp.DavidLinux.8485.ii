# 1 "ScreenSaverWin.cpp"
# 1 "/home/davidhu/svn.32M/apps//"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "ScreenSaverWin.cpp"

# 1 "dma.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 1
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/features.h" 1 3 4
# 262 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/features.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_config.h" 1 3 4
# 263 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/features.h" 2 3 4
# 303 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/features.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/cdefs.h" 1 3 4
# 304 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/features.h" 2 3 4
# 27 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4

extern "C" {
# 175 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/posix_opt.h" 1 3 4
# 176 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/environments.h" 1 3 4
# 23 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/environments.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/wordsize.h" 1 3 4
# 24 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/environments.h" 2 3 4
# 180 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4
# 190 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/types.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/types.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 214 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 3 4
typedef unsigned int size_t;
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/types.h" 2 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/kernel_types.h" 1 3 4
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/kernel_types.h" 3 4
typedef unsigned int __kernel_dev_t;
typedef unsigned long __kernel_ino_t;
typedef unsigned int __kernel_mode_t;
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/kernel_types.h" 3 4
typedef unsigned long __kernel_nlink_t;


typedef long __kernel_off_t;
typedef int __kernel_pid_t;
typedef int __kernel_ipc_pid_t;
typedef int __kernel_uid_t;
typedef int __kernel_gid_t;
typedef unsigned int __kernel_size_t;
typedef int __kernel_ssize_t;
typedef int __kernel_ptrdiff_t;
typedef long __kernel_time_t;
typedef long __kernel_suseconds_t;
typedef long __kernel_clock_t;
typedef long __kernel_daddr_t;
typedef char * __kernel_caddr_t;
typedef unsigned short __kernel_uid16_t;
typedef unsigned short __kernel_gid16_t;
typedef int __kernel_uid32_t;
typedef int __kernel_gid32_t;
typedef __kernel_uid_t __kernel_old_uid_t;
typedef __kernel_gid_t __kernel_old_gid_t;
typedef __kernel_dev_t __kernel_old_dev_t;
typedef long long __kernel_loff_t;



typedef struct {
 long val[2];
} __kernel_fsid_t;
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short __u_short;
typedef unsigned int __u_int;
typedef unsigned long __u_long;

__extension__ typedef unsigned long long int __u_quad_t;
__extension__ typedef long long int __quad_t;
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/types.h" 3 4
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;

typedef __quad_t *__qaddr_t;

typedef __u_quad_t __dev_t;
typedef __u_int __uid_t;
typedef __u_int __gid_t;
typedef __u_long __ino_t;
typedef __u_int __mode_t;
typedef __u_int __nlink_t;
typedef long int __off_t;
typedef __quad_t __loff_t;
typedef int __pid_t;
typedef int __ssize_t;
typedef __u_long __rlim_t;
typedef __u_quad_t __rlim64_t;
typedef __u_int __id_t;

typedef struct
  {
    int __val[2];
  } __fsid_t;


typedef int __daddr_t;
typedef char *__caddr_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __swblk_t;

typedef long int __clock_t;


typedef int __clockid_t;


typedef int __timer_t;





typedef int __key_t;


typedef long int __ipc_pid_t;



typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef __quad_t __blkcnt64_t;


typedef __u_long __fsblkcnt_t;
typedef __u_quad_t __fsblkcnt64_t;


typedef __u_long __fsfilcnt_t;
typedef __u_quad_t __fsfilcnt64_t;


typedef __u_quad_t __ino64_t;


typedef __loff_t __off64_t;


typedef long int __t_scalar_t;
typedef unsigned long int __t_uscalar_t;


typedef int __intptr_t;


typedef unsigned int __socklen_t;




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/pthreadtypes.h" 1 3 4
# 23 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/pthreadtypes.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sched.h" 1 3 4
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sched.h" 3 4
struct __sched_param
  {
    int __sched_priority;
  };
# 24 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/pthreadtypes.h" 2 3 4


struct _pthread_fastlock
{
  long int __status;
  int __spinlock;

};



typedef struct _pthread_descr_struct *_pthread_descr;





typedef struct __pthread_attr_s
{
  int __detachstate;
  int __schedpolicy;
  struct __sched_param __schedparam;
  int __inheritsched;
  int __scope;
  size_t __guardsize;
  int __stackaddr_set;
  void *__stackaddr;
  size_t __stacksize;
} pthread_attr_t;



typedef struct
{
  struct _pthread_fastlock __c_lock;
  _pthread_descr __c_waiting;
} pthread_cond_t;



typedef struct
{
  int __dummy;
} pthread_condattr_t;


typedef unsigned int pthread_key_t;





typedef struct
{
  int __m_reserved;
  int __m_count;
  _pthread_descr __m_owner;
  int __m_kind;
  struct _pthread_fastlock __m_lock;
} pthread_mutex_t;



typedef struct
{
  int __mutexkind;
} pthread_mutexattr_t;



typedef int pthread_once_t;




typedef struct _pthread_rwlock_t
{
  struct _pthread_fastlock __rw_lock;
  int __rw_readers;
  _pthread_descr __rw_writer;
  _pthread_descr __rw_read_waiting;
  _pthread_descr __rw_write_waiting;
  int __rw_kind;
  int __rw_pshared;
} pthread_rwlock_t;



typedef struct
{
  int __lockkind;
  int __pshared;
} pthread_rwlockattr_t;




typedef volatile int pthread_spinlock_t;


typedef struct {
  struct _pthread_fastlock __ba_lock;
  int __ba_required;
  int __ba_present;
  _pthread_descr __ba_waiting;
} pthread_barrier_t;


typedef struct {
  int __pshared;
} pthread_barrierattr_t;





typedef unsigned long int pthread_t;
# 144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/types.h" 2 3 4
# 191 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4


typedef __ssize_t ssize_t;





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 200 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4





typedef __gid_t gid_t;




typedef __uid_t uid_t;







typedef __off64_t off_t;




typedef __off64_t off64_t;




typedef __useconds_t useconds_t;




typedef __pid_t pid_t;






typedef __intptr_t intptr_t;






typedef __socklen_t socklen_t;
# 260 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern int access (__const char *__name, int __type) throw ();
# 287 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern __off64_t lseek (int __fd, __off64_t __offset, int __whence) throw () __asm__ ("" "lseek64");
# 296 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence) throw ();



extern int close (int __fd) throw ();



extern ssize_t read (int __fd, void *__buf, size_t __nbytes) throw ();


extern ssize_t write (int __fd, __const void *__buf, size_t __n) throw ();
# 317 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes, __off64_t __offset) throw () __asm__ ("" "pread64");


extern ssize_t pwrite (int __fd, __const void *__buf, size_t __nbytes, __off64_t __offset) throw () __asm__ ("" "pwrite64");
# 334 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,
   __off64_t __offset) throw ();


extern ssize_t pwrite64 (int __fd, __const void *__buf, size_t __n,
    __off64_t __offset) throw ();







extern int pipe (int __pipedes[2]) throw ();
# 356 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern unsigned int alarm (unsigned int __seconds) throw ();
# 365 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern unsigned int sleep (unsigned int __seconds) throw ();






extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     throw ();



extern int usleep (__useconds_t __useconds) throw ();





extern int pause (void) throw ();



extern int chown (__const char *__file, __uid_t __owner, __gid_t __group)
     throw ();



extern int fchown (int __fd, __uid_t __owner, __gid_t __group) throw ();




extern int lchown (__const char *__file, __uid_t __owner, __gid_t __group)
     throw ();




extern int chdir (__const char *__path) throw ();



extern int fchdir (int __fd) throw ();
# 417 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern char *getcwd (char *__buf, size_t __size) throw ();




extern char *get_current_dir_name (void) throw ();




extern int dup (int __fd) throw ();


extern int dup2 (int __fd, int __fd2) throw ();


extern char **__environ;

extern char **environ;





extern int execve (__const char *__path, char *__const __argv[],
     char *__const __envp[]) throw ();


extern int execv (__const char *__path, char *__const __argv[]) throw ();



extern int execle (__const char *__path, __const char *__arg, ...) throw ();



extern int execl (__const char *__path, __const char *__arg, ...) throw ();



extern int execvp (__const char *__file, char *__const __argv[]) throw ();




extern int execlp (__const char *__file, __const char *__arg, ...) throw ();




extern int nice (int __inc) throw ();




extern void _exit (int __status) __attribute__ ((__noreturn__));





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/confname.h" 1 3 4
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/confname.h" 3 4
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX

  };


enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,




    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,



    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG

  };





enum
  {
    _CS_PATH,




    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,




    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,



    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,



    _CS_V6_WIDTH_RESTRICTED_ENVS

  };
# 479 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4


extern long int pathconf (__const char *__path, int __name) throw ();


extern long int fpathconf (int __fd, int __name) throw ();


extern long int sysconf (int __name) throw () __attribute__ ((__const__));



extern size_t confstr (int __name, char *__buf, size_t __len) throw ();




extern __pid_t getpid (void) throw ();


extern __pid_t getppid (void) throw ();




extern __pid_t getpgrp (void) throw ();
# 514 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern __pid_t __getpgid (__pid_t __pid) throw ();

extern __pid_t getpgid (__pid_t __pid) throw ();






extern int setpgid (__pid_t __pid, __pid_t __pgid) throw ();
# 540 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern int setpgrp (void) throw ();
# 558 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern __pid_t setsid (void) throw ();



extern __pid_t getsid (__pid_t __pid) throw ();



extern __uid_t getuid (void) throw ();


extern __uid_t geteuid (void) throw ();


extern __gid_t getgid (void) throw ();


extern __gid_t getegid (void) throw ();




extern int getgroups (int __size, __gid_t __list[]) throw ();





extern int setuid (__uid_t __uid) throw ();




extern int setreuid (__uid_t __ruid, __uid_t __euid) throw ();




extern int seteuid (__uid_t __uid) throw ();






extern int setgid (__gid_t __gid) throw ();




extern int setregid (__gid_t __rgid, __gid_t __egid) throw ();




extern int setegid (__gid_t __gid) throw ();





extern int getresuid (__uid_t *__euid, __uid_t *__ruid, __uid_t *__suid);



extern int getresgid (__gid_t *__egid, __gid_t *__rgid, __gid_t *__sgid);



extern int setresuid (__uid_t __euid, __uid_t __ruid, __uid_t __suid);



extern int setresgid (__gid_t __egid, __gid_t __rgid, __gid_t __sgid);






extern __pid_t fork (void) throw ();






extern __pid_t vfork (void) throw ();





extern char *ttyname (int __fd) throw ();



extern int ttyname_r (int __fd, char *__buf, size_t __buflen) throw ();



extern int isatty (int __fd) throw ();




extern int link (__const char *__from, __const char *__to) throw ();



extern int symlink (__const char *__from, __const char *__to) throw ();




extern int readlink (__const char *__restrict __path, char *__restrict __buf,
       size_t __len) throw ();



extern int unlink (__const char *__name) throw ();


extern int rmdir (__const char *__path) throw ();



extern __pid_t tcgetpgrp (int __fd) throw ();


extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) throw ();



extern char *getlogin (void) throw ();




extern int getlogin_r (char *__name, size_t __name_len) throw ();
# 707 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/getopt.h" 1 3 4
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/getopt.h" 3 4
extern "C" {
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/getopt.h" 3 4
extern char *optarg;
# 61 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/getopt.h" 3 4
extern int optind;




extern int opterr;



extern int optopt;
# 139 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/getopt.h" 3 4
extern int getopt (int __argc, char *const *__argv, const char *__shortopts);
# 156 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/getopt.h" 3 4
}
# 708 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 2 3 4







extern int gethostname (char *__name, size_t __len) throw ();






extern int sethostname (__const char *__name, size_t __len) throw ();



extern int sethostid (long int __id) throw ();





extern int getdomainname (char *__name, size_t __len) throw ();
extern int setdomainname (__const char *__name, size_t __len) throw ();





extern int vhangup (void) throw ();






extern int acct (__const char *__name) throw ();



extern char *getusershell (void) throw ();
extern void endusershell (void) throw ();
extern void setusershell (void) throw ();





extern int daemon (int __nochdir, int __noclose) throw ();






extern int chroot (__const char *__path) throw ();



extern char *getpass (__const char *__prompt) throw ();





extern int fsync (int __fd) throw ();






extern long int gethostid (void) throw ();


extern void sync (void) throw ();




extern int getpagesize (void) throw () __attribute__ ((__const__));







extern int truncate (__const char *__file, __off64_t __length) throw () __asm__ ("" "truncate64");







extern int truncate64 (__const char *__file, __off64_t __length) throw ();







extern int ftruncate (int __fd, __off64_t __length) throw () __asm__ ("" "ftruncate64");






extern int ftruncate64 (int __fd, __off64_t __length) throw ();





extern int getdtablesize (void) throw ();
# 836 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern int brk (void *__addr) throw ();





extern void *sbrk (intptr_t __delta) throw ();
# 857 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern long int syscall (long int __sysno, ...) throw ();
# 880 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern int lockf (int __fd, int __cmd, __off64_t __len) throw () __asm__ ("" "lockf64");






extern int lockf64 (int __fd, int __cmd, __off64_t __len) throw ();
# 908 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/unistd.h" 3 4
extern int fdatasync (int __fildes) throw ();







extern char *crypt (__const char *__key, __const char *__salt) throw ();



extern void encrypt (char *__block, int __edflag) throw ();






extern void swab (__const void *__restrict __from, void *__restrict __to,
    ssize_t __n) throw ();







extern char *ctermid (char *__s) throw ();


}
# 2 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 1 3 4
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 36 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 2 3 4

extern "C" {






# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/waitflags.h" 1 3 4
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 2 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/waitstatus.h" 1 3 4
# 63 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/waitstatus.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/endian.h" 1 3 4
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/endian.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/endian.h" 1 3 4
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/endian.h" 2 3 4
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/waitstatus.h" 2 3 4

union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 2 3 4
# 95 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 143 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern size_t _stdlib_mb_cur_max (void) throw ();






extern double atof (__const char *__nptr) throw () __attribute__ ((__pure__));


extern int atoi (__const char *__nptr) throw () __attribute__ ((__pure__));

extern long int atol (__const char *__nptr) throw () __attribute__ ((__pure__));





__extension__ extern long long int atoll (__const char *__nptr)
     throw () __attribute__ ((__pure__));






extern double strtod (__const char *__restrict __nptr,
        char **__restrict __endptr) throw ();





extern float strtof (__const char *__restrict __nptr,
       char **__restrict __endptr) throw ();

extern long double strtold (__const char *__restrict __nptr,
       char **__restrict __endptr) throw ();






extern long int strtol (__const char *__restrict __nptr,
   char **__restrict __endptr, int __base) throw ();

extern unsigned long int strtoul (__const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     throw ();




__extension__
extern long long int strtoq (__const char *__restrict __nptr,
        char **__restrict __endptr, int __base) throw ();

__extension__
extern unsigned long long int strtouq (__const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     throw ();





__extension__
extern long long int strtoll (__const char *__restrict __nptr,
         char **__restrict __endptr, int __base) throw ();

__extension__
extern unsigned long long int strtoull (__const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     throw ();

# 309 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern char *l64a (long int __n) throw ();


extern long int a64l (__const char *__s) throw () __attribute__ ((__pure__));




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 1 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
extern "C" {





typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;





typedef __ino64_t ino_t;




typedef __ino64_t ino64_t;




typedef __dev_t dev_t;
# 71 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
typedef __mode_t mode_t;




typedef __nlink_t nlink_t;
# 104 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
typedef __id_t id_t;
# 115 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 132 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 1 3 4
# 58 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4


typedef __clock_t clock_t;



# 74 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4


typedef __time_t time_t;



# 92 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
typedef __clockid_t clockid_t;
# 104 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
typedef __timer_t timer_t;
# 133 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 2 3 4







typedef __suseconds_t suseconds_t;





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 147 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 190 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 215 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/select.h" 1 3 4
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigset.h" 1 3 4
# 23 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 1 3 4
# 118 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 2 3 4

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 1 3 4
# 73 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 2 3 4



typedef long int __fd_mask;







typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 89 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/select.h" 3 4
extern "C" {






extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout) throw ();





extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask) throw ();


}
# 216 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sysmacros.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sysmacros.h" 3 4
__extension__
static __inline unsigned int gnu_dev_major (unsigned long long int __dev)
     throw ();
__extension__
static __inline unsigned int gnu_dev_minor (unsigned long long int __dev)
     throw ();
__extension__
static __inline unsigned long long int gnu_dev_makedev (unsigned int __major,
       unsigned int __minor)
     throw ();


__extension__ static __inline unsigned int
gnu_dev_major (unsigned long long int __dev) throw ()
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ static __inline unsigned int
gnu_dev_minor (unsigned long long int __dev) throw ()
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ static __inline unsigned long long int
gnu_dev_makedev (unsigned int __major, unsigned int __minor) throw ()
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}
# 219 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 2 3 4




typedef __blksize_t blksize_t;
# 243 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt_t;



typedef __fsblkcnt64_t fsblkcnt_t;



typedef __fsfilcnt64_t fsfilcnt_t;





typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;


}
# 318 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 2 3 4






extern long int random (void) throw ();


extern void srandom (unsigned int __seed) throw ();





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) throw ();



extern char *setstate (char *__statebuf) throw ();







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) throw ();

extern int srandom_r (unsigned int __seed, struct random_data *__buf) throw ();

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf) throw ();

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf) throw ();






extern int rand (void) throw ();

extern void srand (unsigned int __seed) throw ();




extern int rand_r (unsigned int *__seed) throw ();
# 390 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern double drand48 (void) throw ();
extern double erand48 (unsigned short int __xsubi[3]) throw ();



extern long int lrand48 (void) throw ();
extern long int nrand48 (unsigned short int __xsubi[3]) throw ();


extern long int mrand48 (void) throw ();
extern long int jrand48 (unsigned short int __xsubi[3]) throw ();


extern void srand48 (long int __seedval) throw ();
extern unsigned short int *seed48 (unsigned short int __seed16v[3]) throw ();
extern void lcong48 (unsigned short int __param[7]) throw ();





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    unsigned long long int __a;
  };



extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw ();
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw ();



extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result) throw ();
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result) throw ();


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result) throw ();
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result) throw ();


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     throw ();

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) throw ();

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer) throw ();









extern void *malloc (size_t __size) throw () __attribute__ ((__malloc__));

extern void *calloc (size_t __nmemb, size_t __size)
     throw () __attribute__ ((__malloc__));







extern void *realloc (void *__ptr, size_t __size) throw () __attribute__ ((__malloc__));

extern void free (void *__ptr) throw ();




extern void cfree (void *__ptr) throw ();



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/alloca.h" 1 3 4
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/alloca.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/alloca.h" 2 3 4

extern "C" {





extern void *alloca (size_t __size) throw ();





}
# 484 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 2 3 4




extern void *valloc (size_t __size) throw () __attribute__ ((__malloc__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     throw () __attribute__ ((__malloc__));




extern void abort (void) throw () __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) throw ();





extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     throw ();






extern void exit (int __status) throw () __attribute__ ((__noreturn__));






extern void _Exit (int __status) throw () __attribute__ ((__noreturn__));






extern char *getenv (__const char *__name) throw ();




extern char *__secure_getenv (__const char *__name) throw ();





extern int putenv (char *__string) throw ();





extern int setenv (__const char *__name, __const char *__value, int __replace)
     throw ();


extern int unsetenv (__const char *__name) throw ();
# 568 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern int clearenv (void) throw ();
# 577 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern char *mktemp (char *__template) throw ();
# 591 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern int mkstemp (char *__template) __asm__ ("" "mkstemp64");





extern int mkstemp64 (char *__template);
# 607 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) throw ();








extern int system (__const char *__command);

# 627 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern char *realpath (__const char *__restrict __name,
         char *__restrict __resolved) throw ();






typedef int (*__compar_fn_t) (__const void *, __const void *);


typedef __compar_fn_t comparison_fn_t;






extern void *bsearch (__const void *__key, __const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar);



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar);



extern int abs (int __x) throw () __attribute__ ((__const__));
extern long int labs (long int __x) throw () __attribute__ ((__const__));



__extension__ extern long long int llabs (long long int __x)
     throw () __attribute__ ((__const__));







extern div_t div (int __numer, int __denom)
     throw () __attribute__ ((__const__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     throw () __attribute__ ((__const__));




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     throw () __attribute__ ((__const__));








extern int mblen (__const char *__s, size_t __n) throw ();


extern int mbtowc (wchar_t *__restrict __pwc,
     __const char *__restrict __s, size_t __n) throw ();


extern int wctomb (char *__s, wchar_t __wchar) throw ();



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   __const char *__restrict __s, size_t __n) throw ();

extern size_t wcstombs (char *__restrict __s,
   __const wchar_t *__restrict __pwcs, size_t __n)
     throw ();

# 714 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern int rpmatch (__const char *__response) throw ();
# 725 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *__const *__restrict __tokens,
        char **__restrict __valuep) throw ();





extern void setkey (__const char *__key) throw ();







extern int posix_openpt (int __oflag) throw ();







extern int grantpt (int __fd) throw ();



extern int unlockpt (int __fd) throw ();




extern char *ptsname (int __fd) throw ();






extern int ptsname_r (int __fd, char *__buf, size_t __buflen) throw ();


extern int getpt (void) throw ();





}
# 3 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 1 3 4
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern "C" {



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 2 3 4
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4


typedef struct __STDIO_FILE_STRUCT FILE;





# 62 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
typedef struct __STDIO_FILE_STRUCT __FILE;
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 1 3 4
# 81 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 82 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 2 3 4





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 1 3 4
# 52 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 355 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 3 4
typedef unsigned int wint_t;
# 53 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 2 3 4

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/wchar.h" 1 3 4
# 55 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 2 3 4
# 81 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
typedef struct
{
 wchar_t __mask;
 wchar_t __wc;
} __mbstate_t;
# 88 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 2 3 4
# 119 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_mutex.h" 1 3 4
# 15 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_mutex.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 1 3 4
# 20 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sched.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sched.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 1 3 4
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sched.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sched.h" 1 3 4
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sched.h" 3 4
struct sched_param
  {
    int __sched_priority;
  };

extern "C" {



extern int clone (int (*__fn) (void *__arg), void *__child_stack,
    int __flags, void *__arg) throw ();


}
# 33 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sched.h" 2 3 4




extern "C" {


extern int sched_setparam (__pid_t __pid, __const struct sched_param *__param)
     throw ();


extern int sched_getparam (__pid_t __pid, struct sched_param *__param) throw ();


extern int sched_setscheduler (__pid_t __pid, int __policy,
          __const struct sched_param *__param) throw ();


extern int sched_getscheduler (__pid_t __pid) throw ();


extern int sched_yield (void) throw ();


extern int sched_get_priority_max (int __algorithm) throw ();


extern int sched_get_priority_min (int __algorithm) throw ();


extern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) throw ();

}
# 21 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 2 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 1 3 4
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
extern "C" {







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 2 3 4



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 1 3 4
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_clk_tck.h" 1 3 4
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 2 3 4
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 2 3 4
# 129 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4


struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;



  long int tm_gmtoff;
  __const char *tm_zone;





};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;
# 180 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4



extern clock_t clock (void) throw ();


extern time_t time (time_t *__timer) throw ();



extern double difftime (time_t __time1, time_t __time0)
     throw () __attribute__ ((__const__));



extern time_t mktime (struct tm *__tp) throw ();





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   __const char *__restrict __format,
   __const struct tm *__restrict __tp) throw ();





extern char *strptime (__const char *__restrict __s,
         __const char *__restrict __fmt, struct tm *__tp)
     throw ();
# 243 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4



extern struct tm *gmtime (__const time_t *__timer) throw ();



extern struct tm *localtime (__const time_t *__timer) throw ();





extern struct tm *gmtime_r (__const time_t *__restrict __timer,
       struct tm *__restrict __tp) throw ();



extern struct tm *localtime_r (__const time_t *__restrict __timer,
          struct tm *__restrict __tp) throw ();





extern char *asctime (__const struct tm *__tp) throw ();


extern char *ctime (__const time_t *__timer) throw ();







extern char *asctime_r (__const struct tm *__restrict __tp,
   char *__restrict __buf) throw ();


extern char *ctime_r (__const time_t *__restrict __timer,
        char *__restrict __buf) throw ();
# 299 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
extern char *tzname[2];



extern void tzset (void) throw ();



extern int daylight;
extern long int timezone;





extern int stime (__const time_t *__when) throw ();
# 329 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
extern time_t timegm (struct tm *__tp) throw ();


extern time_t timelocal (struct tm *__tp) throw ();


extern int dysize (int __year) throw () __attribute__ ((__const__));
# 344 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
extern int nanosleep (__const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) throw ();


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) throw ();


extern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp) throw ();
# 438 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/time.h" 3 4
}
# 22 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern "C" {

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigset.h" 1 3 4
# 34 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4
# 373 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
}
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 2 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/pthreadtypes.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 2 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/initspin.h" 1 3 4
# 27 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 2 3 4





extern "C" {
# 62 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
enum
{
  PTHREAD_CREATE_JOINABLE,

  PTHREAD_CREATE_DETACHED

};

enum
{
  PTHREAD_INHERIT_SCHED,

  PTHREAD_EXPLICIT_SCHED

};

enum
{
  PTHREAD_SCOPE_SYSTEM,

  PTHREAD_SCOPE_PROCESS

};

enum
{
  PTHREAD_MUTEX_ADAPTIVE_NP,
  PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_TIMED_NP

  ,
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_ADAPTIVE_NP,
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL



  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_ADAPTIVE_NP

};

enum
{
  PTHREAD_PROCESS_PRIVATE,

  PTHREAD_PROCESS_SHARED

};


enum
{
  PTHREAD_RWLOCK_PREFER_READER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_WRITER_NP
};
# 134 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
};



enum
{
  PTHREAD_CANCEL_ENABLE,

  PTHREAD_CANCEL_DISABLE

};
enum
{
  PTHREAD_CANCEL_DEFERRED,

  PTHREAD_CANCEL_ASYNCHRONOUS

};
# 166 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_create (pthread_t *__restrict __thread_id,
      __const pthread_attr_t *__restrict __attr,
      void *(*__start_routine) (void *),
      void *__restrict __arg) throw ();


extern pthread_t pthread_self (void) throw ();


extern int pthread_equal (pthread_t __thread1, pthread_t __thread2) throw ();


extern void pthread_exit (void *__retval)
     throw () __attribute__ ((__noreturn__));




extern int pthread_join (pthread_t __th, void **__thread_return) throw ();





extern int pthread_detach (pthread_t __th) throw ();







extern int pthread_attr_init (pthread_attr_t *__attr) throw ();


extern int pthread_attr_destroy (pthread_attr_t *__attr) throw ();


extern int pthread_attr_setdetachstate (pthread_attr_t *__attr,
     int __detachstate) throw ();


extern int pthread_attr_getdetachstate (__const pthread_attr_t *__attr,
     int *__detachstate) throw ();


extern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,
           __const struct sched_param *__restrict
           __param) throw ();


extern int pthread_attr_getschedparam (__const pthread_attr_t *__restrict
           __attr,
           struct sched_param *__restrict __param)
     throw ();


extern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)
     throw ();


extern int pthread_attr_getschedpolicy (__const pthread_attr_t *__restrict
     __attr, int *__restrict __policy)
     throw ();


extern int pthread_attr_setinheritsched (pthread_attr_t *__attr,
      int __inherit) throw ();


extern int pthread_attr_getinheritsched (__const pthread_attr_t *__restrict
      __attr, int *__restrict __inherit)
     throw ();


extern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)
     throw ();


extern int pthread_attr_getscope (__const pthread_attr_t *__restrict __attr,
      int *__restrict __scope) throw ();



extern int pthread_attr_setguardsize (pthread_attr_t *__attr,
          size_t __guardsize) throw ();


extern int pthread_attr_getguardsize (__const pthread_attr_t *__restrict
          __attr, size_t *__restrict __guardsize)
     throw ();






extern int pthread_attr_setstackaddr (pthread_attr_t *__attr,
          void *__stackaddr) throw ();


extern int pthread_attr_getstackaddr (__const pthread_attr_t *__restrict
          __attr, void **__restrict __stackaddr)
     throw ();
# 291 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_attr_setstacksize (pthread_attr_t *__attr,
          size_t __stacksize) throw ();


extern int pthread_attr_getstacksize (__const pthread_attr_t *__restrict
          __attr, size_t *__restrict __stacksize)
     throw ();
# 312 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_setschedparam (pthread_t __target_thread, int __policy,
      __const struct sched_param *__param)
     throw ();


extern int pthread_getschedparam (pthread_t __target_thread,
      int *__restrict __policy,
      struct sched_param *__restrict __param)
     throw ();



extern int pthread_getconcurrency (void) throw ();


extern int pthread_setconcurrency (int __level) throw ();
# 346 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_mutex_init (pthread_mutex_t *__restrict __mutex,
          __const pthread_mutexattr_t *__restrict
          __mutex_attr) throw ();


extern int pthread_mutex_destroy (pthread_mutex_t *__mutex) throw ();


extern int pthread_mutex_trylock (pthread_mutex_t *__mutex) throw ();


extern int pthread_mutex_lock (pthread_mutex_t *__mutex) throw ();



extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,
        __const struct timespec *__restrict
        __abstime) throw ();



extern int pthread_mutex_unlock (pthread_mutex_t *__mutex) throw ();






extern int pthread_mutexattr_init (pthread_mutexattr_t *__attr) throw ();


extern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr) throw ();


extern int pthread_mutexattr_getpshared (__const pthread_mutexattr_t *
      __restrict __attr,
      int *__restrict __pshared) throw ();


extern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,
      int __pshared) throw ();





extern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)
     throw ();


extern int pthread_mutexattr_gettype (__const pthread_mutexattr_t *__restrict
          __attr, int *__restrict __kind) throw ();







extern int pthread_cond_init (pthread_cond_t *__restrict __cond,
         __const pthread_condattr_t *__restrict
         __cond_attr) throw ();


extern int pthread_cond_destroy (pthread_cond_t *__cond) throw ();


extern int pthread_cond_signal (pthread_cond_t *__cond) throw ();


extern int pthread_cond_broadcast (pthread_cond_t *__cond) throw ();



extern int pthread_cond_wait (pthread_cond_t *__restrict __cond,
         pthread_mutex_t *__restrict __mutex) throw ();





extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,
       pthread_mutex_t *__restrict __mutex,
       __const struct timespec *__restrict
       __abstime) throw ();




extern int pthread_condattr_init (pthread_condattr_t *__attr) throw ();


extern int pthread_condattr_destroy (pthread_condattr_t *__attr) throw ();


extern int pthread_condattr_getpshared (__const pthread_condattr_t *
     __restrict __attr,
     int *__restrict __pshared) throw ();


extern int pthread_condattr_setpshared (pthread_condattr_t *__attr,
     int __pshared) throw ();







extern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,
    __const pthread_rwlockattr_t *__restrict
    __attr) throw ();


extern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock) throw ();


extern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock) throw ();


extern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock) throw ();


extern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock) throw ();


extern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock) throw ();
# 491 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock) throw ();





extern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr) throw ();


extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr) throw ();


extern int pthread_rwlockattr_getpshared (__const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pshared) throw ();


extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,
       int __pshared) throw ();


extern int pthread_rwlockattr_getkind_np (__const pthread_rwlockattr_t *__attr,
       int *__pref) throw ();


extern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,
       int __pref) throw ();
# 577 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_key_create (pthread_key_t *__key,
          void (*__destr_function) (void *)) throw ();


extern int pthread_key_delete (pthread_key_t __key) throw ();


extern int pthread_setspecific (pthread_key_t __key,
    __const void *__pointer) throw ();


extern void *pthread_getspecific (pthread_key_t __key) throw ();
# 597 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_once (pthread_once_t *__once_control,
    void (*__init_routine) (void)) throw ();






extern int pthread_setcancelstate (int __state, int *__oldstate) throw ();



extern int pthread_setcanceltype (int __type, int *__oldtype) throw ();


extern int pthread_cancel (pthread_t __thread_id) throw ();




extern void pthread_testcancel (void) throw ();
# 631 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern void _pthread_cleanup_push (struct _pthread_cleanup_buffer *__buffer,
       void (*__routine) (void *),
       void *__arg) throw ();







extern void _pthread_cleanup_pop (struct _pthread_cleanup_buffer *__buffer,
      int __execute) throw ();
# 653 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern void _pthread_cleanup_push_defer (struct _pthread_cleanup_buffer *__buffer,
      void (*__routine) (void *),
      void *__arg) throw ();
# 664 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern void _pthread_cleanup_pop_restore (struct _pthread_cleanup_buffer *__buffer,
       int __execute) throw ();
# 681 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigthread.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigthread.h" 3 4
extern int pthread_sigmask (int __how,
       __const __sigset_t *__restrict __newmask,
       __sigset_t *__restrict __oldmask)throw ();


extern int pthread_kill (pthread_t __thread_id, int __signo) throw ();
# 682 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 2 3 4
# 697 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/pthread.h" 3 4
extern int pthread_atfork (void (*__prepare) (void),
      void (*__parent) (void),
      void (*__child) (void)) throw ();




extern void pthread_kill_other_threads_np (void) throw ();

}
# 16 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_mutex.h" 2 3 4
# 120 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 2 3 4
# 170 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 3 4
typedef struct {
 __off_t __pos;

 __mbstate_t __mbstate;


 int __mblen_pending;

} __STDIO_fpos_t;


typedef struct {
 __off64_t __pos;

 __mbstate_t __mbstate;


 int __mblen_pending;

} __STDIO_fpos64_t;




typedef __off64_t __offmax_t;







typedef __ssize_t __io_read_fn(void *__cookie, char *__buf, size_t __bufsize);
typedef __ssize_t __io_write_fn(void *__cookie,
        __const char *__buf, size_t __bufsize);




typedef int __io_seek_fn(void *__cookie, __offmax_t *__pos, int __whence);
typedef int __io_close_fn(void *__cookie);

typedef struct {
 __io_read_fn *read;
 __io_write_fn *write;
 __io_seek_fn *seek;
 __io_close_fn *close;
} _IO_cookie_io_functions_t;



typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;

typedef _IO_cookie_io_functions_t cookie_io_functions_t;






struct __STDIO_FILE_STRUCT {
 unsigned short __modeflags;


 unsigned char __ungot_width[2];






 int __filedes;

 unsigned char *__bufstart;
 unsigned char *__bufend;
 unsigned char *__bufpos;
 unsigned char *__bufread;


 unsigned char *__bufgetc_u;


 unsigned char *__bufputc_u;





 struct __STDIO_FILE_STRUCT *__nextopen;


 void *__cookie;
 _IO_cookie_io_functions_t __gcs;


 wchar_t __ungot[2];


 __mbstate_t __state;





 int __user_locking;
 pthread_mutex_t __lock;





};
# 383 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 3 4
extern int __fgetc_unlocked(FILE *__stream);
extern int __fputc_unlocked(int __c, FILE *__stream);
# 402 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 3 4
extern FILE *__stdin;
# 461 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_stdio.h" 3 4
extern FILE *__stdout;
# 73 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 2 3 4



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stdarg.h" 1 3 4
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 77 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 2 3 4






typedef __STDIO_fpos64_t fpos_t;



typedef __STDIO_fpos64_t fpos64_t;
# 131 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/stdio_lim.h" 1 3 4
# 132 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 2 3 4



extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;







extern int remove (__const char *__filename) throw ();

extern int rename (__const char *__old, __const char *__new) throw ();




# 160 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern FILE *tmpfile (void) __asm__ ("" "tmpfile64");






extern FILE *tmpfile64 (void);



extern char *tmpnam (char *__s) throw ();





extern char *tmpnam_r (char *__s) throw ();
# 189 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     throw () __attribute__ ((__malloc__));








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 214 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 224 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fcloseall (void);




# 245 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern FILE *fopen (__const char *__restrict __filename, __const char *__restrict __modes) __asm__ ("" "fopen64");

extern FILE *freopen (__const char *__restrict __filename, __const char *__restrict __modes, FILE *__restrict __stream) __asm__ ("" "freopen64");









extern FILE *fopen64 (__const char *__restrict __filename,
        __const char *__restrict __modes);
extern FILE *freopen64 (__const char *__restrict __filename,
   __const char *__restrict __modes,
   FILE *__restrict __stream);




extern FILE *fdopen (int __fd, __const char *__modes) throw ();






extern FILE *fopencookie (void *__restrict __magic_cookie,
     __const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw ();


extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes) throw ();




extern FILE *open_memstream (char **__restrict __bufloc,
        size_t *__restrict __sizeloc) throw ();







extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) throw ();





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));
extern int __asprintf (char **__restrict __ptr,
         __const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int asprintf (char **__restrict __ptr,
       __const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));







extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...);




extern int scanf (__const char *__restrict __format, ...);

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) throw ();








extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0)));





extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0)));


extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 449 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 463 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 496 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);
# 515 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream);






extern char *gets (char *__s);

# 544 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream);
# 560 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream);
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream);







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream);








extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream);




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 621 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fputs_unlocked (__const char *__restrict __s,
      FILE *__restrict __stream);
# 632 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream);
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream);




extern void rewind (FILE *__stream);

# 676 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off64_t __off, int __whence) __asm__ ("" "fseeko64");


extern __off64_t ftello (FILE *__stream) __asm__ ("" "ftello64");








# 701 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos) __asm__ ("" "fgetpos64");

extern int fsetpos (FILE *__stream, __const fpos_t *__pos) __asm__ ("" "fsetpos64");









extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream);
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);




extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw ();

extern int ferror (FILE *__stream) throw ();




extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw ();
extern int ferror_unlocked (FILE *__stream) throw ();








extern void perror (__const char *__s);

# 756 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern int fileno (FILE *__stream) throw ();




extern int fileno_unlocked (FILE *__stream) throw ();
# 771 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes);





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      __const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       __const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw ();


extern void funlockfile (FILE *__stream) throw ();
# 858 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdio.h" 3 4
}
# 4 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdint.h" 1 3 4
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdint.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/wordsize.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdint.h" 2 3 4
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdint.h" 3 4
typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 131 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdint.h" 3 4
typedef unsigned int uintptr_t;
# 140 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 5 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stdarg.h" 1 3 4
# 105 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 6 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 1 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 3 4
extern "C" {




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 34 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 2 3 4




extern void *memcpy (void *__restrict __dest,
       __const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, __const void *__src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, __const void *__restrict __src,
        int __c, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int memcmp (__const void *__s1, __const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memchr (__const void *__s, int __c, size_t __n)
      throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern void *rawmemchr (__const void *__s, int __c)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern void *memrchr (__const void *__s, int __c, size_t __n)
      throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strcpy (char *__restrict __dest, __const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, __const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, __const char *__restrict __src,
        size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (__const char *__s1, __const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (__const char *__s1, __const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (__const char *__s1, __const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         __const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (2)));

# 138 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 3 4
extern char *strdup (__const char *__s)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (__const char *__string, size_t __n)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 173 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 3 4


extern char *strchr (__const char *__s, int __c)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

extern char *strrchr (__const char *__s, int __c)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strchrnul (__const char *__s, int __c)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strcspn (__const char *__s, __const char *__reject)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (__const char *__s, __const char *__accept)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strpbrk (__const char *__s, __const char *__accept)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strstr (__const char *__haystack, __const char *__needle)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *strtok (char *__restrict __s, __const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    __const char *__restrict __delim,
    char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,
         char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));




extern char *strcasestr (__const char *__haystack, __const char *__needle)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memmem (__const void *__haystack, size_t __haystacklen,
       __const void *__needle, size_t __needlelen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   __const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        __const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (__const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (__const char *__string, size_t __maxlen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) throw ();


extern char *__glibc_strerror_r (int __errnum, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2)));
extern int __xpg_strerror_r (int __errnum, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2)));
# 305 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 3 4
extern void __bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern void bcopy (__const void *__src, void *__dest, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int bcmp (__const void *__s1, __const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *index (__const char *__s, int __c)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern char *rindex (__const char *__s, int __c)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



extern int ffs (int __i) throw () __attribute__ ((__const__));




extern int ffsl (long int __l) throw () __attribute__ ((__const__));

__extension__ extern int ffsll (long long int __ll)
     throw () __attribute__ ((__const__));




extern int strcasecmp (__const char *__s1, __const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 373 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 3 4
extern char *strsep (char **__restrict __stringp,
       __const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (__const char *__s1, __const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strsignal (int __sig) throw ();


extern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   __const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
# 414 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/string.h" 3 4
extern char *basename (__const char *__filename) throw () __attribute__ ((__nonnull__ (1)));






extern size_t strlcat(char *__restrict dst, const char *__restrict src,
                      size_t n) throw () __attribute__ ((__nonnull__ (1, 2)));
extern size_t strlcpy(char *__restrict dst, const char *__restrict src,
                      size_t n) throw () __attribute__ ((__nonnull__ (1, 2)));


}
# 7 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 3 4
extern "C" {



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/fcntl.h" 1 3 4
# 139 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/fcntl.h" 3 4
typedef struct flock
  {
    short int l_type;
    short int l_whence;





    __off64_t l_start;
    __off64_t l_len;

    __pid_t l_pid;



} flock_t;


struct flock64
  {
    short int l_type;
    short int l_whence;
    __off64_t l_start;
    __off64_t l_len;
    __pid_t l_pid;
  };
# 34 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 2 3 4



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/stat.h" 1 3 4
# 96 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/stat.h" 3 4
extern "C" {

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/stat.h" 1 3 4
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/stat.h" 3 4
struct stat
  {
 __dev_t st_dev;
    long int st_pad1[3];



    __ino64_t st_ino;

    __mode_t st_mode;
    __nlink_t st_nlink;
    __uid_t st_uid;
    __gid_t st_gid;
    __dev_t st_rdev;






    long int st_pad2[3];
    __off64_t st_size;





    __time_t st_atime;
    long int __reserved0;
    __time_t st_mtime;
    long int __reserved1;
    __time_t st_ctime;
    long int __reserved2;
    __blksize_t st_blksize;



    long int st_pad4;
    __blkcnt64_t st_blocks;

    long int st_pad5[14];
  };


struct stat64
  {
    __dev_t st_dev;
    long int st_pad1[3];
    __ino64_t st_ino;
    __mode_t st_mode;
    __nlink_t st_nlink;
    __uid_t st_uid;
    __gid_t st_gid;
    __dev_t st_rdev;
    long int st_pad2[3];
    __off64_t st_size;




    __time_t st_atime;
    long int __reserved0;
    __time_t st_mtime;
    long int __reserved1;
    __time_t st_ctime;
    long int __reserved2;
    __blksize_t st_blksize;
    long int st_pad3;
    __blkcnt64_t st_blocks;
    long int st_pad4[14];
  };
# 99 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/stat.h" 2 3 4
# 208 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/stat.h" 3 4
extern int stat (__const char *__restrict __file, struct stat *__restrict __buf) throw () __asm__ ("" "stat64");



extern int fstat (int __fd, struct stat *__buf) throw () __asm__ ("" "fstat64");






extern int stat64 (__const char *__restrict __file,
     struct stat64 *__restrict __buf) throw ();
extern int fstat64 (int __fd, struct stat64 *__buf) throw ();
# 232 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/stat.h" 3 4
extern int lstat (__const char *__restrict __file, struct stat *__restrict __buf) throw () __asm__ ("" "lstat64");
# 241 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/stat.h" 3 4
extern int lstat64 (__const char *__restrict __file,
      struct stat64 *__restrict __buf) throw ();






extern int chmod (__const char *__file, __mode_t __mode) throw ();



extern int fchmod (int __fd, __mode_t __mode) throw ();





extern __mode_t umask (__mode_t __mask) throw ();




extern __mode_t getumask (void) throw ();



extern int mkdir (__const char *__path, __mode_t __mode) throw ();





extern int mknod (__const char *__path, __mode_t __mode, __dev_t __dev)
     throw ();



extern int mkfifo (__const char *__path, __mode_t __mode) throw ();

}
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 2 3 4
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 3 4
extern int fcntl (int __fd, int __cmd, ...) throw () __asm__ ("" "fcntl64");
# 78 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 3 4
extern int open (__const char *__file, int __oflag, ...) throw () __asm__ ("" "open64");






extern int open64 (__const char *__file, int __oflag, ...) throw ();
# 95 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 3 4
extern int creat (__const char *__file, __mode_t __mode) throw () __asm__ ("" "creat64");






extern int creat64 (__const char *__file, __mode_t __mode) throw ();
# 180 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/fcntl.h" 3 4
}
# 8 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/poll.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/poll.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/poll.h" 1 3 4
# 27 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/poll.h" 2 3 4



typedef unsigned long int nfds_t;


struct pollfd
  {
    int fd;
    short int events;
    short int revents;
  };


extern "C" {






extern int poll (struct pollfd *__fds, nfds_t __nfds, int __timeout) throw ();

}
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 2 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/termios.h" 1 3 4
# 36 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/termios.h" 3 4
extern "C" {



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/termios.h" 1 3 4
# 24 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/termios.h" 3 4
typedef unsigned char cc_t;
typedef unsigned int speed_t;
typedef unsigned int tcflag_t;


struct termios
  {
    tcflag_t c_iflag;
    tcflag_t c_oflag;
    tcflag_t c_cflag;
    tcflag_t c_lflag;
    cc_t c_line;
    cc_t c_cc[32];
  };
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/termios.h" 2 3 4
# 49 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/termios.h" 3 4
extern speed_t cfgetospeed (__const struct termios *__termios_p) throw ();


extern speed_t cfgetispeed (__const struct termios *__termios_p) throw ();


extern int cfsetospeed (struct termios *__termios_p, speed_t __speed) throw ();


extern int cfsetispeed (struct termios *__termios_p, speed_t __speed) throw ();



extern int cfsetspeed (struct termios *__termios_p, speed_t __speed) throw ();




extern int tcgetattr (int __fd, struct termios *__termios_p) throw ();



extern int tcsetattr (int __fd, int __optional_actions,
        __const struct termios *__termios_p) throw ();




extern void cfmakeraw (struct termios *__termios_p) throw ();



extern int tcsendbreak (int __fd, int __duration) throw ();


extern int tcdrain (int __fd) throw ();



extern int tcflush (int __fd, int __queue_selector) throw ();



extern int tcflow (int __fd, int __action) throw ();




extern __pid_t tcgetsid (int __fd) throw ();




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ttydefaults.h" 1 3 4
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/termios.h" 2 3 4


}
# 10 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern "C" {

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigset.h" 1 3 4
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigset.h" 3 4
extern int __sigismember (__const __sigset_t *, int);
extern int __sigaddset (__sigset_t *, int);
extern int __sigdelset (__sigset_t *, int);
# 34 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4






typedef __sig_atomic_t sig_atomic_t;
# 56 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/signum.h" 1 3 4
# 57 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4
# 71 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
typedef void (*__sighandler_t) (int);




extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)
     throw ();

extern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)
     throw ();






extern __sighandler_t signal (int __sig, __sighandler_t __handler) throw ();
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler) throw ();






extern int kill (__pid_t __pid, int __sig) throw ();






extern int killpg (__pid_t __pgrp, int __sig) throw ();



extern int raise (int __sig) throw ();



extern __sighandler_t ssignal (int __sig, __sighandler_t __handler) throw ();
extern int gsignal (int __sig) throw ();




extern void psignal (int __sig, __const char *__s) throw ();
# 140 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern int __sigpause (int __sig_or_mask, int __is_sig) throw ();




extern int sigpause (int __mask) throw ();
# 168 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern int sigblock (int __mask) throw ();


extern int sigsetmask (int __mask) throw ();


extern int siggetmask (void) throw ();
# 183 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
typedef __sighandler_t sighandler_t;




typedef __sighandler_t sig_t;
# 199 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/siginfo.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/siginfo.h" 3 4
typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/siginfo.h" 3 4
typedef struct siginfo
  {
    int si_signo;
    int si_code;
    int si_errno;


    union
      {
 int _pad[((128 / sizeof (int)) - 3)];


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
   } _kill;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     int si_status;
     __clock_t si_utime;
     __clock_t si_stime;
   } _sigchld;


 struct
   {
     void *si_addr;
   } _sigfault;


 struct
   {
     int si_band;
     int si_fd;
   } _sigpoll;


 struct
   {
     unsigned int _timer1;
     unsigned int _timer2;
   } _timer;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     sigval_t si_sigval;
   } _rt;
      } _sifields;
  } siginfo_t;
# 120 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/siginfo.h" 3 4
enum
{
  SI_ASYNCNL = -6,

  SI_SIGIO,

  SI_MESGQ,

  SI_TIMER,

  SI_ASYNCIO,

  SI_QUEUE,

  SI_USER,

  SI_KERNEL = 0x80

};



enum
{
  ILL_ILLOPC = 1,

  ILL_ILLOPN,

  ILL_ILLADR,

  ILL_ILLTRP,

  ILL_PRVOPC,

  ILL_PRVREG,

  ILL_COPROC,

  ILL_BADSTK

};


enum
{
  FPE_INTDIV = 1,

  FPE_INTOVF,

  FPE_FLTDIV,

  FPE_FLTOVF,

  FPE_FLTUND,

  FPE_FLTRES,

  FPE_FLTINV,

  FPE_FLTSUB

};


enum
{
  SEGV_MAPERR = 1,

  SEGV_ACCERR

};


enum
{
  BUS_ADRALN = 1,

  BUS_ADRERR,

  BUS_OBJERR

};


enum
{
  TRAP_BRKPT = 1,

  TRAP_TRACE

};


enum
{
  CLD_EXITED = 1,

  CLD_KILLED,

  CLD_DUMPED,

  CLD_TRAPPED,

  CLD_STOPPED,

  CLD_CONTINUED

};


enum
{
  POLL_IN = 1,

  POLL_OUT,

  POLL_MSG,

  POLL_ERR,

  POLL_PRI,

  POLL_HUP

};
# 259 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/siginfo.h" 3 4
struct __pthread_attr_s;


typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];

 struct
   {
     void (*_function) (sigval_t);
     struct __pthread_attr_s *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;






enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_CALLBACK,

  SIGEV_THREAD

};
# 200 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4



extern int sigemptyset (sigset_t *__set) throw ();


extern int sigfillset (sigset_t *__set) throw ();


extern int sigaddset (sigset_t *__set, int __signo) throw ();


extern int sigdelset (sigset_t *__set, int __signo) throw ();


extern int sigismember (__const sigset_t *__set, int __signo) throw ();



extern int sigisemptyset (__const sigset_t *__set) throw ();


extern int sigandset (sigset_t *__set, __const sigset_t *__left,
        __const sigset_t *__right) throw ();


extern int sigorset (sigset_t *__set, __const sigset_t *__left,
       __const sigset_t *__right) throw ();




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigaction.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigaction.h" 3 4
struct sigaction
  {

    unsigned int sa_flags;



    union
      {

 __sighandler_t sa_handler;

 void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;






    __sigset_t sa_mask;



    void (*sa_restorer) (void);


    int sa_resv[1];

  };
# 233 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4


extern int sigprocmask (int __how, __const sigset_t *__restrict __set,
   sigset_t *__restrict __oset) throw ();



extern int sigsuspend (__const sigset_t *__set) throw ();


extern int sigaction (int __sig, __const struct sigaction *__restrict __act,
        struct sigaction *__restrict __oact) throw ();


extern int sigpending (sigset_t *__set) throw ();



extern int sigwait (__const sigset_t *__restrict __set, int *__restrict __sig)
     throw ();



extern int sigwaitinfo (__const sigset_t *__restrict __set,
   siginfo_t *__restrict __info) throw ();



extern int sigtimedwait (__const sigset_t *__restrict __set,
    siginfo_t *__restrict __info,
    __const struct timespec *__restrict __timeout)
     throw ();



extern int sigqueue (__pid_t __pid, int __sig, __const union sigval __val)
     throw ();
# 284 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
struct sigvec
  {
    __sighandler_t sv_handler;
    int sv_mask;

    int sv_flags;

  };
# 304 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern int sigvec (int __sig, __const struct sigvec *__vec,
     struct sigvec *__ovec) throw ();



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigcontext.h" 1 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigcontext.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/sigcontext.h" 1 3 4
# 12 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/sigcontext.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/sgidefs.h" 1 3 4
# 13 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/sigcontext.h" 2 3 4







struct sigcontext {
 unsigned int sc_regmask;
 unsigned int sc_status;
 unsigned long long sc_pc;
 unsigned long long sc_regs[32];
 unsigned long long sc_fpregs[32];
 unsigned int sc_ownedfp;
 unsigned int sc_fpc_csr;
 unsigned int sc_fpc_eir;
 unsigned int sc_used_math;
 unsigned int sc_ssflags;
 unsigned long long sc_mdhi;
 unsigned long long sc_mdlo;

 unsigned int sc_cause;
 unsigned int sc_badvaddr;

 unsigned long sc_sigset[4];
};
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigcontext.h" 2 3 4
# 310 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4


extern int sigreturn (struct sigcontext *__scp) throw ();
# 322 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern int siginterrupt (int __sig, int __interrupt) throw ();

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigstack.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigstack.h" 3 4
struct sigstack
  {
    void *ss_sp;
    int ss_onstack;
  };



enum
{
  SS_ONSTACK = 1,

  SS_DISABLE

};
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sigstack.h" 3 4
typedef struct sigaltstack
  {
    void *ss_sp;
    size_t ss_size;
    int ss_flags;
  } stack_t;
# 325 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ucontext.h" 1 3 4
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ucontext.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ucontext.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ucontext.h" 3 4
typedef __uint32_t greg_t;
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ucontext.h" 3 4
typedef greg_t gregset_t[36];


enum
{
  CTX_R0 = 0,

  CTX_AT = 1,

  CTX_V0 = 2,

  CTX_V1 = 3,

  CTX_A0 = 4,

  CTX_A1 = 5,

  CTX_A2 = 6,

  CTX_A3 = 7,

  CTX_T0 = 8,

  CTX_T1 = 9,

  CTX_T2 = 10,

  CTX_T3 = 11,

  CTX_T4 = 12,

  CTX_T5 = 13,

  CTX_T6 = 14,

  CTX_T7 = 15,

  CTX_S0 = 16,

  CTX_S1 = 17,

  CTX_S2 = 18,

  CTX_S3 = 19,

  CTX_S4 = 20,

  CTX_S5 = 21,

  CTX_S6 = 22,

  CTX_S7 = 23,

  CTX_T8 = 24,

  CTX_T9 = 25,

  CTX_K0 = 26,

  CTX_K1 = 27,

  CTX_GP = 28,

  CTX_SP = 29,

  CTX_S8 = 30,

  CTX_RA = 31,

  CTX_MDLO = 32,

  CTX_MDHI = 33,

  CTX_CAUSE = 34,

  CTX_EPC = 35,

};


typedef struct fpregset
{
  union
  {

    double fp_dregs[16];
    float fp_fregs[32];
    unsigned int fp_regs[32];





  } fp_r;
  unsigned int fp_csr;
  unsigned int fp_pad;
} fpregset_t;


typedef struct
{
  gregset_t gpregs;
  fpregset_t fpregs;
} mcontext_t;


typedef struct ucontext
{

  unsigned long int uc_flags;



  struct ucontext *uc_link;
  __sigset_t uc_sigmask;
  stack_t uc_stack;
  mcontext_t uc_mcontext;
  int uc_filler[48];
} ucontext_t;
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ucontext.h" 2 3 4
# 327 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 2 3 4





extern int sigstack (struct sigstack *__ss, struct sigstack *__oss) throw ();



extern int sigaltstack (__const struct sigaltstack *__restrict __ss,
   struct sigaltstack *__restrict __oss) throw ();







extern int sighold (int __sig) throw ();


extern int sigrelse (int __sig) throw ();


extern int sigignore (int __sig) throw ();


extern __sighandler_t sigset (int __sig, __sighandler_t __disp) throw ();
# 367 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/signal.h" 3 4
extern int __libc_current_sigrtmin (void) throw ();

extern int __libc_current_sigrtmax (void) throw ();



}
# 11 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/assert.h" 1 3 4
# 36 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/assert.h" 3 4
extern "C" {
extern void __assert (const char *, const char *, int, const char *);
}
# 12 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/semaphore.h" 1 3 4
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/semaphore.h" 3 4
typedef struct
{
  struct _pthread_fastlock __sem_lock;
  int __sem_value;
  _pthread_descr __sem_waiting;
} sem_t;
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/semaphore.h" 3 4
extern "C" {



extern int sem_init (sem_t *__sem, int __pshared, unsigned int __value) throw ();


extern int sem_destroy (sem_t *__sem) throw ();


extern sem_t *sem_open (__const char *__name, int __oflag, ...) throw ();


extern int sem_close (sem_t *__sem) throw ();


extern int sem_unlink (__const char *__name) throw ();


extern int sem_wait (sem_t *__sem) throw ();



extern int sem_timedwait (sem_t *__restrict __sem,
     __const struct timespec *__restrict __abstime)
     throw ();



extern int sem_trywait (sem_t *__sem) throw ();


extern int sem_post (sem_t *__sem) throw ();


extern int sem_getvalue (sem_t *__restrict __sem, int *__restrict __sval)
     throw ();

}
# 14 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 3 4
extern "C" {



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/errno.h" 1 3 4
# 22 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/errno.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/errno_values.h" 1 3 4
# 23 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/errno.h" 2 3 4
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/errno.h" 3 4
extern int errno;


extern int *__errno_location (void) throw () __attribute__ ((__const__));
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 2 3 4
# 61 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 3 4
}
# 71 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 3 4
typedef int error_t;
# 15 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 1 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 2 3 4
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 3 4
extern "C" {
# 56 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };

typedef struct timezone *__restrict __timezone_ptr_t;
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    __timezone_ptr_t __tz) throw ();




extern int settimeofday (__const struct timeval *__tv,
    __const struct timezone *__tz) throw ();





extern int adjtime (__const struct timeval *__delta,
      struct timeval *__olddelta) throw ();




enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;




extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) throw ();




extern int setitimer (__itimer_which_t __which,
        __const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) throw ();



extern int utimes (__const char *__file, __const struct timeval __tvp[2])
     throw ();
# 171 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/time.h" 3 4
}
# 17 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/file.h" 1 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/file.h" 3 4
extern "C" {
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/file.h" 3 4
extern int flock (int __fd, int __operation) throw ();


}
# 18 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ioctl.h" 1 3 4
# 24 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ioctl.h" 3 4
extern "C" {


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ioctls.h" 1 3 4
# 24 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ioctls.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/ioctls.h" 1 3 4
# 12 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/ioctls.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/ioctl.h" 1 3 4
# 69 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/ioctl.h" 3 4
extern unsigned int __invalid_size_argument_for_IOC;
# 13 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/asm/ioctls.h" 2 3 4
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ioctls.h" 2 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ioctl.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ioctl-types.h" 1 3 4
# 27 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ioctl-types.h" 3 4
struct winsize
  {
    unsigned short int ws_row;
    unsigned short int ws_col;
    unsigned short int ws_xpixel;
    unsigned short int ws_ypixel;
  };


struct termio
  {
    unsigned short int c_iflag;
    unsigned short int c_oflag;
    unsigned short int c_cflag;
    unsigned short int c_lflag;
    char c_line;

    unsigned char c_cc[32 ];
  };
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ioctl.h" 2 3 4






# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ttydefaults.h" 1 3 4
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ioctl.h" 2 3 4




extern int ioctl (int __fd, unsigned long int __request, ...) throw ();

}
# 19 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 1 3 4
# 28 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 3 4
extern "C" {


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/resource.h" 1 3 4
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/resource.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/resource.h" 1 3 4
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/resource.h" 3 4
enum __rlimit_resource
{

  RLIMIT_CPU = 0,



  RLIMIT_FSIZE = 1,



  RLIMIT_DATA = 2,



  RLIMIT_STACK = 3,



  RLIMIT_CORE = 4,






  RLIMIT_RSS = 7,



  RLIMIT_NOFILE = 5,
  RLIMIT_OFILE = RLIMIT_NOFILE,




  RLIMIT_AS = 6,



  RLIMIT_NPROC = 8,



  RLIMIT_MEMLOCK = 9,



  RLIMIT_LOCKS = 10,


  RLIM_NLIMITS = 11


};
# 108 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/resource.h" 3 4
typedef __rlim64_t rlim_t;


typedef __rlim64_t rlim64_t;


struct rlimit
  {

    rlim_t rlim_cur;

    rlim_t rlim_max;
  };


struct rlimit64
  {

    rlim64_t rlim_cur;

    rlim64_t rlim_max;
 };



enum __rusage_who
{

  RUSAGE_SELF = 0,



  RUSAGE_CHILDREN = -1,



  RUSAGE_BOTH = -2

};


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/time.h" 1 3 4
# 150 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/resource.h" 2 3 4


struct rusage
  {

    struct timeval ru_utime;

    struct timeval ru_stime;

    long int ru_maxrss;


    long int ru_ixrss;

    long int ru_idrss;

    long int ru_isrss;


    long int ru_minflt;

    long int ru_majflt;

    long int ru_nswap;


    long int ru_inblock;

    long int ru_oublock;

    long int ru_msgsnd;

    long int ru_msgrcv;

    long int ru_nsignals;



    long int ru_nvcsw;


    long int ru_nivcsw;
  };







enum __priority_which
{
  PRIO_PROCESS = 0,

  PRIO_PGRP = 1,

  PRIO_USER = 2

};
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/resource.h" 2 3 4






extern "C" {
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/resource.h" 3 4
typedef int __rlimit_resource_t;
typedef int __rusage_who_t;
typedef int __priority_which_t;
# 55 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/resource.h" 3 4
extern int getrlimit (__rlimit_resource_t __resource, struct rlimit *__rlimits) throw () __asm__ ("" "getrlimit64");







extern int getrlimit64 (__rlimit_resource_t __resource,
   struct rlimit64 *__rlimits) throw ();
# 75 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/resource.h" 3 4
extern int setrlimit (__rlimit_resource_t __resource, __const struct rlimit *__rlimits) throw () __asm__ ("" "setrlimit64");







extern int setrlimit64 (__rlimit_resource_t __resource,
   __const struct rlimit64 *__rlimits) throw ();




extern int getrusage (__rusage_who_t __who, struct rusage *__usage) throw ();





extern int getpriority (__priority_which_t __which, id_t __who) throw ();



extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     throw ();

}
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 2 3 4
# 98 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;





extern __pid_t wait (void * __stat_loc) throw ();
# 129 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 3 4
extern __pid_t waitpid (__pid_t __pid, int *__stat_loc, int __options) throw ();



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/siginfo.h" 1 3 4
# 134 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 2 3 4
# 142 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/wait.h" 3 4
extern int waitid (idtype_t __idtype, __id_t __id, siginfo_t *__infop,
     int __options) throw ();





struct rusage;






extern __pid_t wait3 (void * __stat_loc, int __options,
        struct rusage * __usage) throw ();





struct rusage;


extern __pid_t wait4 (__pid_t __pid, void * __stat_loc, int __options,
        struct rusage *__usage) throw ();



}
# 20 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2


# 1 "/home/davidhu/svn.32M/apps/../middleware/HYTypes.h" 1
# 29 "/home/davidhu/svn.32M/apps/../middleware/HYTypes.h"
typedef void HYVoid;
typedef char HYI8;
typedef short HYI16;
typedef long HYI32;
typedef long long HYI64;
typedef unsigned char HYU8;
typedef unsigned short HYU16;
typedef unsigned long HYU32;
typedef unsigned long long HYU64;
typedef char HYChar;
typedef float HYFloat;
typedef double HYDouble;






typedef int HYBool;




typedef struct {
 HYU32 x;
 HYU32 y;
} HYPos;

typedef struct {
 HYU32 x;
 HYU32 y;
} HYPoint;

typedef struct {
 HYU32 x;
 HYU32 y;
 HYU32 width;
 HYU32 height;
} HYRect;

typedef struct {
 HYU32 width;
 HYU32 height;
} HYRectSize;
# 23 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HYDebug.h" 1
# 57 "/home/davidhu/svn.32M/apps/../middleware/HYDebug.h"
typedef enum
{
 HY_DEBUG_FATAL_ERROR = 0,
 HY_DEBUG_ERROR,
 HY_DEBUG_WARNING,
 HY_DEBUG_INFO,
 HY_DEBUG_VERBOSE
} HYDebugLevelType;
# 80 "/home/davidhu/svn.32M/apps/../middleware/HYDebug.h"
extern HYChar *HYErrorLevel[HY_DEBUG_VERBOSE + 1];




extern "C" {

extern HYVoid __DumpDataHex(const HYChar *pData, const HYI32 Length);

}
# 119 "/home/davidhu/svn.32M/apps/../middleware/HYDebug.h"
extern HYU64 HYDebugFilter;
extern HYDebugLevelType HYDebugLevel;
# 24 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HYThread.h" 1




extern "C" {
typedef struct
{
    int iCount;
    pthread_mutex_t mutex;
}HYThread_mutex_t;
# 21 "/home/davidhu/svn.32M/apps/../middleware/HYThread.h"
int _HYThread_mutex_init(HYThread_mutex_t *, const pthread_mutexattr_t *, const char *, const int, const char *);
int _HYThread_mutex_destroy(HYThread_mutex_t *, const char *, const int, const char *);
int _HYThread_mutex_lock(HYThread_mutex_t *, const char *, const int, const char *);
int _HYThread_mutex_timelock(HYThread_mutex_t *, const char *, const int, const char *);
int _HYThread_mutex_trylock(HYThread_mutex_t *, const char *, const int, const char *);
int _HYThread_mutex_unlock(HYThread_mutex_t *, const char *, const int, const char *);
}
# 25 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HYMemory.h" 1
# 13 "/home/davidhu/svn.32M/apps/../middleware/HYMemory.h"
extern "C" {
HYU32 HYInitMemManager(HYU32 totalMemSize);
void HYUninitMemManager(void);
}
# 26 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HYUtils.h" 1




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sem.h" 1 3 4
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sem.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 26 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sem.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ipc.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ipc.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ipc.h" 1 3 4
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/ipc.h" 3 4
struct ipc_perm
  {
    __key_t __key;
    unsigned int uid;
    unsigned int gid;
    unsigned int cuid;
    unsigned int cgid;
    unsigned int mode;
    unsigned short int __seq;
    unsigned short int __pad1;
    unsigned long int __unused1;
    unsigned long int __unused2;
};
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ipc.h" 2 3 4
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/ipc.h" 3 4
extern "C" {


extern key_t ftok (__const char *__pathname, int __proj_id) throw ();

}
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sem.h" 2 3 4


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sem.h" 1 3 4
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sem.h" 3 4
struct semid_ds
{
  struct ipc_perm sem_perm;
  __time_t sem_otime;
  __time_t sem_ctime;
  unsigned long int sem_nsems;
  unsigned long int __unused1;
  unsigned long int __unused2;
};
# 71 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/sem.h" 3 4
struct seminfo
{
  int semmap;
  int semmni;
  int semmns;
  int semmnu;
  int semmsl;
  int semopm;
  int semume;
  int semusz;
  int semvmx;
  int semaem;
};
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/sys/sem.h" 2 3 4





struct sembuf
{
  unsigned short int sem_num;
  short int sem_op;
  short int sem_flg;
};


extern "C" {


extern int semctl (int __semid, int __semnum, int __cmd, ...) throw ();


extern int semget (key_t __key, int __nsems, int __semflg) throw ();


extern int semop (int __semid, struct sembuf *__sops, size_t __nsops) throw ();

}
# 6 "/home/davidhu/svn.32M/apps/../middleware/HYUtils.h" 2

typedef struct
{
    HYI32 id;
    HYBool readOnly;
    HYChar devNodeName[64];
    HYChar label[12];
} PartitionInfo;




typedef unsigned long UTF32;
typedef unsigned short UTF16;
typedef unsigned char UTF8;
typedef unsigned char Boolean;
# 30 "/home/davidhu/svn.32M/apps/../middleware/HYUtils.h"
typedef enum
{
    conversionOK,
    sourceExhausted,
    targetExhausted,
    sourceIllegal
} ConversionResult;

typedef enum
{
    strictConversion = 0,
    lenientConversion
} ConversionFlags;


extern "C" {
void SetWorkingDir(const HYChar *path);
HYChar *GetWorkingDir(void);
HYU32 Checksum(HYChar *buffer, HYI32 len);
HYU32 ChecksumAdd(HYChar *buffer, HYI32 len, HYU32 dwCrc32);
HYU32 ChecksumEnd(HYU32 dwCrc32);
HYI32 GetUTF8ChLen(const HYChar* pUTF8Str);
HYI32 UTF8ToUnicode(const HYChar * pUTF8Str, const HYI32 nUTF8Length, HYChar * pUniStr, HYI32 nUniLength);
HYI32 strnUpcaseCopy(HYI8 *pDst, const HYI8 *pSrc, const HYI32 nCopy);
char *HYGetToken(char *buf, char *prefix, char endChar);
int EscapeStrcpy(char *pInDst, const char *pInSrc, const int SrcLen);
int UnescapeStrcpy(char *pInDst, const char *pInSrc, const int SrcLen);
int UnescapeHTMLStrcpy(char *pInDst, const char *pInSrc, const int SrcLen);




void GetVolumeLabel(char *dev, PartitionInfo *pinfo, int cnt);


int GetNameInOtherMountPoint(char *name, char *newName, int len);

void removeBlankInEndOfString(HYChar *pStr);
int SystemByFork(HYChar *command, HYChar **argv, HYU32 timeout_us);

struct Boyer_Moore_key
{
    char *Key;
    int KeyLength;
    int Table[256];
};
struct Boyer_Moore_key * Boyer_Moore_InitKey(const char *key, const int KeyLength);
void Boyer_Moore_DestroyKey(struct Boyer_Moore_key *key);

const char * Boyer_Moore_search(const char* input, const int inputLength, const struct Boyer_Moore_key *key);
# 99 "/home/davidhu/svn.32M/apps/../middleware/HYUtils.h"
ConversionResult ConvertUTF16toUTF8(const UTF16** sourceStart, const UTF16* sourceEnd,
                                    UTF8** targetStart, UTF8* targetEnd, ConversionFlags flags);

union semun
{
    int val;
    struct semid_ds buf;
    unsigned short array;
};

int sem_gen(key_t key);

int sem_get(key_t key);

void sem_reset(int semid);
void sem_del(int semid);
int sem_lock(int semid);
int sem_lockwait(int semid);
int sem_unlock(int semid);

}
# 27 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HYError.h" 1
# 28 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/utils/LinkedList.h" 1



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/malloc.h" 1 3 4
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/malloc.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 152 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/malloc.h" 2 3 4
# 104 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/malloc.h" 3 4
extern "C" {



extern void * malloc (size_t __size) throw () __attribute__ ((__malloc__));


extern void * calloc (size_t __nmemb, size_t __size) throw ()
       __attribute__ ((__malloc__));



extern void * realloc (void * __ptr, size_t __size) throw ()

       __attribute__ ((__malloc__));


extern void free (void * __ptr) throw ();


extern void * memalign (size_t __alignment, size_t __size) throw ();


extern void * valloc (size_t __size) throw () __attribute__ ((__malloc__));




struct mallinfo {
  int arena;
  int ordblks;
  int smblks;
  int hblks;
  int hblkhd;
  int usmblks;
  int fsmblks;
  int uordblks;
  int fordblks;
  int keepcost;
};


extern struct mallinfo mallinfo (void) throw ();



extern int malloc_trim(size_t pad);




extern void malloc_stats(FILE *file);
# 179 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/malloc.h" 3 4
extern int mallopt (int __param, int __val) throw ();





};
# 5 "/home/davidhu/svn.32M/apps/../middleware/utils/LinkedList.h" 2

typedef void (*free_function)(void *arg);
typedef int (*cmp_routine)(void *itemA,void *itemB);

typedef struct LISTNODE{
  void *item;
  struct LISTNODE *prev;
  struct LISTNODE *next;
} HYListNode;

typedef struct LINKEDLIST
{
  HYListNode head;
  HYListNode tail;
  long size;
  free_function free_func;
  cmp_routine cmp_func;
} HYLinkedList;


extern "C" {


int HYListInit( HYLinkedList * list, cmp_routine cmp_func, free_function free_func );

HYListNode *HYListAddAfter( HYLinkedList * list, void *item, HYListNode * bnode );
HYListNode *HYListAddBefore( HYLinkedList * list, void *item, HYListNode * anode );
HYListNode *HYListAddNode( HYLinkedList *list, void *item );
HYListNode *HYListHead( HYLinkedList * list );
HYListNode *HYListTail( HYLinkedList * list );
HYListNode *HYListFind( HYLinkedList * list, HYListNode * start, void *item );
HYListNode *HYListFindPrev( HYLinkedList * list, HYListNode * start, void *item );
void *HYListDelNode( HYLinkedList * list, HYListNode * dnode );
int HYListDestroy( HYLinkedList * list );
int HYListSize( HYLinkedList * list );


}
# 29 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 1


# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Types.h" 1



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++config.h" 1 3
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++config.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/os_defines.h" 1 3
# 36 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++config.h" 2 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++config.h" 3
namespace __gnu_debug_def { }

namespace __gnu_debug
{
  using namespace __gnu_debug_def;
}
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stringfwd.h" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stringfwd.h" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stringfwd.h" 3



namespace std
{
  template<typename _Alloc>
    class allocator;

  template<class _CharT>
    struct char_traits;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
           typename _Alloc = allocator<_CharT> >
    class basic_string;

  template<> struct char_traits<char>;

  typedef basic_string<char> string;






}
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstring" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstring" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstring" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstddef" 1 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstddef" 3
       
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstddef" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 49 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstddef" 2 3

namespace std
{
  using ::ptrdiff_t;
  using ::size_t;
}
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstring" 2 3
# 77 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstring" 3
namespace std
{
  using ::memcpy;
  using ::memmove;
  using ::strcpy;
  using ::strncpy;
  using ::strcat;
  using ::strncat;
  using ::memcmp;
  using ::strcmp;
  using ::strcoll;
  using ::strncmp;
  using ::strxfrm;
  using ::strcspn;
  using ::strspn;
  using ::strtok;
  using ::memset;
  using ::strerror;
  using ::strlen;

  using ::memchr;

  inline void*
  memchr(void* __p, int __c, size_t __n)
  { return memchr(const_cast<const void*>(__p), __c, __n); }

  using ::strchr;

  inline char*
  strchr(char* __s1, int __n)
  { return __builtin_strchr(const_cast<const char*>(__s1), __n); }

  using ::strpbrk;

  inline char*
  strpbrk(char* __s1, const char* __s2)
  { return __builtin_strpbrk(const_cast<const char*>(__s1), __s2); }

  using ::strrchr;

  inline char*
  strrchr(char* __s1, int __n)
  { return __builtin_strrchr(const_cast<const char*>(__s1), __n); }

  using ::strstr;

  inline char*
  strstr(char* __s1, const char* __s2)
  { return __builtin_strstr(const_cast<const char*>(__s1), __s2); }
}
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 1 3
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/climits" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/climits" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/climits" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/limits.h" 1 3 4
# 11 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/limits.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/syslimits.h" 1 3 4






# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/limits.h" 1 3 4
# 122 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/limits.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/limits.h" 1 3 4
# 144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/limits.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/posix1_lim.h" 1 3 4
# 130 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/posix1_lim.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/local_lim.h" 1 3 4
# 36 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/local_lim.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/linux/limits.h" 1 3 4
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/local_lim.h" 2 3 4
# 131 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/posix1_lim.h" 2 3 4
# 145 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/limits.h" 2 3 4



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/posix2_lim.h" 1 3 4
# 149 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/limits.h" 2 3 4



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/xopen_lim.h" 1 3 4
# 34 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/xopen_lim.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/stdio_lim.h" 1 3 4
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/xopen_lim.h" 2 3 4
# 153 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/limits.h" 2 3 4
# 123 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/limits.h" 2 3 4
# 8 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/syslimits.h" 2 3 4
# 12 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/limits.h" 2 3 4
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/climits" 2 3
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdlib" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdlib" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdlib" 3
# 90 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdlib" 3
namespace std
{

  using ::div_t;
  using ::ldiv_t;

  using ::abort;
  using ::abs;
  using ::atexit;
  using ::atof;
  using ::atoi;
  using ::atol;
  using ::bsearch;
  using ::calloc;
  using ::div;
  using ::exit;
  using ::free;
  using ::getenv;
  using ::labs;
  using ::ldiv;
  using ::malloc;

  using ::mblen;
  using ::mbstowcs;
  using ::mbtowc;

  using ::qsort;
  using ::rand;
  using ::realloc;
  using ::srand;
  using ::strtod;
  using ::strtol;
  using ::strtoul;
  using ::system;





  inline long
  abs(long __i) { return labs(__i); }

  inline ldiv_t
  div(long __i, long __j) { return ldiv(__i, __j); }
# 143 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdlib" 3
}
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 1 3
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 3
       
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdio" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdio" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdio" 3
# 97 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdio" 3
namespace std
{
  using ::FILE;
  using ::fpos_t;

  using ::clearerr;
  using ::fclose;
  using ::feof;
  using ::ferror;
  using ::fflush;
  using ::fgetc;
  using ::fgetpos;
  using ::fgets;
  using ::fopen;
  using ::fprintf;
  using ::fputc;
  using ::fputs;
  using ::fread;
  using ::freopen;
  using ::fscanf;
  using ::fseek;
  using ::fsetpos;
  using ::ftell;
  using ::fwrite;
  using ::getc;
  using ::getchar;
  using ::gets;
  using ::perror;
  using ::printf;
  using ::putc;
  using ::putchar;
  using ::puts;
  using ::remove;
  using ::rename;
  using ::rewind;
  using ::scanf;
  using ::setbuf;
  using ::setvbuf;
  using ::sprintf;
  using ::sscanf;
  using ::tmpfile;
  using ::tmpnam;
  using ::ungetc;
  using ::vfprintf;
  using ::vprintf;
  using ::vsprintf;
}
# 153 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdio" 3
namespace __gnu_cxx
{
# 167 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cstdio" 3
  using ::snprintf;
  using ::vfscanf;
  using ::vscanf;
  using ::vsnprintf;
  using ::vsscanf;

}

namespace std
{
  using __gnu_cxx::snprintf;
  using __gnu_cxx::vfscanf;
  using __gnu_cxx::vscanf;
  using __gnu_cxx::vsnprintf;
  using __gnu_cxx::vsscanf;
}
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/clocale" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/clocale" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/clocale" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 1 3 4
# 29 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 30 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 2 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_locale.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 2 3 4

extern "C" {
# 54 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 3 4
struct lconv
{


  char *decimal_point;
  char *thousands_sep;





  char *grouping;





  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;

  char p_cs_precedes;

  char p_sep_by_space;

  char n_cs_precedes;

  char n_sep_by_space;






  char p_sign_posn;
  char n_sign_posn;


  char int_p_cs_precedes;

  char int_p_sep_by_space;

  char int_n_cs_precedes;

  char int_n_sep_by_space;






  char int_p_sign_posn;
  char int_n_sign_posn;
# 121 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 3 4
};





extern char *setlocale (int __category, __const char *__locale) throw ();


extern struct lconv *localeconv (void) throw ();


# 229 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/locale.h" 3 4
}
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/clocale" 2 3





namespace std
{
  using ::lconv;
  using ::setlocale;
  using ::localeconv;
}
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 1 3 4
# 24 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/nl_types.h" 1 3 4
# 31 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/nl_types.h" 3 4
extern "C" {






typedef void *nl_catd;


typedef int nl_item;


extern nl_catd catopen (__const char *__cat_name, int __flag) throw ();



extern char *catgets (nl_catd __catalog, int __set, int __number,
        __const char *__string) throw ();


extern int catclose (nl_catd __catalog) throw ();

}
# 25 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 2 3 4




extern "C" {
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
enum
{



  ABDAY_1 = (((3) << (8)) | (0)),

  ABDAY_2,

  ABDAY_3,

  ABDAY_4,

  ABDAY_5,

  ABDAY_6,

  ABDAY_7,



  DAY_1,

  DAY_2,

  DAY_3,

  DAY_4,

  DAY_5,

  DAY_6,

  DAY_7,



  ABMON_1,

  ABMON_2,

  ABMON_3,

  ABMON_4,

  ABMON_5,

  ABMON_6,

  ABMON_7,

  ABMON_8,

  ABMON_9,

  ABMON_10,

  ABMON_11,

  ABMON_12,



  MON_1,

  MON_2,

  MON_3,

  MON_4,

  MON_5,

  MON_6,

  MON_7,

  MON_8,

  MON_9,

  MON_10,

  MON_11,

  MON_12,


  AM_STR,

  PM_STR,


  D_T_FMT,

  D_FMT,

  T_FMT,

  T_FMT_AMPM,


  ERA,

  __ERA_YEAR,



  ERA_D_FMT,

  ALT_DIGITS,

  ERA_D_T_FMT,

  ERA_T_FMT,
# 239 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
  _NL_NUM_LC_TIME,
# 359 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
  _NL_CTYPE_OUTDIGIT0_MB = (((0) << (8)) | (0)),
  _NL_CTYPE_OUTDIGIT1_MB,
  _NL_CTYPE_OUTDIGIT2_MB,
  _NL_CTYPE_OUTDIGIT3_MB,
  _NL_CTYPE_OUTDIGIT4_MB,
  _NL_CTYPE_OUTDIGIT5_MB,
  _NL_CTYPE_OUTDIGIT6_MB,
  _NL_CTYPE_OUTDIGIT7_MB,
  _NL_CTYPE_OUTDIGIT8_MB,
  _NL_CTYPE_OUTDIGIT9_MB,
  _NL_CTYPE_CODESET_NAME,
  CODESET = _NL_CTYPE_CODESET_NAME,






  __INT_CURR_SYMBOL = (((2) << (8)) | (0)),



  __CURRENCY_SYMBOL,



  __MON_DECIMAL_POINT,



  __MON_THOUSANDS_SEP,



  __MON_GROUPING,



  __POSITIVE_SIGN,



  __NEGATIVE_SIGN,



  __INT_FRAC_DIGITS,



  __FRAC_DIGITS,



  __P_CS_PRECEDES,



  __P_SEP_BY_SPACE,



  __N_CS_PRECEDES,



  __N_SEP_BY_SPACE,



  __P_SIGN_POSN,



  __N_SIGN_POSN,



  __INT_P_CS_PRECEDES,



  __INT_P_SEP_BY_SPACE,



  __INT_N_CS_PRECEDES,



  __INT_N_SEP_BY_SPACE,



  __INT_P_SIGN_POSN,



  __INT_N_SIGN_POSN,




  _NL_MONETARY_CRNCYSTR,
# 491 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
  _NL_NUM_LC_MONETARY,



  __DECIMAL_POINT = (((1) << (8)) | (0)),



  RADIXCHAR = __DECIMAL_POINT,

  __THOUSANDS_SEP,



  THOUSEP = __THOUSANDS_SEP,

  __GROUPING,
# 516 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
  _NL_NUM_LC_NUMERIC,

  __YESEXPR = (((5) << (8)) | (0)),

  __NOEXPR,

  __YESSTR,



  __NOSTR,






  _NL_NUM_LC_MESSAGES,
# 595 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
  _NL_NUM
};
# 605 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
extern char *nl_langinfo (nl_item __item) throw ();
# 626 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/langinfo.h" 3 4
}
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 2 3
# 73 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 3
namespace std
{



  typedef int* __c_locale;






  template<typename _Tv>
    int
    __convert_from_v(char* __out, const int __size, const char* __fmt,





       _Tv __v, const __c_locale&, int __prec)
    {
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++locale.h" 3
      const int __ret = std::snprintf(__out, __size, __fmt, __prec, __v);







      return __ret;
    }
}
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++io.h" 1 3
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++io.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr.h" 1 3
# 33 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr.h" 3
#pragma GCC visibility push(default)
# 114 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr-default.h" 1 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 63 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr-default.h" 3
#pragma weak pthread_once
#pragma weak pthread_key_create
#pragma weak pthread_key_delete
#pragma weak pthread_getspecific
#pragma weak pthread_setspecific
#pragma weak pthread_create
#pragma weak pthread_cancel

#pragma weak pthread_mutex_lock
#pragma weak pthread_mutex_trylock
#pragma weak pthread_mutex_unlock
#pragma weak pthread_mutexattr_init
#pragma weak pthread_mutexattr_settype
#pragma weak pthread_mutexattr_destroy

#pragma weak pthread_mutex_init
# 106 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr-default.h" 3
static inline int
__gthread_active_p (void)
{
  static void *const __gthread_active_ptr
    = __extension__ (void *) &pthread_cancel;
  return __gthread_active_ptr != 0;
}
# 473 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr-default.h" 3
static inline int
__gthread_once (__gthread_once_t *once, void (*func) (void))
{
  if (__gthread_active_p ())
    return pthread_once (once, func);
  else
    return -1;
}

static inline int
__gthread_key_create (__gthread_key_t *key, void (*dtor) (void *))
{
  return pthread_key_create (key, dtor);
}

static inline int
__gthread_key_delete (__gthread_key_t key)
{
  return pthread_key_delete (key);
}

static inline void *
__gthread_getspecific (__gthread_key_t key)
{
  return pthread_getspecific (key);
}

static inline int
__gthread_setspecific (__gthread_key_t key, const void *ptr)
{
  return pthread_setspecific (key, ptr);
}

static inline int
__gthread_mutex_lock (__gthread_mutex_t *mutex)
{
  if (__gthread_active_p ())
    return pthread_mutex_lock (mutex);
  else
    return 0;
}

static inline int
__gthread_mutex_trylock (__gthread_mutex_t *mutex)
{
  if (__gthread_active_p ())
    return pthread_mutex_trylock (mutex);
  else
    return 0;
}

static inline int
__gthread_mutex_unlock (__gthread_mutex_t *mutex)
{
  if (__gthread_active_p ())
    return pthread_mutex_unlock (mutex);
  else
    return 0;
}
# 555 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr-default.h" 3
static inline int
__gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)
{
  return __gthread_mutex_lock (mutex);
}

static inline int
__gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *mutex)
{
  return __gthread_mutex_trylock (mutex);
}

static inline int
__gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)
{
  return __gthread_mutex_unlock (mutex);
}
# 115 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/gthr.h" 2 3







#pragma GCC visibility pop
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++io.h" 2 3

namespace std
{
  typedef __gthread_mutex_t __c_lock;


  typedef FILE __c_file;



  struct __ios_flags
  {
    typedef short __int_type;

    static const __int_type _S_boolalpha = 0x0001;
    static const __int_type _S_dec = 0x0002;
    static const __int_type _S_fixed = 0x0004;
    static const __int_type _S_hex = 0x0008;
    static const __int_type _S_internal = 0x0010;
    static const __int_type _S_left = 0x0020;
    static const __int_type _S_oct = 0x0040;
    static const __int_type _S_right = 0x0080;
    static const __int_type _S_scientific = 0x0100;
    static const __int_type _S_showbase = 0x0200;
    static const __int_type _S_showpoint = 0x0400;
    static const __int_type _S_showpos = 0x0800;
    static const __int_type _S_skipws = 0x1000;
    static const __int_type _S_unitbuf = 0x2000;
    static const __int_type _S_uppercase = 0x4000;
    static const __int_type _S_adjustfield = 0x0020 | 0x0080 | 0x0010;
    static const __int_type _S_basefield = 0x0002 | 0x0040 | 0x0008;
    static const __int_type _S_floatfield = 0x0100 | 0x0004;


    static const __int_type _S_badbit = 0x01;
    static const __int_type _S_eofbit = 0x02;
    static const __int_type _S_failbit = 0x04;


    static const __int_type _S_app = 0x01;
    static const __int_type _S_ate = 0x02;
    static const __int_type _S_bin = 0x04;
    static const __int_type _S_in = 0x08;
    static const __int_type _S_out = 0x10;
    static const __int_type _S_trunc = 0x20;
  };
}
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cctype" 1 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cctype" 3
       
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cctype" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 1 3 4
# 32 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4
extern "C" {
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4
enum
{
  _ISupper = (1 << (0)),
  _ISlower = (1 << (1)),
  _ISalpha = (1 << (2)),
  _ISdigit = (1 << (3)),
  _ISxdigit = (1 << (4)),
  _ISspace = (1 << (5)),
  _ISprint = (1 << (6)),
  _ISgraph = (1 << (7)),
  _ISblank = (1 << (8)),
  _IScntrl = (1 << (9)),
  _ISpunct = (1 << (10)),
  _ISalnum = (1 << (11))
};




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_touplow.h" 1 3 4
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/bits/uClibc_touplow.h" 3 4
typedef __uint16_t __ctype_mask_t;



typedef __int16_t __ctype_touplow_t;
# 61 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 2 3 4
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4
extern const __ctype_mask_t *__C_ctype_b;
extern const __ctype_touplow_t *__C_ctype_toupper;
extern const __ctype_touplow_t *__C_ctype_tolower;
# 123 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4
extern const __ctype_mask_t *__ctype_b;
extern const __ctype_touplow_t *__ctype_toupper;
extern const __ctype_touplow_t *__ctype_tolower;
# 143 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4
extern int isxlower(int c) throw ();
extern int isxupper(int c) throw ();
# 155 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4






extern int isalnum (int) throw ();
extern int isalpha (int) throw ();
extern int iscntrl (int) throw ();
extern int isdigit (int) throw ();
extern int islower (int) throw ();
extern int isgraph (int) throw ();
extern int isprint (int) throw ();
extern int ispunct (int) throw ();
extern int isspace (int) throw ();
extern int isupper (int) throw ();
extern int isxdigit (int) throw ();



extern int tolower (int __c) throw ();


extern int toupper (int __c) throw ();








extern int isblank (int) throw ();






extern int isctype (int __c, int __mask) throw ();






extern int isascii (int __c) throw ();



extern int toascii (int __c) throw ();



extern int _toupper (int) throw ();
extern int _tolower (int) throw ();
# 382 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/ctype.h" 3 4
}
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cctype" 2 3
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cctype" 3
namespace std
{
  using ::isalnum;
  using ::isalpha;
  using ::iscntrl;
  using ::isdigit;
  using ::isgraph;
  using ::islower;
  using ::isprint;
  using ::ispunct;
  using ::isspace;
  using ::isupper;
  using ::isxdigit;
  using ::tolower;
  using ::toupper;
}
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 2 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 1 3
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 3
       
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwchar" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwchar" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwchar" 3



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ctime" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ctime" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ctime" 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ctime" 3
namespace std
{
  using ::clock_t;
  using ::time_t;
  using ::tm;

  using ::clock;
  using ::difftime;
  using ::mktime;
  using ::time;
  using ::asctime;
  using ::ctime;
  using ::gmtime;
  using ::localtime;
  using ::strftime;
}
# 52 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwchar" 2 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 1 3 4
# 52 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 53 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 2 3 4
# 105 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4


typedef __mbstate_t mbstate_t;



# 130 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
extern "C" {




struct tm;









extern wchar_t *wcscpy (wchar_t *__restrict __dest,
   __const wchar_t *__restrict __src) throw ();

extern wchar_t *wcsncpy (wchar_t *__restrict __dest,
    __const wchar_t *__restrict __src, size_t __n)
     throw ();


extern wchar_t *wcscat (wchar_t *__restrict __dest,
   __const wchar_t *__restrict __src) throw ();

extern wchar_t *wcsncat (wchar_t *__restrict __dest,
    __const wchar_t *__restrict __src, size_t __n)
     throw ();


extern int wcscmp (__const wchar_t *__s1, __const wchar_t *__s2)
     throw () __attribute__ ((__pure__));

extern int wcsncmp (__const wchar_t *__s1, __const wchar_t *__s2, size_t __n)
     throw () __attribute__ ((__pure__));




extern int wcscasecmp (__const wchar_t *__s1, __const wchar_t *__s2) throw ();


extern int wcsncasecmp (__const wchar_t *__s1, __const wchar_t *__s2,
   size_t __n) throw ();
# 193 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4



extern int wcscoll (__const wchar_t *__s1, __const wchar_t *__s2) throw ();



extern size_t wcsxfrm (wchar_t *__restrict __s1,
         __const wchar_t *__restrict __s2, size_t __n) throw ();

# 227 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
extern wchar_t *wcsdup (__const wchar_t *__s) throw () __attribute__ ((__malloc__));




extern wchar_t *wcschr (__const wchar_t *__wcs, wchar_t __wc)
     throw () __attribute__ ((__pure__));

extern wchar_t *wcsrchr (__const wchar_t *__wcs, wchar_t __wc)
     throw () __attribute__ ((__pure__));





extern wchar_t *wcschrnul (__const wchar_t *__s, wchar_t __wc)
     throw () __attribute__ ((__pure__));





extern size_t wcscspn (__const wchar_t *__wcs, __const wchar_t *__reject)
     throw () __attribute__ ((__pure__));


extern size_t wcsspn (__const wchar_t *__wcs, __const wchar_t *__accept)
     throw () __attribute__ ((__pure__));

extern wchar_t *wcspbrk (__const wchar_t *__wcs, __const wchar_t *__accept)
     throw () __attribute__ ((__pure__));

extern wchar_t *wcsstr (__const wchar_t *__haystack, __const wchar_t *__needle)
     throw () __attribute__ ((__pure__));


extern wchar_t *wcstok (wchar_t *__restrict __s,
   __const wchar_t *__restrict __delim,
   wchar_t **__restrict __ptr) throw ();


extern size_t wcslen (__const wchar_t *__s) throw () __attribute__ ((__pure__));




extern wchar_t *wcswcs (__const wchar_t *__haystack, __const wchar_t *__needle)
     throw () __attribute__ ((__pure__));




extern size_t wcsnlen (__const wchar_t *__s, size_t __maxlen)
     throw () __attribute__ ((__pure__));





extern wchar_t *wmemchr (__const wchar_t *__s, wchar_t __c, size_t __n)
     throw () __attribute__ ((__pure__));


extern int wmemcmp (__const wchar_t *__restrict __s1,
      __const wchar_t *__restrict __s2, size_t __n)
     throw () __attribute__ ((__pure__));


extern wchar_t *wmemcpy (wchar_t *__restrict __s1,
    __const wchar_t *__restrict __s2, size_t __n) throw ();



extern wchar_t *wmemmove (wchar_t *__s1, __const wchar_t *__s2, size_t __n)
     throw ();


extern wchar_t *wmemset (wchar_t *__s, wchar_t __c, size_t __n) throw ();





extern wchar_t *wmempcpy (wchar_t *__restrict __s1,
     __const wchar_t *__restrict __s2, size_t __n)
     throw ();






extern wint_t btowc (int __c) throw ();



extern int wctob (wint_t __c) throw ();



extern int mbsinit (__const mbstate_t *__ps) throw () __attribute__ ((__pure__));



extern size_t mbrtowc (wchar_t *__restrict __pwc,
         __const char *__restrict __s, size_t __n,
         mbstate_t *__p) throw ();


extern size_t wcrtomb (char *__restrict __s, wchar_t __wc,
         mbstate_t *__restrict __ps) throw ();


extern size_t __mbrlen (__const char *__restrict __s, size_t __n,
   mbstate_t *__restrict __ps) throw ();
extern size_t mbrlen (__const char *__restrict __s, size_t __n,
        mbstate_t *__restrict __ps) throw ();



extern size_t mbsrtowcs (wchar_t *__restrict __dst,
    __const char **__restrict __src, size_t __len,
    mbstate_t *__restrict __ps) throw ();



extern size_t wcsrtombs (char *__restrict __dst,
    __const wchar_t **__restrict __src, size_t __len,
    mbstate_t *__restrict __ps) throw ();






extern size_t mbsnrtowcs (wchar_t *__restrict __dst,
     __const char **__restrict __src, size_t __nmc,
     size_t __len, mbstate_t *__restrict __ps) throw ();



extern size_t wcsnrtombs (char *__restrict __dst,
     __const wchar_t **__restrict __src,
     size_t __nwc, size_t __len,
     mbstate_t *__restrict __ps) throw ();






extern int wcwidth (wchar_t __c) throw ();



extern int wcswidth (__const wchar_t *__s, size_t __n) throw ();







extern double wcstod (__const wchar_t *__restrict __nptr,
        wchar_t **__restrict __endptr) throw ();



extern float wcstof (__const wchar_t *__restrict __nptr,
       wchar_t **__restrict __endptr) throw ();
extern long double wcstold (__const wchar_t *__restrict __nptr,
       wchar_t **__restrict __endptr) throw ();






extern long int wcstol (__const wchar_t *__restrict __nptr,
   wchar_t **__restrict __endptr, int __base) throw ();



extern unsigned long int wcstoul (__const wchar_t *__restrict __nptr,
      wchar_t **__restrict __endptr, int __base)
     throw ();




__extension__
extern long long int wcstoll (__const wchar_t *__restrict __nptr,
         wchar_t **__restrict __endptr, int __base)
     throw ();



__extension__
extern unsigned long long int wcstoull (__const wchar_t *__restrict __nptr,
     wchar_t **__restrict __endptr,
     int __base) throw ();






__extension__
extern long long int wcstoq (__const wchar_t *__restrict __nptr,
        wchar_t **__restrict __endptr, int __base)
     throw ();



__extension__
extern unsigned long long int wcstouq (__const wchar_t *__restrict __nptr,
           wchar_t **__restrict __endptr,
           int __base) throw ();
# 529 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
extern wchar_t *wcpcpy (wchar_t *__dest, __const wchar_t *__src) throw ();



extern wchar_t *wcpncpy (wchar_t *__dest, __const wchar_t *__src, size_t __n)
     throw ();








extern int fwide (__FILE *__fp, int __mode) throw ();






extern int fwprintf (__FILE *__restrict __stream,
       __const wchar_t *__restrict __format, ...)
                                                           ;




extern int wprintf (__const wchar_t *__restrict __format, ...)
                                                           ;

extern int swprintf (wchar_t *__restrict __s, size_t __n,
       __const wchar_t *__restrict __format, ...)
     throw () ;





extern int vfwprintf (__FILE *__restrict __s,
        __const wchar_t *__restrict __format,
        __gnuc_va_list __arg)
                                                           ;




extern int vwprintf (__const wchar_t *__restrict __format,
       __gnuc_va_list __arg)
                                                           ;


extern int vswprintf (wchar_t *__restrict __s, size_t __n,
        __const wchar_t *__restrict __format,
        __gnuc_va_list __arg)
     throw () ;






extern int fwscanf (__FILE *__restrict __stream,
      __const wchar_t *__restrict __format, ...)
                                                          ;




extern int wscanf (__const wchar_t *__restrict __format, ...)
                                                          ;

extern int swscanf (__const wchar_t *__restrict __s,
      __const wchar_t *__restrict __format, ...)
     throw () ;











extern int vfwscanf (__FILE *__restrict __s,
       __const wchar_t *__restrict __format,
       __gnuc_va_list __arg)
                                                          ;




extern int vwscanf (__const wchar_t *__restrict __format,
      __gnuc_va_list __arg)
                                                          ;

extern int vswscanf (__const wchar_t *__restrict __s,
       __const wchar_t *__restrict __format,
       __gnuc_va_list __arg)
     throw () ;










extern wint_t fgetwc (__FILE *__stream);
extern wint_t getwc (__FILE *__stream);





extern wint_t getwchar (void);






extern wint_t fputwc (wchar_t __wc, __FILE *__stream);
extern wint_t putwc (wchar_t __wc, __FILE *__stream);





extern wint_t putwchar (wchar_t __wc);







extern wchar_t *fgetws (wchar_t *__restrict __ws, int __n,
   __FILE *__restrict __stream);





extern int fputws (__const wchar_t *__restrict __ws,
     __FILE *__restrict __stream);






extern wint_t ungetwc (wint_t __wc, __FILE *__stream);

# 697 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
extern wint_t getwc_unlocked (__FILE *__stream);
extern wint_t getwchar_unlocked (void);







extern wint_t fgetwc_unlocked (__FILE *__stream);







extern wint_t fputwc_unlocked (wchar_t __wc, __FILE *__stream);
# 723 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
extern wint_t putwc_unlocked (wchar_t __wc, __FILE *__stream);
extern wint_t putwchar_unlocked (wchar_t __wc);
# 733 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
extern wchar_t *fgetws_unlocked (wchar_t *__restrict __ws, int __n,
     __FILE *__restrict __stream);







extern int fputws_unlocked (__const wchar_t *__restrict __ws,
       __FILE *__restrict __stream);







extern size_t wcsftime (wchar_t *__restrict __s, size_t __maxsize,
   __const wchar_t *__restrict __format,
   __const struct tm *__restrict __tp) throw ();

# 784 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wchar.h" 3 4
}
# 55 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwchar" 2 3
# 69 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwchar" 3
namespace std
{
  using ::mbstate_t;
}
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 2 3





namespace std
{
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 3
  typedef int64_t streamoff;





  typedef ptrdiff_t streamsize;

  template<typename _StateT>
    class fpos;
# 94 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 3
  template<typename _StateT>
    class fpos
    {
    private:
      streamoff _M_off;
      _StateT _M_state;

    public:




      fpos()
      : _M_off(0), _M_state() { }
# 116 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/postypes.h" 3
      fpos(streamoff __off)
      : _M_off(__off), _M_state() { }


      operator streamoff() const { return _M_off; }


      void
      state(_StateT __st)
      { _M_state = __st; }


      _StateT
      state() const
      { return _M_state; }






      bool
      operator==(const fpos& __other) const
      { return _M_off == __other._M_off; }


      bool
      operator!=(const fpos& __other) const
      { return _M_off != __other._M_off; }





      fpos&
      operator+=(streamoff __off)
      {
 _M_off += __off;
 return *this;
      }





      fpos&
      operator-=(streamoff __off)
      {
 _M_off -= __off;
 return *this;
      }







      fpos
      operator+(streamoff __off) const
      {
 fpos __pos(*this);
 __pos += __off;
 return __pos;
      }







      fpos
      operator-(streamoff __off) const
      {
 fpos __pos(*this);
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator-(const fpos& __other) const
      { return _M_off - __other._M_off; }
    };





  typedef fpos<mbstate_t> streampos;

  typedef fpos<mbstate_t> wstreampos;
}
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/functexcept.h" 1 3
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/functexcept.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/exception_defines.h" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/functexcept.h" 2 3

namespace std
{

  void
  __throw_bad_exception(void) __attribute__((__noreturn__));


  void
  __throw_bad_alloc(void) __attribute__((__noreturn__));


  void
  __throw_bad_cast(void) __attribute__((__noreturn__));

  void
  __throw_bad_typeid(void) __attribute__((__noreturn__));


  void
  __throw_logic_error(const char* __s) __attribute__((__noreturn__));

  void
  __throw_domain_error(const char* __s) __attribute__((__noreturn__));

  void
  __throw_invalid_argument(const char* __s) __attribute__((__noreturn__));

  void
  __throw_length_error(const char* __s) __attribute__((__noreturn__));

  void
  __throw_out_of_range(const char* __s) __attribute__((__noreturn__));

  void
  __throw_runtime_error(const char* __s) __attribute__((__noreturn__));

  void
  __throw_range_error(const char* __s) __attribute__((__noreturn__));

  void
  __throw_overflow_error(const char* __s) __attribute__((__noreturn__));

  void
  __throw_underflow_error(const char* __s) __attribute__((__noreturn__));


  void
  __throw_ios_failure(const char* __s) __attribute__((__noreturn__));
}
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 2 3

namespace std
{
  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ios;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_streambuf;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_istream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ostream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_iostream;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
     typename _Alloc = allocator<_CharT> >
    class basic_stringbuf;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
    typename _Alloc = allocator<_CharT> >
    class basic_istringstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
    typename _Alloc = allocator<_CharT> >
    class basic_ostringstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
    typename _Alloc = allocator<_CharT> >
    class basic_stringstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_filebuf;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ifstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ofstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_fstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class istreambuf_iterator;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class ostreambuf_iterator;



  class ios_base;
# 135 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 3
  typedef basic_ios<char> ios;
  typedef basic_streambuf<char> streambuf;
  typedef basic_istream<char> istream;
  typedef basic_ostream<char> ostream;
  typedef basic_iostream<char> iostream;
  typedef basic_stringbuf<char> stringbuf;
  typedef basic_istringstream<char> istringstream;
  typedef basic_ostringstream<char> ostringstream;
  typedef basic_stringstream<char> stringstream;
  typedef basic_filebuf<char> filebuf;
  typedef basic_ifstream<char> ifstream;
  typedef basic_ofstream<char> ofstream;
  typedef basic_fstream<char> fstream;
# 165 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iosfwd" 3
}
# 70 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_pair.h" 1 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_pair.h" 3
namespace std
{

  template<class _T1, class _T2>
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair()
      : first(), second() { }


      pair(const _T1& __a, const _T2& __b)
      : first(__a), second(__b) { }


      template<class _U1, class _U2>
        pair(const pair<_U1, _U2>& __p)
 : first(__p.first), second(__p.second) { }
    };


  template<class _T1, class _T2>
    inline bool
    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first == __y.first && __x.second == __y.second; }


  template<class _T1, class _T2>
    inline bool
    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first < __y.first
      || (!(__y.first < __x.first) && __x.second < __y.second); }


  template<class _T1, class _T2>
    inline bool
    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__x == __y); }


  template<class _T1, class _T2>
    inline bool
    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __y < __x; }


  template<class _T1, class _T2>
    inline bool
    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__y < __x); }


  template<class _T1, class _T2>
    inline bool
    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__x < __y); }
# 142 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_pair.h" 3
  template<class _T1, class _T2>
    inline pair<_T1, _T2>
    make_pair(_T1 __x, _T2 __y)
    { return pair<_T1, _T2>(__x, __y); }
}
# 71 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/cpp_type_traits.h" 1 3
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/cpp_type_traits.h" 3
       
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/cpp_type_traits.h" 3
# 75 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/cpp_type_traits.h" 3
namespace __gnu_internal
{
  typedef char __one;
  typedef char __two[2];

  template<typename _Tp>
  __one __test_type(int _Tp::*);
  template<typename _Tp>
  __two& __test_type(...);
}


namespace __gnu_cxx
{
  template<typename _Iterator, typename _Container>
    class __normal_iterator;
}

struct __true_type { };
struct __false_type { };

namespace std
{
  template<bool>
    struct __truth_type
    { typedef __false_type __type; };

  template<>
    struct __truth_type<true>
    { typedef __true_type __type; };



  template<class _Sp, class _Tp>
    struct __traitor
    {
      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
      typedef typename __truth_type<__value>::__type __type;
    };


  template<typename, typename>
    struct __are_same
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __are_same<_Tp, _Tp>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename, bool>
    struct __enable_if
    {
    };

  template<typename _Tp>
    struct __enable_if<_Tp, true>
    {
      typedef _Tp __type;
    };


  template<typename _Tp>
    struct __is_void
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_void<void>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_integer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };




  template<>
    struct __is_integer<bool>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };
# 207 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/cpp_type_traits.h" 3
  template<>
    struct __is_integer<short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_floating
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };


  template<>
    struct __is_floating<float>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<long double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_pointer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __is_pointer<_Tp*>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_normal_iterator
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Iterator, typename _Container>
    struct __is_normal_iterator< __gnu_cxx::__normal_iterator<_Iterator,
             _Container> >
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_arithmetic
    : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
    { };




  template<typename _Tp>
    struct __is_fundamental
    : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> >
    { };




  template<typename _Tp>
    struct __is_scalar
    : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
    { };




  template<typename _Tp>
    struct __is_pod
    {
      enum
 {
   __value = (sizeof(__gnu_internal::__test_type<_Tp>(0))
       != sizeof(__gnu_internal::__one))
 };
    };

}
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_types.h" 1 3
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_types.h" 3
       
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_types.h" 3

namespace std
{
# 80 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_types.h" 3
  struct input_iterator_tag {};

  struct output_iterator_tag {};

  struct forward_iterator_tag : public input_iterator_tag {};


  struct bidirectional_iterator_tag : public forward_iterator_tag {};


  struct random_access_iterator_tag : public bidirectional_iterator_tag {};
# 104 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_types.h" 3
  template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
           typename _Pointer = _Tp*, typename _Reference = _Tp&>
    struct iterator
    {

      typedef _Category iterator_category;

      typedef _Tp value_type;

      typedef _Distance difference_type;

      typedef _Pointer pointer;

      typedef _Reference reference;
    };







  template<typename _Iterator>
    struct iterator_traits
    {
      typedef typename _Iterator::iterator_category iterator_category;
      typedef typename _Iterator::value_type value_type;
      typedef typename _Iterator::difference_type difference_type;
      typedef typename _Iterator::pointer pointer;
      typedef typename _Iterator::reference reference;
    };

  template<typename _Tp>
    struct iterator_traits<_Tp*>
    {
      typedef random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef _Tp& reference;
    };

  template<typename _Tp>
    struct iterator_traits<const _Tp*>
    {
      typedef random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef ptrdiff_t difference_type;
      typedef const _Tp* pointer;
      typedef const _Tp& reference;
    };







  template<typename _Iter>
    inline typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    { return typename iterator_traits<_Iter>::iterator_category(); }

}
# 73 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_funcs.h" 1 3
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_funcs.h" 3
       
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_funcs.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/concept_check.h" 1 3
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/concept_check.h" 3
       
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/concept_check.h" 3
# 69 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_funcs.h" 2 3

namespace std
{
  template<typename _InputIterator>
    inline typename iterator_traits<_InputIterator>::difference_type
    __distance(_InputIterator __first, _InputIterator __last,
               input_iterator_tag)
    {

     

      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      while (__first != __last)
 {
   ++__first;
   ++__n;
 }
      return __n;
    }

  template<typename _RandomAccessIterator>
    inline typename iterator_traits<_RandomAccessIterator>::difference_type
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag)
    {

     

      return __last - __first;
    }
# 112 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_funcs.h" 3
  template<typename _InputIterator>
    inline typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    {

      return std::__distance(__first, __last,
        std::__iterator_category(__first));
    }

  template<typename _InputIterator, typename _Distance>
    inline void
    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
    {

     
      while (__n--)
 ++__i;
    }

  template<typename _BidirectionalIterator, typename _Distance>
    inline void
    __advance(_BidirectionalIterator& __i, _Distance __n,
              bidirectional_iterator_tag)
    {

     

      if (__n > 0)
        while (__n--)
   ++__i;
      else
        while (__n++)
   --__i;
    }

  template<typename _RandomAccessIterator, typename _Distance>
    inline void
    __advance(_RandomAccessIterator& __i, _Distance __n,
              random_access_iterator_tag)
    {

     

      __i += __n;
    }
# 170 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator_base_funcs.h" 3
  template<typename _InputIterator, typename _Distance>
    inline void
    advance(_InputIterator& __i, _Distance __n)
    {

      std::__advance(__i, __n, std::__iterator_category(__i));
    }
}
# 74 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 1 3
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
namespace std
{
# 89 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Iterator>
    class reverse_iterator
    : public iterator<typename iterator_traits<_Iterator>::iterator_category,
        typename iterator_traits<_Iterator>::value_type,
        typename iterator_traits<_Iterator>::difference_type,
        typename iterator_traits<_Iterator>::pointer,
                      typename iterator_traits<_Iterator>::reference>
    {
    protected:
      _Iterator current;

    public:
      typedef _Iterator iterator_type;
      typedef typename iterator_traits<_Iterator>::difference_type
              difference_type;
      typedef typename iterator_traits<_Iterator>::reference reference;
      typedef typename iterator_traits<_Iterator>::pointer pointer;

    public:






      reverse_iterator() : current() { }




      explicit
      reverse_iterator(iterator_type __x) : current(__x) { }




      reverse_iterator(const reverse_iterator& __x)
      : current(__x.current) { }





      template<typename _Iter>
        reverse_iterator(const reverse_iterator<_Iter>& __x)
 : current(__x.base()) { }




      iterator_type
      base() const
      { return current; }






      reference
      operator*() const
      {
 _Iterator __tmp = current;
 return *--__tmp;
      }






      pointer
      operator->() const
      { return &(operator*()); }






      reverse_iterator&
      operator++()
      {
 --current;
 return *this;
      }






      reverse_iterator
      operator++(int)
      {
 reverse_iterator __tmp = *this;
 --current;
 return __tmp;
      }






      reverse_iterator&
      operator--()
      {
 ++current;
 return *this;
      }






      reverse_iterator operator--(int)
      {
 reverse_iterator __tmp = *this;
 ++current;
 return __tmp;
      }






      reverse_iterator
      operator+(difference_type __n) const
      { return reverse_iterator(current - __n); }






      reverse_iterator&
      operator+=(difference_type __n)
      {
 current -= __n;
 return *this;
      }






      reverse_iterator
      operator-(difference_type __n) const
      { return reverse_iterator(current + __n); }






      reverse_iterator&
      operator-=(difference_type __n)
      {
 current += __n;
 return *this;
      }






      reference
      operator[](difference_type __n) const
      { return *(*this + __n); }
    };
# 275 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Iterator>
    inline bool
    operator==(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return __x.base() == __y.base(); }

  template<typename _Iterator>
    inline bool
    operator<(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y.base() < __x.base(); }

  template<typename _Iterator>
    inline bool
    operator!=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__x == __y); }

  template<typename _Iterator>
    inline bool
    operator>(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y < __x; }

  template<typename _Iterator>
    inline bool
    operator<=(const reverse_iterator<_Iterator>& __x,
  const reverse_iterator<_Iterator>& __y)
    { return !(__y < __x); }

  template<typename _Iterator>
    inline bool
    operator>=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__x < __y); }

  template<typename _Iterator>
    inline typename reverse_iterator<_Iterator>::difference_type
    operator-(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y.base() - __x.base(); }

  template<typename _Iterator>
    inline reverse_iterator<_Iterator>
    operator+(typename reverse_iterator<_Iterator>::difference_type __n,
       const reverse_iterator<_Iterator>& __x)
    { return reverse_iterator<_Iterator>(__x.base() - __n); }
# 335 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Container>
    class back_insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;

    public:

      typedef _Container container_type;


      explicit
      back_insert_iterator(_Container& __x) : container(&__x) { }
# 361 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
      back_insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 container->push_back(__value);
 return *this;
      }


      back_insert_iterator&
      operator*()
      { return *this; }


      back_insert_iterator&
      operator++()
      { return *this; }


      back_insert_iterator
      operator++(int)
      { return *this; }
    };
# 395 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Container>
    inline back_insert_iterator<_Container>
    back_inserter(_Container& __x)
    { return back_insert_iterator<_Container>(__x); }
# 410 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Container>
    class front_insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;

    public:

      typedef _Container container_type;


      explicit front_insert_iterator(_Container& __x) : container(&__x) { }
# 435 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
      front_insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 container->push_front(__value);
 return *this;
      }


      front_insert_iterator&
      operator*()
      { return *this; }


      front_insert_iterator&
      operator++()
      { return *this; }


      front_insert_iterator
      operator++(int)
      { return *this; }
    };
# 469 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Container>
    inline front_insert_iterator<_Container>
    front_inserter(_Container& __x)
    { return front_insert_iterator<_Container>(__x); }
# 488 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Container>
    class insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;
      typename _Container::iterator iter;

    public:

      typedef _Container container_type;





      insert_iterator(_Container& __x, typename _Container::iterator __i)
      : container(&__x), iter(__i) {}
# 530 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
      insert_iterator&
      operator=(const typename _Container::const_reference __value)
      {
 iter = container->insert(iter, __value);
 ++iter;
 return *this;
      }


      insert_iterator&
      operator*()
      { return *this; }


      insert_iterator&
      operator++()
      { return *this; }


      insert_iterator&
      operator++(int)
      { return *this; }
    };
# 565 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _Container, typename _Iterator>
    inline insert_iterator<_Container>
    inserter(_Container& __x, _Iterator __i)
    {
      return insert_iterator<_Container>(__x,
      typename _Container::iterator(__i));
    }
}

namespace __gnu_cxx
{







  using std::iterator_traits;
  using std::iterator;
  template<typename _Iterator, typename _Container>
    class __normal_iterator
    {
    protected:
      _Iterator _M_current;

    public:
      typedef typename iterator_traits<_Iterator>::iterator_category
                                                             iterator_category;
      typedef typename iterator_traits<_Iterator>::value_type value_type;
      typedef typename iterator_traits<_Iterator>::difference_type
                                                             difference_type;
      typedef typename iterator_traits<_Iterator>::reference reference;
      typedef typename iterator_traits<_Iterator>::pointer pointer;

      __normal_iterator() : _M_current(_Iterator()) { }

      explicit
      __normal_iterator(const _Iterator& __i) : _M_current(__i) { }


      template<typename _Iter>
        inline __normal_iterator(const __normal_iterator<_Iter,
     _Container>& __i)
 : _M_current(__i.base()) { }


      reference
      operator*() const
      { return *_M_current; }

      pointer
      operator->() const
      { return _M_current; }

      __normal_iterator&
      operator++()
      {
 ++_M_current;
 return *this;
      }

      __normal_iterator
      operator++(int)
      { return __normal_iterator(_M_current++); }


      __normal_iterator&
      operator--()
      {
 --_M_current;
 return *this;
      }

      __normal_iterator
      operator--(int)
      { return __normal_iterator(_M_current--); }


      reference
      operator[](const difference_type& __n) const
      { return _M_current[__n]; }

      __normal_iterator&
      operator+=(const difference_type& __n)
      { _M_current += __n; return *this; }

      __normal_iterator
      operator+(const difference_type& __n) const
      { return __normal_iterator(_M_current + __n); }

      __normal_iterator&
      operator-=(const difference_type& __n)
      { _M_current -= __n; return *this; }

      __normal_iterator
      operator-(const difference_type& __n) const
      { return __normal_iterator(_M_current - __n); }

      const _Iterator&
      base() const
      { return _M_current; }
    };
# 678 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_iterator.h" 3
  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() == __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() == __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() != __rhs.base(); }


  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() < __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() < __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() > __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() > __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() <= __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() <= __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() >= __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() >= __rhs.base(); }





  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline typename __normal_iterator<_IteratorL, _Container>::difference_type
    operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline __normal_iterator<_Iterator, _Container>
    operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
       __n, const __normal_iterator<_Iterator, _Container>& __i)
    { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
}
# 75 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/debug/debug.h" 1 3
# 272 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/debug/debug.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cassert" 1 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cassert" 3
       
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cassert" 3
# 273 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/debug/debug.h" 2 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 275 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/debug/debug.h" 2 3



namespace __gnu_debug
{
  template<typename _Iterator, typename _Sequence>
    class _Safe_iterator;


  inline bool
  __check_singular_aux(const void*) { return false; }



  template<typename _Iterator>
    inline bool
    __check_singular(_Iterator& __x)
    { return __gnu_debug::__check_singular_aux(&__x); }


  template<typename _Tp>
    inline bool
    __check_singular(const _Tp* __ptr)
    { return __ptr == 0; }


  template<typename _Iterator, typename _Sequence>
    inline bool
    __check_singular(const _Safe_iterator<_Iterator, _Sequence>& __x)
    { return __x._M_singular(); }



  template<typename _Iterator>
    inline bool
    __check_dereferenceable(_Iterator&)
    { return true; }


  template<typename _Tp>
    inline bool
    __check_dereferenceable(const _Tp* __ptr)
    { return __ptr; }


  template<typename _Iterator, typename _Sequence>
    inline bool
    __check_dereferenceable(const _Safe_iterator<_Iterator, _Sequence>& __x)
    { return __x._M_dereferenceable(); }




  template<typename _RandomAccessIterator>
    inline bool
    __valid_range_aux2(const _RandomAccessIterator& __first,
         const _RandomAccessIterator& __last,
         std::random_access_iterator_tag)
    { return __last - __first >= 0; }





  template<typename _InputIterator>
    inline bool
    __valid_range_aux2(const _InputIterator&, const _InputIterator&,
         std::input_iterator_tag)
    { return true; }





  template<typename _Integral>
    inline bool
    __valid_range_aux(const _Integral&, const _Integral&, __true_type)
    { return true; }




  template<typename _InputIterator>
    inline bool
    __valid_range_aux(const _InputIterator& __first,
        const _InputIterator& __last, __false_type)
  {
    typedef typename std::iterator_traits<_InputIterator>::iterator_category
      _Category;
    return __gnu_debug::__valid_range_aux2(__first, __last, _Category());
  }






  template<typename _InputIterator>
    inline bool
    __valid_range(const _InputIterator& __first, const _InputIterator& __last)
    {
      typedef typename std::__is_integer<_InputIterator>::__type _Integral;
      return __gnu_debug::__valid_range_aux(__first, __last, _Integral());
    }


  template<typename _Iterator, typename _Sequence>
    inline bool
    __valid_range(const _Safe_iterator<_Iterator, _Sequence>& __first,
    const _Safe_iterator<_Iterator, _Sequence>& __last)
    { return __first._M_valid_range(__last); }





  template<typename _InputIterator>
    inline _InputIterator
    __check_valid_range(const _InputIterator& __first,
   const _InputIterator& __last)
    {
      ;
      return __first;
    }


  template<typename _CharT, typename _Integer>
    inline const _CharT*
    __check_string(const _CharT* __s, const _Integer& __n)
    {



      return __s;
    }


  template<typename _CharT>
    inline const _CharT*
    __check_string(const _CharT* __s)
    {



      return __s;
    }



  template<typename _InputIterator>
    inline bool
    __check_sorted_aux(const _InputIterator&, const _InputIterator&,
                       std::input_iterator_tag)
    { return true; }



  template<typename _ForwardIterator>
    inline bool
    __check_sorted_aux(_ForwardIterator __first, _ForwardIterator __last,
                       std::forward_iterator_tag)
    {
      if (__first == __last)
        return true;

      _ForwardIterator __next = __first;
      for (++__next; __next != __last; __first = __next, ++__next) {
        if (*__next < *__first)
          return false;
      }

      return true;
    }



  template<typename _InputIterator, typename _Predicate>
    inline bool
    __check_sorted_aux(const _InputIterator&, const _InputIterator&,
                       _Predicate, std::input_iterator_tag)
    { return true; }



  template<typename _ForwardIterator, typename _Predicate>
    inline bool
    __check_sorted_aux(_ForwardIterator __first, _ForwardIterator __last,
                       _Predicate __pred, std::forward_iterator_tag)
    {
      if (__first == __last)
        return true;

      _ForwardIterator __next = __first;
      for (++__next; __next != __last; __first = __next, ++__next) {
        if (__pred(*__next, *__first))
          return false;
      }

      return true;
    }


  template<typename _InputIterator>
    inline bool
    __check_sorted(const _InputIterator& __first, const _InputIterator& __last)
    {
      typedef typename std::iterator_traits<_InputIterator>::iterator_category
        _Category;
      return __gnu_debug::__check_sorted_aux(__first, __last, _Category());
    }

  template<typename _InputIterator, typename _Predicate>
    inline bool
    __check_sorted(const _InputIterator& __first, const _InputIterator& __last,
                   _Predicate __pred)
    {
      typedef typename std::iterator_traits<_InputIterator>::iterator_category
        _Category;
      return __gnu_debug::__check_sorted_aux(__first, __last, __pred,
          _Category());
    }




  template<typename _ForwardIterator, typename _Tp>
    inline bool
    __check_partitioned(_ForwardIterator __first, _ForwardIterator __last,
   const _Tp& __value)
    {
      while (__first != __last && *__first < __value)
 ++__first;
      while (__first != __last && !(*__first < __value))
 ++__first;
      return __first == __last;
    }


  template<typename _ForwardIterator, typename _Tp, typename _Pred>
    inline bool
    __check_partitioned(_ForwardIterator __first, _ForwardIterator __last,
   const _Tp& __value, _Pred __pred)
    {
      while (__first != __last && __pred(*__first, __value))
 ++__first;
      while (__first != __last && !__pred(*__first, __value))
 ++__first;
      return __first == __last;
    }
}
# 77 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 2 3

namespace std
{
# 90 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _Tp>
    inline void
    swap(_Tp& __a, _Tp& __b)
    {

     

      _Tp __tmp = __a;
      __a = __b;
      __b = __tmp;
    }




  template<bool _BoolType>
    struct __iter_swap
    {
      template<typename _ForwardIterator1, typename _ForwardIterator2>
        static void
        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
        {
          typedef typename iterator_traits<_ForwardIterator1>::value_type
            _ValueType1;
          _ValueType1 __tmp = *__a;
          *__a = *__b;
          *__b = __tmp;
 }
    };

  template<>
    struct __iter_swap<true>
    {
      template<typename _ForwardIterator1, typename _ForwardIterator2>
        static void
        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
        {
          swap(*__a, *__b);
        }
    };
# 140 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline void
    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
    {
      typedef typename iterator_traits<_ForwardIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_ForwardIterator2>::value_type
 _ValueType2;


     

     

     

     


      typedef typename iterator_traits<_ForwardIterator1>::reference
 _ReferenceType1;
      typedef typename iterator_traits<_ForwardIterator2>::reference
 _ReferenceType2;
      std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value &&
 __are_same<_ValueType1 &, _ReferenceType1>::__value &&
 __are_same<_ValueType2 &, _ReferenceType2>::__value>::
 iter_swap(__a, __b);
    }
# 182 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _Tp>
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    {

     

      if (__b < __a)
 return __b;
      return __a;
    }
# 204 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _Tp>
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    {

     

      if (__a < __b)
 return __b;
      return __a;
    }
# 226 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _Tp, typename _Compare>
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b, _Compare __comp)
    {

      if (__comp(__b, __a))
 return __b;
      return __a;
    }
# 246 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _Tp, typename _Compare>
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b, _Compare __comp)
    {

      if (__comp(__a, __b))
 return __b;
      return __a;
    }







  template<bool, typename>
    struct __copy
    {
      template<typename _II, typename _OI>
        static _OI
        copy(_II __first, _II __last, _OI __result)
        {
   for (; __first != __last; ++__result, ++__first)
     *__result = *__first;
   return __result;
 }
    };

  template<bool _BoolType>
    struct __copy<_BoolType, random_access_iterator_tag>
    {
      template<typename _II, typename _OI>
        static _OI
        copy(_II __first, _II __last, _OI __result)
        {
   typedef typename iterator_traits<_II>::difference_type _Distance;
   for(_Distance __n = __last - __first; __n > 0; --__n)
     {
       *__result = *__first;
       ++__first;
       ++__result;
     }
   return __result;
 }
    };

  template<>
    struct __copy<true, random_access_iterator_tag>
    {
      template<typename _Tp>
        static _Tp*
        copy(const _Tp* __first, const _Tp* __last, _Tp* __result)
        {
   std::memmove(__result, __first, sizeof(_Tp) * (__last - __first));
   return __result + (__last - __first);
 }
    };

  template<typename _II, typename _OI>
    inline _OI
    __copy_aux(_II __first, _II __last, _OI __result)
    {
      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
      typedef typename iterator_traits<_II>::iterator_category _Category;
      const bool __simple = (__is_scalar<_ValueTypeI>::__value
                      && __is_pointer<_II>::__value
                      && __is_pointer<_OI>::__value
        && __are_same<_ValueTypeI, _ValueTypeO>::__value);

      return std::__copy<__simple, _Category>::copy(__first, __last, __result);
    }

  template<bool, bool>
    struct __copy_normal
    {
      template<typename _II, typename _OI>
        static _OI
        copy_n(_II __first, _II __last, _OI __result)
        { return std::__copy_aux(__first, __last, __result); }
    };

  template<>
    struct __copy_normal<true, false>
    {
      template<typename _II, typename _OI>
        static _OI
        copy_n(_II __first, _II __last, _OI __result)
        { return std::__copy_aux(__first.base(), __last.base(), __result); }
    };

  template<>
    struct __copy_normal<false, true>
    {
      template<typename _II, typename _OI>
        static _OI
        copy_n(_II __first, _II __last, _OI __result)
        { return _OI(std::__copy_aux(__first, __last, __result.base())); }
    };

  template<>
    struct __copy_normal<true, true>
    {
      template<typename _II, typename _OI>
        static _OI
        copy_n(_II __first, _II __last, _OI __result)
        { return _OI(std::__copy_aux(__first.base(), __last.base(),
         __result.base())); }
    };
# 373 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    inline _OutputIterator
    copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result)
    {

     
     

      ;

       const bool __in = __is_normal_iterator<_InputIterator>::__value;
       const bool __out = __is_normal_iterator<_OutputIterator>::__value;
       return std::__copy_normal<__in, __out>::copy_n(__first, __last,
            __result);
    }

  template<bool, typename>
    struct __copy_backward
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        copy_b(_BI1 __first, _BI1 __last, _BI2 __result)
        {
   while (__first != __last)
     *--__result = *--__last;
   return __result;
 }
    };

  template<bool _BoolType>
    struct __copy_backward<_BoolType, random_access_iterator_tag>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        copy_b(_BI1 __first, _BI1 __last, _BI2 __result)
        {
   typename iterator_traits<_BI1>::difference_type __n;
   for (__n = __last - __first; __n > 0; --__n)
     *--__result = *--__last;
   return __result;
 }
    };

  template<>
    struct __copy_backward<true, random_access_iterator_tag>
    {
      template<typename _Tp>
        static _Tp*
        copy_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
        {
   const ptrdiff_t _Num = __last - __first;
   std::memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
   return __result - _Num;
 }
    };

  template<typename _BI1, typename _BI2>
    inline _BI2
    __copy_backward_aux(_BI1 __first, _BI1 __last, _BI2 __result)
    {
      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
      typedef typename iterator_traits<_BI1>::iterator_category _Category;
      const bool __simple = (__is_scalar<_ValueType1>::__value
                      && __is_pointer<_BI1>::__value
                      && __is_pointer<_BI2>::__value
        && __are_same<_ValueType1, _ValueType2>::__value);

      return std::__copy_backward<__simple, _Category>::copy_b(__first, __last,
              __result);
    }

  template<bool, bool>
    struct __copy_backward_normal
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return std::__copy_backward_aux(__first, __last, __result); }
    };

  template<>
    struct __copy_backward_normal<true, false>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return std::__copy_backward_aux(__first.base(), __last.base(),
       __result); }
    };

  template<>
    struct __copy_backward_normal<false, true>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return _BI2(std::__copy_backward_aux(__first, __last,
            __result.base())); }
    };

  template<>
    struct __copy_backward_normal<true, true>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return _BI2(std::__copy_backward_aux(__first.base(), __last.base(),
            __result.base())); }
    };
# 502 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template <typename _BI1, typename _BI2>
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    {

     
     
     


      ;

      const bool __bi1 = __is_normal_iterator<_BI1>::__value;
      const bool __bi2 = __is_normal_iterator<_BI2>::__value;
      return std::__copy_backward_normal<__bi1, __bi2>::copy_b_n(__first, __last,
         __result);
    }

  template<bool>
    struct __fill
    {
      template<typename _ForwardIterator, typename _Tp>
        static void
        fill(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __value)
        {
   for (; __first != __last; ++__first)
     *__first = __value;
 }
    };

  template<>
    struct __fill<true>
    {
      template<typename _ForwardIterator, typename _Tp>
        static void
        fill(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __value)
        {
   const _Tp __tmp = __value;
   for (; __first != __last; ++__first)
     *__first = __tmp;
 }
    };
# 558 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _ForwardIterator, typename _Tp>
    void
    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
    {

     

      ;

      const bool __scalar = __is_scalar<_Tp>::__value;
      std::__fill<__scalar>::fill(__first, __last, __value);
    }


  inline void
  fill(unsigned char* __first, unsigned char* __last, const unsigned char& __c)
  {
    ;
    const unsigned char __tmp = __c;
    std::memset(__first, __tmp, __last - __first);
  }

  inline void
  fill(signed char* __first, signed char* __last, const signed char& __c)
  {
    ;
    const signed char __tmp = __c;
    std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);
  }

  inline void
  fill(char* __first, char* __last, const char& __c)
  {
    ;
    const char __tmp = __c;
    std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);
  }

  template<bool>
    struct __fill_n
    {
      template<typename _OutputIterator, typename _Size, typename _Tp>
        static _OutputIterator
        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)
        {
   for (; __n > 0; --__n, ++__first)
     *__first = __value;
   return __first;
 }
    };

  template<>
    struct __fill_n<true>
    {
      template<typename _OutputIterator, typename _Size, typename _Tp>
        static _OutputIterator
        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)
        {
   const _Tp __tmp = __value;
   for (; __n > 0; --__n, ++__first)
     *__first = __tmp;
   return __first;
 }
    };
# 634 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _OutputIterator, typename _Size, typename _Tp>
    _OutputIterator
    fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)
    {

     

      const bool __scalar = __is_scalar<_Tp>::__value;
      return std::__fill_n<__scalar>::fill_n(__first, __n, __value);
    }

  template<typename _Size>
    inline unsigned char*
    fill_n(unsigned char* __first, _Size __n, const unsigned char& __c)
    {
      std::fill(__first, __first + __n, __c);
      return __first + __n;
    }

  template<typename _Size>
    inline signed char*
    fill_n(char* __first, _Size __n, const signed char& __c)
    {
      std::fill(__first, __first + __n, __c);
      return __first + __n;
    }

  template<typename _Size>
    inline char*
    fill_n(char* __first, _Size __n, const char& __c)
    {
      std::fill(__first, __first + __n, __c);
      return __first + __n;
    }
# 681 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    pair<_InputIterator1, _InputIterator2>
    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2)
    {

     
     
     


      ;

      while (__first1 != __last1 && *__first1 == *__first2)
        {
   ++__first1;
   ++__first2;
        }
      return pair<_InputIterator1, _InputIterator2>(__first1, __first2);
    }
# 716 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate>
    pair<_InputIterator1, _InputIterator2>
    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred)
    {

     
     
      ;

      while (__first1 != __last1 && __binary_pred(*__first1, *__first2))
        {
   ++__first1;
   ++__first2;
        }
      return pair<_InputIterator1, _InputIterator2>(__first1, __first2);
    }
# 746 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    inline bool
    equal(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2)
    {

     
     
     


      ;

      for (; __first1 != __last1; ++__first1, ++__first2)
 if (!(*__first1 == *__first2))
   return false;
      return true;
    }
# 778 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate>
    inline bool
    equal(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2,
   _BinaryPredicate __binary_pred)
    {

     
     
      ;

      for (; __first1 != __last1; ++__first1, ++__first2)
 if (!__binary_pred(*__first1, *__first2))
   return false;
      return true;
    }
# 810 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    bool
    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2)
    {

     
     
     


     


      ;
      ;

      for (; __first1 != __last1 && __first2 != __last2;
    ++__first1, ++__first2)
 {
   if (*__first1 < *__first2)
     return true;
   if (*__first2 < *__first1)
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 850 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _Compare>
    bool
    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _Compare __comp)
    {

     
     
      ;
      ;

      for (; __first1 != __last1 && __first2 != __last2;
    ++__first1, ++__first2)
 {
   if (__comp(*__first1, *__first2))
     return true;
   if (__comp(*__first2, *__first1))
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }

  inline bool
  lexicographical_compare(const unsigned char* __first1,
     const unsigned char* __last1,
     const unsigned char* __first2,
     const unsigned char* __last2)
  {
    ;
    ;

    const size_t __len1 = __last1 - __first1;
    const size_t __len2 = __last2 - __first2;
    const int __result = std::memcmp(__first1, __first2,
         std::min(__len1, __len2));
    return __result != 0 ? __result < 0 : __len1 < __len2;
  }

  inline bool
  lexicographical_compare(const char* __first1, const char* __last1,
     const char* __first2, const char* __last2)
  {
    ;
    ;


    return std::lexicographical_compare((const signed char*) __first1,
     (const signed char*) __last1,
     (const signed char*) __first2,
     (const signed char*) __last2);






  }

}
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 2 3


namespace __gnu_cxx
{
# 61 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 3
  template <class _CharT>
    struct _Char_types
    {
      typedef unsigned long int_type;
      typedef std::streampos pos_type;
      typedef std::streamoff off_type;
      typedef std::mbstate_t state_type;
    };
# 86 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 3
  template<typename _CharT>
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types<_CharT>::int_type int_type;
      typedef typename _Char_types<_CharT>::pos_type pos_type;
      typedef typename _Char_types<_CharT>::off_type off_type;
      typedef typename _Char_types<_CharT>::state_type state_type;

      static void
      assign(char_type& __c1, const char_type& __c2)
      { __c1 = __c2; }

      static bool
      eq(const char_type& __c1, const char_type& __c2)
      { return __c1 == __c2; }

      static bool
      lt(const char_type& __c1, const char_type& __c2)
      { return __c1 < __c2; }

      static int
      compare(const char_type* __s1, const char_type* __s2, std::size_t __n);

      static std::size_t
      length(const char_type* __s);

      static const char_type*
      find(const char_type* __s, std::size_t __n, const char_type& __a);

      static char_type*
      move(char_type* __s1, const char_type* __s2, std::size_t __n);

      static char_type*
      copy(char_type* __s1, const char_type* __s2, std::size_t __n);

      static char_type*
      assign(char_type* __s, std::size_t __n, char_type __a);

      static char_type
      to_char_type(const int_type& __c)
      { return static_cast<char_type>(__c); }

      static int_type
      to_int_type(const char_type& __c)
      { return static_cast<int_type>(__c); }

      static bool
      eq_int_type(const int_type& __c1, const int_type& __c2)
      { return __c1 == __c2; }

      static int_type
      eof()
      { return static_cast<int_type>((-1)); }

      static int_type
      not_eof(const int_type& __c)
      { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
    };

  template<typename _CharT>
    int
    char_traits<_CharT>::
    compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
    {
      for (size_t __i = 0; __i < __n; ++__i)
 if (lt(__s1[__i], __s2[__i]))
   return -1;
 else if (lt(__s2[__i], __s1[__i]))
   return 1;
      return 0;
    }

  template<typename _CharT>
    std::size_t
    char_traits<_CharT>::
    length(const char_type* __p)
    {
      std::size_t __i = 0;
      while (!eq(__p[__i], char_type()))
        ++__i;
      return __i;
    }

  template<typename _CharT>
    const typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    find(const char_type* __s, std::size_t __n, const char_type& __a)
    {
      for (std::size_t __i = 0; __i < __n; ++__i)
        if (eq(__s[__i], __a))
          return __s + __i;
      return 0;
    }

  template<typename _CharT>
    typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    move(char_type* __s1, const char_type* __s2, std::size_t __n)
    {
      return static_cast<_CharT*>(std::memmove(__s1, __s2,
            __n * sizeof(char_type)));
    }

  template<typename _CharT>
    typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    copy(char_type* __s1, const char_type* __s2, std::size_t __n)
    {
      std::copy(__s2, __s2 + __n, __s1);
      return __s1;
    }

  template<typename _CharT>
    typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    assign(char_type* __s, std::size_t __n, char_type __a)
    {
      std::fill_n(__s, __n, __a);
      return __s;
    }
}

namespace std
{
# 224 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 3
  template<class _CharT>
    struct char_traits : public __gnu_cxx::char_traits<_CharT>
    { };



  template<>
    struct char_traits<char>
    {
      typedef char char_type;
      typedef int int_type;
      typedef streampos pos_type;
      typedef streamoff off_type;
      typedef mbstate_t state_type;

      static void
      assign(char_type& __c1, const char_type& __c2)
      { __c1 = __c2; }

      static bool
      eq(const char_type& __c1, const char_type& __c2)
      { return __c1 == __c2; }

      static bool
      lt(const char_type& __c1, const char_type& __c2)
      { return __c1 < __c2; }

      static int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
      { return memcmp(__s1, __s2, __n); }

      static size_t
      length(const char_type* __s)
      { return strlen(__s); }

      static const char_type*
      find(const char_type* __s, size_t __n, const char_type& __a)
      { return static_cast<const char_type*>(memchr(__s, __a, __n)); }

      static char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
      { return static_cast<char_type*>(memmove(__s1, __s2, __n)); }

      static char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      { return static_cast<char_type*>(memcpy(__s1, __s2, __n)); }

      static char_type*
      assign(char_type* __s, size_t __n, char_type __a)
      { return static_cast<char_type*>(memset(__s, __a, __n)); }

      static char_type
      to_char_type(const int_type& __c)
      { return static_cast<char_type>(__c); }



      static int_type
      to_int_type(const char_type& __c)
      { return static_cast<int_type>(static_cast<unsigned char>(__c)); }

      static bool
      eq_int_type(const int_type& __c1, const int_type& __c2)
      { return __c1 == __c2; }

      static int_type
      eof() { return static_cast<int_type>((-1)); }

      static int_type
      not_eof(const int_type& __c)
      { return (__c == eof()) ? 0 : __c; }
  };
# 364 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/char_traits.h" 3
}
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 1 3
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
       
# 52 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/allocator.h" 1 3
# 52 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/allocator.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++allocator.h" 1 3
# 34 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++allocator.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ext/new_allocator.h" 1 3
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ext/new_allocator.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/new" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/new" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/exception" 1 3
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/exception" 3
#pragma GCC visibility push(default)

extern "C++" {

namespace std
{
# 54 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/exception" 3
  class exception
  {
  public:
    exception() throw() { }
    virtual ~exception() throw();


    virtual const char* what() const throw();
  };



  class bad_exception : public exception
  {
  public:
    bad_exception() throw() { }


    virtual ~bad_exception() throw();
  };


  typedef void (*terminate_handler) ();

  typedef void (*unexpected_handler) ();


  terminate_handler set_terminate(terminate_handler) throw();


  void terminate() __attribute__ ((__noreturn__));


  unexpected_handler set_unexpected(unexpected_handler) throw();


  void unexpected() __attribute__ ((__noreturn__));
# 102 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/exception" 3
  bool uncaught_exception() throw();
}

namespace __gnu_cxx
{
# 117 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/exception" 3
  void __verbose_terminate_handler ();
}

}

#pragma GCC visibility pop
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/new" 2 3

#pragma GCC visibility push(default)

extern "C++" {

namespace std
{





  class bad_alloc : public exception
  {
  public:
    bad_alloc() throw() { }


    virtual ~bad_alloc() throw();
  };

  struct nothrow_t { };
  extern const nothrow_t nothrow;


  typedef void (*new_handler)();

  new_handler set_new_handler(new_handler) throw();
}
# 84 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/new" 3
void* operator new(std::size_t) throw (std::bad_alloc);
void* operator new[](std::size_t) throw (std::bad_alloc);
void operator delete(void*) throw();
void operator delete[](void*) throw();
void* operator new(std::size_t, const std::nothrow_t&) throw();
void* operator new[](std::size_t, const std::nothrow_t&) throw();
void operator delete(void*, const std::nothrow_t&) throw();
void operator delete[](void*, const std::nothrow_t&) throw();


inline void* operator new(std::size_t, void* __p) throw() { return __p; }
inline void* operator new[](std::size_t, void* __p) throw() { return __p; }


inline void operator delete (void*, void*) throw() { }
inline void operator delete[](void*, void*) throw() { }

}

#pragma GCC visibility pop
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ext/new_allocator.h" 2 3


namespace __gnu_cxx
{







  template<typename _Tp>
    class new_allocator
    {
    public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef const _Tp* const_pointer;
      typedef _Tp& reference;
      typedef const _Tp& const_reference;
      typedef _Tp value_type;

      template<typename _Tp1>
        struct rebind
        { typedef new_allocator<_Tp1> other; };

      new_allocator() throw() { }

      new_allocator(const new_allocator&) throw() { }

      template<typename _Tp1>
        new_allocator(const new_allocator<_Tp1>&) throw() { }

      ~new_allocator() throw() { }

      pointer
      address(reference __x) const { return &__x; }

      const_pointer
      address(const_reference __x) const { return &__x; }



      pointer
      allocate(size_type __n, const void* = 0)
      {
 if (__builtin_expect(__n > this->max_size(), false))
   std::__throw_bad_alloc();

 return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }


      void
      deallocate(pointer __p, size_type)
      { ::operator delete(__p); }

      size_type
      max_size() const throw()
      { return size_t(-1) / sizeof(_Tp); }



      void
      construct(pointer __p, const _Tp& __val)
      { ::new(__p) _Tp(__val); }

      void
      destroy(pointer __p) { __p->~_Tp(); }
    };

  template<typename _Tp>
    inline bool
    operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
    { return true; }

  template<typename _Tp>
    inline bool
    operator!=(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
    { return false; }
}
# 35 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/c++allocator.h" 2 3
# 53 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/allocator.h" 2 3

namespace std
{
  template<typename _Tp>
    class allocator;


  template<>
    class allocator<void>
    {
    public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef void* pointer;
      typedef const void* const_pointer;
      typedef void value_type;

      template<typename _Tp1>
        struct rebind
        { typedef allocator<_Tp1> other; };
    };







  template<typename _Tp>
    class allocator: public __gnu_cxx::new_allocator<_Tp>
    {
   public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef const _Tp* const_pointer;
      typedef _Tp& reference;
      typedef const _Tp& const_reference;
      typedef _Tp value_type;

      template<typename _Tp1>
        struct rebind
        { typedef allocator<_Tp1> other; };

      allocator() throw() { }

      allocator(const allocator& __a) throw()
      : __gnu_cxx::new_allocator<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }


    };

  template<typename _T1, typename _T2>
    inline bool
    operator==(const allocator<_T1>&, const allocator<_T2>&)
    { return true; }

  template<typename _T1, typename _T2>
    inline bool
    operator!=(const allocator<_T1>&, const allocator<_T2>&)
    { return false; }





  extern template class allocator<char>;
  extern template class allocator<wchar_t>;




}
# 55 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_construct.h" 1 3
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_construct.h" 3
namespace std
{






  template<typename _T1, typename _T2>
    inline void
    _Construct(_T1* __p, const _T2& __value)
    {


      ::new(static_cast<void*>(__p)) _T1(__value);
    }







  template<typename _T1>
    inline void
    _Construct(_T1* __p)
    {


      ::new(static_cast<void*>(__p)) _T1();
    }






  template<typename _Tp>
    inline void
    _Destroy(_Tp* __pointer)
    { __pointer->~_Tp(); }
# 116 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_construct.h" 3
  template<typename _ForwardIterator>
    inline void
    __destroy_aux(_ForwardIterator __first, _ForwardIterator __last,
    __false_type)
    {
      for (; __first != __last; ++__first)
 std::_Destroy(&*__first);
    }
# 134 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_construct.h" 3
  template<typename _ForwardIterator>
    inline void
    __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)
    { }
# 146 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_construct.h" 3
  template<typename _ForwardIterator>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
                       _Value_type;
      typedef typename std::__is_scalar<_Value_type>::__type
                _Has_trivial_destructor;

      std::__destroy_aux(__first, __last, _Has_trivial_destructor());
    }
# 166 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_construct.h" 3
  template <typename _Tp> class allocator;

  template<typename _ForwardIterator, typename _Allocator>
    void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      _Allocator __alloc)
    {
      for (; __first != __last; ++__first)
 __alloc.destroy(&*__first);
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      allocator<_Tp>)
    {
      _Destroy(__first, __last);
    }


}
# 56 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 2 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_uninitialized.h" 1 3
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_uninitialized.h" 3
namespace std
{

  template<typename _InputIterator, typename _ForwardIterator>
    inline _ForwardIterator
    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,
        _ForwardIterator __result,
        __true_type)
    { return std::copy(__first, __last, __result); }

  template<typename _InputIterator, typename _ForwardIterator>
    inline _ForwardIterator
    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,
        _ForwardIterator __result,
        __false_type)
    {
      _ForwardIterator __cur = __result;
      try
 {
   for (; __first != __last; ++__first, ++__cur)
     std::_Construct(&*__cur, *__first);
   return __cur;
 }
      catch(...)
 {
   std::_Destroy(__result, __cur);
   throw;
 }
    }
# 105 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_uninitialized.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    inline _ForwardIterator
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
         _ForwardIterator __result)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;
      typedef typename std::__is_scalar<_ValueType>::__type _Is_POD;
      return std::__uninitialized_copy_aux(__first, __last, __result,
        _Is_POD());
    }

  inline char*
  uninitialized_copy(const char* __first, const char* __last, char* __result)
  {
    std::memmove(__result, __first, __last - __first);
    return __result + (__last - __first);
  }

  inline wchar_t*
  uninitialized_copy(const wchar_t* __first, const wchar_t* __last,
       wchar_t* __result)
  {
    std::memmove(__result, __first, sizeof(wchar_t) * (__last - __first));
    return __result + (__last - __first);
  }



  template<typename _ForwardIterator, typename _Tp>
    inline void
    __uninitialized_fill_aux(_ForwardIterator __first,
        _ForwardIterator __last,
        const _Tp& __x, __true_type)
    { std::fill(__first, __last, __x); }

  template<typename _ForwardIterator, typename _Tp>
    void
    __uninitialized_fill_aux(_ForwardIterator __first, _ForwardIterator __last,
        const _Tp& __x, __false_type)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __cur != __last; ++__cur)
     std::_Construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur);
   throw;
 }
    }
# 167 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_uninitialized.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline void
    uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
         const _Tp& __x)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;
      typedef typename std::__is_scalar<_ValueType>::__type _Is_POD;
      std::__uninitialized_fill_aux(__first, __last, __x, _Is_POD());
    }



  template<typename _ForwardIterator, typename _Size, typename _Tp>
    inline void
    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,
          const _Tp& __x, __true_type)
    { std::fill_n(__first, __n, __x); }

  template<typename _ForwardIterator, typename _Size, typename _Tp>
    void
    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,
          const _Tp& __x, __false_type)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __n > 0; --__n, ++__cur)
     std::_Construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur);
   throw;
 }
    }
# 212 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_uninitialized.h" 3
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    inline void
    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;
      typedef typename std::__is_scalar<_ValueType>::__type _Is_POD;
      std::__uninitialized_fill_n_aux(__first, __n, __x, _Is_POD());
    }







  template<typename _InputIterator, typename _ForwardIterator,
    typename _Allocator>
    _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
      _ForwardIterator __result,
      _Allocator __alloc)
    {
      _ForwardIterator __cur = __result;
      try
 {
   for (; __first != __last; ++__first, ++__cur)
     __alloc.construct(&*__cur, *__first);
   return __cur;
 }
      catch(...)
 {
   std::_Destroy(__result, __cur, __alloc);
   throw;
 }
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
      _ForwardIterator __result,
      allocator<_Tp>)
    {
      return std::uninitialized_copy(__first, __last, __result);
    }

  template<typename _ForwardIterator, typename _Tp, typename _Allocator>
    void
    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __x, _Allocator __alloc)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __cur != __last; ++__cur)
     __alloc.construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur, __alloc);
   throw;
 }
    }

  template<typename _ForwardIterator, typename _Tp, typename _Tp2>
    inline void
    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __x, allocator<_Tp2>)
    {
      std::uninitialized_fill(__first, __last, __x);
    }

  template<typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Allocator>
    void
    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n,
        const _Tp& __x,
        _Allocator __alloc)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __n > 0; --__n, ++__cur)
     __alloc.construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur, __alloc);
   throw;
 }
    }

  template<typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Tp2>
    void
    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n,
        const _Tp& __x,
        allocator<_Tp2>)
    {
      std::uninitialized_fill_n(__first, __n, __x);
    }
# 323 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_uninitialized.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _ForwardIterator, typename _Allocator>
    inline _ForwardIterator
    __uninitialized_copy_copy(_InputIterator1 __first1,
         _InputIterator1 __last1,
         _InputIterator2 __first2,
         _InputIterator2 __last2,
         _ForwardIterator __result,
         _Allocator __alloc)
    {
      _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
          __result,
          __alloc);
      try
 {
   return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 }
      catch(...)
 {
   std::_Destroy(__result, __mid, __alloc);
   throw;
 }
    }




  template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
    typename _Allocator>
    inline _ForwardIterator
    __uninitialized_fill_copy(_ForwardIterator __result, _ForwardIterator __mid,
         const _Tp& __x, _InputIterator __first,
         _InputIterator __last,
         _Allocator __alloc)
    {
      std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
      try
 {
   return std::__uninitialized_copy_a(__first, __last, __mid, __alloc);
 }
      catch(...)
 {
   std::_Destroy(__result, __mid, __alloc);
   throw;
 }
    }




  template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
    typename _Allocator>
    inline void
    __uninitialized_copy_fill(_InputIterator __first1, _InputIterator __last1,
         _ForwardIterator __first2,
         _ForwardIterator __last2, const _Tp& __x,
         _Allocator __alloc)
    {
      _ForwardIterator __mid2 = std::__uninitialized_copy_a(__first1, __last1,
           __first2,
           __alloc);
      try
 {
   std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 }
      catch(...)
 {
   std::_Destroy(__first2, __mid2, __alloc);
   throw;
 }
    }

}
# 58 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_raw_storage_iter.h" 1 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_raw_storage_iter.h" 3
namespace std
{




  template <class _ForwardIterator, class _Tp>
    class raw_storage_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _ForwardIterator _M_iter;

    public:
      explicit
      raw_storage_iterator(_ForwardIterator __x)
      : _M_iter(__x) {}

      raw_storage_iterator&
      operator*() { return *this; }

      raw_storage_iterator&
      operator=(const _Tp& __element)
      {
 std::_Construct(&*_M_iter, __element);
 return *this;
      }

      raw_storage_iterator<_ForwardIterator, _Tp>&
      operator++()
      {
 ++_M_iter;
 return *this;
      }

      raw_storage_iterator<_ForwardIterator, _Tp>
      operator++(int)
      {
 raw_storage_iterator<_ForwardIterator, _Tp> __tmp = *this;
 ++_M_iter;
 return __tmp;
      }
    };
}
# 59 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 2 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/limits" 1 3
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/limits" 3
       
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/limits" 3
# 149 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/limits" 3
namespace std
{





  enum float_round_style
  {
    round_indeterminate = -1,
    round_toward_zero = 0,
    round_to_nearest = 1,
    round_toward_infinity = 2,
    round_toward_neg_infinity = 3
  };







  enum float_denorm_style
  {

    denorm_indeterminate = -1,

    denorm_absent = 0,

    denorm_present = 1
  };
# 191 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/limits" 3
  struct __numeric_limits_base
  {


    static const bool is_specialized = false;




    static const int digits = 0;

    static const int digits10 = 0;

    static const bool is_signed = false;





    static const bool is_integer = false;




    static const bool is_exact = false;


    static const int radix = 0;



    static const int min_exponent = 0;


    static const int min_exponent10 = 0;



    static const int max_exponent = 0;


    static const int max_exponent10 = 0;


    static const bool has_infinity = false;


    static const bool has_quiet_NaN = false;


    static const bool has_signaling_NaN = false;

    static const float_denorm_style has_denorm = denorm_absent;


    static const bool has_denorm_loss = false;



    static const bool is_iec559 = false;



    static const bool is_bounded = false;




    static const bool is_modulo = false;


    static const bool traps = false;

    static const bool tinyness_before = false;



    static const float_round_style round_style = round_toward_zero;
  };
# 284 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/limits" 3
  template<typename _Tp>
    struct numeric_limits : public __numeric_limits_base
    {


      static _Tp min() throw() { return static_cast<_Tp>(0); }

      static _Tp max() throw() { return static_cast<_Tp>(0); }


      static _Tp epsilon() throw() { return static_cast<_Tp>(0); }

      static _Tp round_error() throw() { return static_cast<_Tp>(0); }

      static _Tp infinity() throw() { return static_cast<_Tp>(0); }

      static _Tp quiet_NaN() throw() { return static_cast<_Tp>(0); }


      static _Tp signaling_NaN() throw() { return static_cast<_Tp>(0); }



      static _Tp denorm_min() throw() { return static_cast<_Tp>(0); }
    };





  template<>
    struct numeric_limits<bool>
    {
      static const bool is_specialized = true;

      static bool min() throw()
      { return false; }
      static bool max() throw()
      { return true; }

      static const int digits = 1;
      static const int digits10 = 0;
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static bool epsilon() throw()
      { return false; }
      static bool round_error() throw()
      { return false; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static bool infinity() throw()
      { return false; }
      static bool quiet_NaN() throw()
      { return false; }
      static bool signaling_NaN() throw()
      { return false; }
      static bool denorm_min() throw()
      { return false; }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = false;




      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<char>
    {
      static const bool is_specialized = true;

      static char min() throw()
      { return (((char)(-1) < 0) ? (char)1 << (sizeof(char) * 8 - ((char)(-1) < 0)) : (char)0); }
      static char max() throw()
      { return (((char)(-1) < 0) ? ((char)1 << (sizeof(char) * 8 - ((char)(-1) < 0))) - 1 : ~(char)0); }

      static const int digits = (sizeof(char) * 8 - ((char)(-1) < 0));
      static const int digits10 = ((sizeof(char) * 8 - ((char)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = ((char)(-1) < 0);
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static char epsilon() throw()
      { return 0; }
      static char round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static char infinity() throw()
      { return char(); }
      static char quiet_NaN() throw()
      { return char(); }
      static char signaling_NaN() throw()
      { return char(); }
      static char denorm_min() throw()
      { return static_cast<char>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<signed char>
    {
      static const bool is_specialized = true;

      static signed char min() throw()
      { return -127 - 1; }
      static signed char max() throw()
      { return 127; }

      static const int digits = (sizeof(signed char) * 8 - ((signed char)(-1) < 0));
      static const int digits10 = ((sizeof(signed char) * 8 - ((signed char)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static signed char epsilon() throw()
      { return 0; }
      static signed char round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static signed char infinity() throw()
      { return static_cast<signed char>(0); }
      static signed char quiet_NaN() throw()
      { return static_cast<signed char>(0); }
      static signed char signaling_NaN() throw()
      { return static_cast<signed char>(0); }
      static signed char denorm_min() throw()
      { return static_cast<signed char>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned char>
    {
      static const bool is_specialized = true;

      static unsigned char min() throw()
      { return 0; }
      static unsigned char max() throw()
      { return 127 * 2U + 1; }

      static const int digits = (sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned char epsilon() throw()
      { return 0; }
      static unsigned char round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned char infinity() throw()
      { return static_cast<unsigned char>(0); }
      static unsigned char quiet_NaN() throw()
      { return static_cast<unsigned char>(0); }
      static unsigned char signaling_NaN() throw()
      { return static_cast<unsigned char>(0); }
      static unsigned char denorm_min() throw()
      { return static_cast<unsigned char>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<wchar_t>
    {
      static const bool is_specialized = true;

      static wchar_t min() throw()
      { return (((wchar_t)(-1) < 0) ? (wchar_t)1 << (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) : (wchar_t)0); }
      static wchar_t max() throw()
      { return (((wchar_t)(-1) < 0) ? ((wchar_t)1 << (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0))) - 1 : ~(wchar_t)0); }

      static const int digits = (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0));
      static const int digits10 = ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = ((wchar_t)(-1) < 0);
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static wchar_t epsilon() throw()
      { return 0; }
      static wchar_t round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static wchar_t infinity() throw()
      { return wchar_t(); }
      static wchar_t quiet_NaN() throw()
      { return wchar_t(); }
      static wchar_t signaling_NaN() throw()
      { return wchar_t(); }
      static wchar_t denorm_min() throw()
      { return wchar_t(); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<short>
    {
      static const bool is_specialized = true;

      static short min() throw()
      { return -32767 - 1; }
      static short max() throw()
      { return 32767; }

      static const int digits = (sizeof(short) * 8 - ((short)(-1) < 0));
      static const int digits10 = ((sizeof(short) * 8 - ((short)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static short epsilon() throw()
      { return 0; }
      static short round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static short infinity() throw()
      { return short(); }
      static short quiet_NaN() throw()
      { return short(); }
      static short signaling_NaN() throw()
      { return short(); }
      static short denorm_min() throw()
      { return short(); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned short>
    {
      static const bool is_specialized = true;

      static unsigned short min() throw()
      { return 0; }
      static unsigned short max() throw()
      { return 32767 * 2U + 1; }

      static const int digits = (sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned short epsilon() throw()
      { return 0; }
      static unsigned short round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned short infinity() throw()
      { return static_cast<unsigned short>(0); }
      static unsigned short quiet_NaN() throw()
      { return static_cast<unsigned short>(0); }
      static unsigned short signaling_NaN() throw()
      { return static_cast<unsigned short>(0); }
      static unsigned short denorm_min() throw()
      { return static_cast<unsigned short>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<int>
    {
      static const bool is_specialized = true;

      static int min() throw()
      { return -2147483647 - 1; }
      static int max() throw()
      { return 2147483647; }

      static const int digits = (sizeof(int) * 8 - ((int)(-1) < 0));
      static const int digits10 = ((sizeof(int) * 8 - ((int)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static int epsilon() throw()
      { return 0; }
      static int round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static int infinity() throw()
      { return static_cast<int>(0); }
      static int quiet_NaN() throw()
      { return static_cast<int>(0); }
      static int signaling_NaN() throw()
      { return static_cast<int>(0); }
      static int denorm_min() throw()
      { return static_cast<int>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned int>
    {
      static const bool is_specialized = true;

      static unsigned int min() throw()
      { return 0; }
      static unsigned int max() throw()
      { return 2147483647 * 2U + 1; }

      static const int digits = (sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned int epsilon() throw()
      { return 0; }
      static unsigned int round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned int infinity() throw()
      { return static_cast<unsigned int>(0); }
      static unsigned int quiet_NaN() throw()
      { return static_cast<unsigned int>(0); }
      static unsigned int signaling_NaN() throw()
      { return static_cast<unsigned int>(0); }
      static unsigned int denorm_min() throw()
      { return static_cast<unsigned int>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<long>
    {
      static const bool is_specialized = true;

      static long min() throw()
      { return -2147483647L - 1; }
      static long max() throw()
      { return 2147483647L; }

      static const int digits = (sizeof(long) * 8 - ((long)(-1) < 0));
      static const int digits10 = ((sizeof(long) * 8 - ((long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static long epsilon() throw()
      { return 0; }
      static long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static long infinity() throw()
      { return static_cast<long>(0); }
      static long quiet_NaN() throw()
      { return static_cast<long>(0); }
      static long signaling_NaN() throw()
      { return static_cast<long>(0); }
      static long denorm_min() throw()
      { return static_cast<long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned long>
    {
      static const bool is_specialized = true;

      static unsigned long min() throw()
      { return 0; }
      static unsigned long max() throw()
      { return 2147483647L * 2UL + 1; }

      static const int digits = (sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned long epsilon() throw()
      { return 0; }
      static unsigned long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned long infinity() throw()
      { return static_cast<unsigned long>(0); }
      static unsigned long quiet_NaN() throw()
      { return static_cast<unsigned long>(0); }
      static unsigned long signaling_NaN() throw()
      { return static_cast<unsigned long>(0); }
      static unsigned long denorm_min() throw()
      { return static_cast<unsigned long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<long long>
    {
      static const bool is_specialized = true;

      static long long min() throw()
      { return -9223372036854775807LL - 1; }
      static long long max() throw()
      { return 9223372036854775807LL; }

      static const int digits = (sizeof(long long) * 8 - ((long long)(-1) < 0));
      static const int digits10 = ((sizeof(long long) * 8 - ((long long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static long long epsilon() throw()
      { return 0; }
      static long long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static long long infinity() throw()
      { return static_cast<long long>(0); }
      static long long quiet_NaN() throw()
      { return static_cast<long long>(0); }
      static long long signaling_NaN() throw()
      { return static_cast<long long>(0); }
      static long long denorm_min() throw()
      { return static_cast<long long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned long long>
    {
      static const bool is_specialized = true;

      static unsigned long long min() throw()
      { return 0; }
      static unsigned long long max() throw()
      { return 9223372036854775807LL * 2ULL + 1; }

      static const int digits = (sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned long long epsilon() throw()
      { return 0; }
      static unsigned long long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned long long infinity() throw()
      { return static_cast<unsigned long long>(0); }
      static unsigned long long quiet_NaN() throw()
      { return static_cast<unsigned long long>(0); }
      static unsigned long long signaling_NaN() throw()
      { return static_cast<unsigned long long>(0); }
      static unsigned long long denorm_min() throw()
      { return static_cast<unsigned long long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<float>
    {
      static const bool is_specialized = true;

      static float min() throw()
      { return 1.17549435e-38F; }
      static float max() throw()
      { return 3.40282347e+38F; }

      static const int digits = 24;
      static const int digits10 = 6;
      static const bool is_signed = true;
      static const bool is_integer = false;
      static const bool is_exact = false;
      static const int radix = 2;
      static float epsilon() throw()
      { return 1.19209290e-7F; }
      static float round_error() throw()
      { return 0.5F; }

      static const int min_exponent = (-125);
      static const int min_exponent10 = (-37);
      static const int max_exponent = 128;
      static const int max_exponent10 = 38;

      static const bool has_infinity = 1;
      static const bool has_quiet_NaN = 1;
      static const bool has_signaling_NaN = has_quiet_NaN;
      static const float_denorm_style has_denorm
 = bool(1.40129846e-45F) ? denorm_present : denorm_absent;
      static const bool has_denorm_loss = false;

      static float infinity() throw()
      { return __builtin_huge_valf (); }
      static float quiet_NaN() throw()
      { return __builtin_nanf (""); }
      static float signaling_NaN() throw()
      { return __builtin_nansf (""); }
      static float denorm_min() throw()
      { return 1.40129846e-45F; }

      static const bool is_iec559
 = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
      static const bool is_bounded = true;
      static const bool is_modulo = false;

      static const bool traps = false;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_to_nearest;
    };






  template<>
    struct numeric_limits<double>
    {
      static const bool is_specialized = true;

      static double min() throw()
      { return 2.2250738585072014e-308; }
      static double max() throw()
      { return 1.7976931348623157e+308; }

      static const int digits = 53;
      static const int digits10 = 15;
      static const bool is_signed = true;
      static const bool is_integer = false;
      static const bool is_exact = false;
      static const int radix = 2;
      static double epsilon() throw()
      { return 2.2204460492503131e-16; }
      static double round_error() throw()
      { return 0.5; }

      static const int min_exponent = (-1021);
      static const int min_exponent10 = (-307);
      static const int max_exponent = 1024;
      static const int max_exponent10 = 308;

      static const bool has_infinity = 1;
      static const bool has_quiet_NaN = 1;
      static const bool has_signaling_NaN = has_quiet_NaN;
      static const float_denorm_style has_denorm
 = bool(4.9406564584124654e-324) ? denorm_present : denorm_absent;
      static const bool has_denorm_loss = false;

      static double infinity() throw()
      { return __builtin_huge_val(); }
      static double quiet_NaN() throw()
      { return __builtin_nan (""); }
      static double signaling_NaN() throw()
      { return __builtin_nans (""); }
      static double denorm_min() throw()
      { return 4.9406564584124654e-324; }

      static const bool is_iec559
 = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
      static const bool is_bounded = true;
      static const bool is_modulo = false;

      static const bool traps = false;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_to_nearest;
    };






  template<>
    struct numeric_limits<long double>
    {
      static const bool is_specialized = true;

      static long double min() throw()
      { return 2.2250738585072014e-308L; }
      static long double max() throw()
      { return 1.7976931348623157e+308L; }

      static const int digits = 53;
      static const int digits10 = 15;
      static const bool is_signed = true;
      static const bool is_integer = false;
      static const bool is_exact = false;
      static const int radix = 2;
      static long double epsilon() throw()
      { return 2.2204460492503131e-16L; }
      static long double round_error() throw()
      { return 0.5L; }

      static const int min_exponent = (-1021);
      static const int min_exponent10 = (-307);
      static const int max_exponent = 1024;
      static const int max_exponent10 = 308;

      static const bool has_infinity = 1;
      static const bool has_quiet_NaN = 1;
      static const bool has_signaling_NaN = has_quiet_NaN;
      static const float_denorm_style has_denorm
 = bool(4.9406564584124654e-324L) ? denorm_present : denorm_absent;
      static const bool has_denorm_loss
 = false;

      static long double infinity() throw()
      { return __builtin_huge_vall (); }
      static long double quiet_NaN() throw()
      { return __builtin_nanl (""); }
      static long double signaling_NaN() throw()
      { return __builtin_nansl (""); }
      static long double denorm_min() throw()
      { return 4.9406564584124654e-324L; }

      static const bool is_iec559
 = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
      static const bool is_bounded = true;
      static const bool is_modulo = false;

      static const bool traps = false;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_to_nearest;
    };





}
# 61 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 2 3

namespace std
{
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
  template<typename _Tp>
    pair<_Tp*, ptrdiff_t>
    __get_temporary_buffer(ptrdiff_t __len, _Tp*)
    {
      const ptrdiff_t __max = numeric_limits<ptrdiff_t>::max() / sizeof(_Tp);
      if (__len > __max)
 __len = __max;

      while (__len > 0)
 {
   _Tp* __tmp = static_cast<_Tp*>(::operator new(__len * sizeof(_Tp),
       nothrow));
   if (__tmp != 0)
     return pair<_Tp*, ptrdiff_t>(__tmp, __len);
   __len /= 2;
 }
      return pair<_Tp*, ptrdiff_t>(static_cast<_Tp*>(0), 0);
    }
# 108 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
  template<typename _Tp>
    inline pair<_Tp*, ptrdiff_t>
    get_temporary_buffer(ptrdiff_t __len)
    { return std::__get_temporary_buffer(__len, static_cast<_Tp*>(0)); }
# 120 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
  template<typename _Tp>
    void
    return_temporary_buffer(_Tp* __p)
    { ::operator delete(__p, nothrow); }
# 132 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
  template<typename _Tp1>
    struct auto_ptr_ref
    {
      _Tp1* _M_ptr;

      explicit
      auto_ptr_ref(_Tp1* __p): _M_ptr(__p) { }
    };
# 173 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
  template<typename _Tp>
    class auto_ptr
    {
    private:
      _Tp* _M_ptr;

    public:

      typedef _Tp element_type;







      explicit
      auto_ptr(element_type* __p = 0) throw() : _M_ptr(__p) { }
# 199 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      auto_ptr(auto_ptr& __a) throw() : _M_ptr(__a.release()) { }
# 211 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      template<typename _Tp1>
        auto_ptr(auto_ptr<_Tp1>& __a) throw() : _M_ptr(__a.release()) { }
# 222 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      auto_ptr&
      operator=(auto_ptr& __a) throw()
      {
 reset(__a.release());
 return *this;
      }
# 239 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      template<typename _Tp1>
        auto_ptr&
        operator=(auto_ptr<_Tp1>& __a) throw()
        {
   reset(__a.release());
   return *this;
 }
# 259 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      ~auto_ptr() { delete _M_ptr; }
# 269 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      element_type&
      operator*() const throw()
      {
 ;
 return *_M_ptr;
      }







      element_type*
      operator->() const throw()
      {
 ;
 return _M_ptr;
      }
# 299 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      element_type*
      get() const throw() { return _M_ptr; }
# 313 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      element_type*
      release() throw()
      {
 element_type* __tmp = _M_ptr;
 _M_ptr = 0;
 return __tmp;
      }
# 328 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      void
      reset(element_type* __p = 0) throw()
      {
 if (__p != _M_ptr)
   {
     delete _M_ptr;
     _M_ptr = __p;
   }
      }
# 349 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/memory" 3
      auto_ptr(auto_ptr_ref<element_type> __ref) throw()
      : _M_ptr(__ref._M_ptr) { }

      auto_ptr&
      operator=(auto_ptr_ref<element_type> __ref) throw()
      {
 if (__ref._M_ptr != this->get())
   {
     delete _M_ptr;
     _M_ptr = __ref._M_ptr;
   }
 return *this;
      }

      template<typename _Tp1>
        operator auto_ptr_ref<_Tp1>() throw()
        { return auto_ptr_ref<_Tp1>(this->release()); }

      template<typename _Tp1>
        operator auto_ptr<_Tp1>() throw()
        { return auto_ptr<_Tp1>(this->release()); }
  };
}
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 1 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
namespace std
{
# 101 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Arg, class _Result>
    struct unary_function
    {
      typedef _Arg argument_type;


      typedef _Result result_type;
    };




  template <class _Arg1, class _Arg2, class _Result>
    struct binary_function
    {
      typedef _Arg1 first_argument_type;


      typedef _Arg2 second_argument_type;
      typedef _Result result_type;
    };
# 133 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Tp>
    struct plus : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x + __y; }
    };


  template <class _Tp>
    struct minus : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x - __y; }
    };


  template <class _Tp>
    struct multiplies : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x * __y; }
    };


  template <class _Tp>
    struct divides : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x / __y; }
    };


  template <class _Tp>
    struct modulus : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x % __y; }
    };


  template <class _Tp>
    struct negate : public unary_function<_Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x) const
      { return -__x; }
    };
# 195 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Tp>
    struct equal_to : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x == __y; }
    };


  template <class _Tp>
    struct not_equal_to : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x != __y; }
    };


  template <class _Tp>
    struct greater : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x > __y; }
    };


  template <class _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x < __y; }
    };


  template <class _Tp>
    struct greater_equal : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x >= __y; }
    };


  template <class _Tp>
    struct less_equal : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x <= __y; }
    };
# 256 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Tp>
    struct logical_and : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x && __y; }
    };


  template <class _Tp>
    struct logical_or : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x || __y; }
    };


  template <class _Tp>
    struct logical_not : public unary_function<_Tp, bool>
    {
      bool
      operator()(const _Tp& __x) const
      { return !__x; }
    };
# 311 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Predicate>
    class unary_negate
    : public unary_function<typename _Predicate::argument_type, bool>
    {
    protected:
      _Predicate _M_pred;
    public:
      explicit
      unary_negate(const _Predicate& __x) : _M_pred(__x) {}

      bool
      operator()(const typename _Predicate::argument_type& __x) const
      { return !_M_pred(__x); }
    };


  template <class _Predicate>
    inline unary_negate<_Predicate>
    not1(const _Predicate& __pred)
    { return unary_negate<_Predicate>(__pred); }


  template <class _Predicate>
    class binary_negate
    : public binary_function<typename _Predicate::first_argument_type,
        typename _Predicate::second_argument_type,
        bool>
    {
    protected:
      _Predicate _M_pred;
    public:
      explicit
      binary_negate(const _Predicate& __x)
      : _M_pred(__x) { }

      bool
      operator()(const typename _Predicate::first_argument_type& __x,
   const typename _Predicate::second_argument_type& __y) const
      { return !_M_pred(__x, __y); }
    };


  template <class _Predicate>
    inline binary_negate<_Predicate>
    not2(const _Predicate& __pred)
    { return binary_negate<_Predicate>(__pred); }
# 391 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Operation>
    class binder1st
    : public unary_function<typename _Operation::second_argument_type,
       typename _Operation::result_type>
    {
    protected:
      _Operation op;
      typename _Operation::first_argument_type value;
    public:
      binder1st(const _Operation& __x,
  const typename _Operation::first_argument_type& __y)
      : op(__x), value(__y) {}

      typename _Operation::result_type
      operator()(const typename _Operation::second_argument_type& __x) const
      { return op(value, __x); }



      typename _Operation::result_type
      operator()(typename _Operation::second_argument_type& __x) const
      { return op(value, __x); }
    };


  template <class _Operation, class _Tp>
    inline binder1st<_Operation>
    bind1st(const _Operation& __fn, const _Tp& __x)
    {
      typedef typename _Operation::first_argument_type _Arg1_type;
      return binder1st<_Operation>(__fn, _Arg1_type(__x));
    }


  template <class _Operation>
    class binder2nd
    : public unary_function<typename _Operation::first_argument_type,
       typename _Operation::result_type>
    {
    protected:
      _Operation op;
      typename _Operation::second_argument_type value;
    public:
      binder2nd(const _Operation& __x,
  const typename _Operation::second_argument_type& __y)
      : op(__x), value(__y) {}

      typename _Operation::result_type
      operator()(const typename _Operation::first_argument_type& __x) const
      { return op(__x, value); }



      typename _Operation::result_type
      operator()(typename _Operation::first_argument_type& __x) const
      { return op(__x, value); }
    };


  template <class _Operation, class _Tp>
    inline binder2nd<_Operation>
    bind2nd(const _Operation& __fn, const _Tp& __x)
    {
      typedef typename _Operation::second_argument_type _Arg2_type;
      return binder2nd<_Operation>(__fn, _Arg2_type(__x));
    }
# 480 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Arg, class _Result>
    class pointer_to_unary_function : public unary_function<_Arg, _Result>
    {
    protected:
      _Result (*_M_ptr)(_Arg);
    public:
      pointer_to_unary_function() {}

      explicit
      pointer_to_unary_function(_Result (*__x)(_Arg))
      : _M_ptr(__x) {}

      _Result
      operator()(_Arg __x) const
      { return _M_ptr(__x); }
    };


  template <class _Arg, class _Result>
    inline pointer_to_unary_function<_Arg, _Result>
    ptr_fun(_Result (*__x)(_Arg))
    { return pointer_to_unary_function<_Arg, _Result>(__x); }


  template <class _Arg1, class _Arg2, class _Result>
    class pointer_to_binary_function
    : public binary_function<_Arg1, _Arg2, _Result>
    {
    protected:
      _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
      pointer_to_binary_function() {}

      explicit
      pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))
      : _M_ptr(__x) {}

      _Result
      operator()(_Arg1 __x, _Arg2 __y) const
      { return _M_ptr(__x, __y); }
    };


  template <class _Arg1, class _Arg2, class _Result>
    inline pointer_to_binary_function<_Arg1, _Arg2, _Result>
    ptr_fun(_Result (*__x)(_Arg1, _Arg2))
    { return pointer_to_binary_function<_Arg1, _Arg2, _Result>(__x); }


  template <class _Tp>
    struct _Identity : public unary_function<_Tp,_Tp>
    {
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
      { return __x; }
    };

  template <class _Pair>
    struct _Select1st : public unary_function<_Pair,
           typename _Pair::first_type>
    {
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
      { return __x.first; }
    };

  template <class _Pair>
    struct _Select2nd : public unary_function<_Pair,
           typename _Pair::second_type>
    {
      typename _Pair::second_type&
      operator()(_Pair& __x) const
      { return __x.second; }

      const typename _Pair::second_type&
      operator()(const _Pair& __x) const
      { return __x.second; }
    };
# 590 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_function.h" 3
  template <class _Ret, class _Tp>
    class mem_fun_t : public unary_function<_Tp*, _Ret>
    {
    public:
      explicit
      mem_fun_t(_Ret (_Tp::*__pf)())
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp* __p) const
      { return (__p->*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)();
    };


  template <class _Ret, class _Tp>
    class const_mem_fun_t : public unary_function<const _Tp*, _Ret>
    {
    public:
      explicit
      const_mem_fun_t(_Ret (_Tp::*__pf)() const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp* __p) const
      { return (__p->*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)() const;
    };


  template <class _Ret, class _Tp>
    class mem_fun_ref_t : public unary_function<_Tp, _Ret>
    {
    public:
      explicit
      mem_fun_ref_t(_Ret (_Tp::*__pf)())
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp& __r) const
      { return (__r.*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)();
  };


  template <class _Ret, class _Tp>
    class const_mem_fun_ref_t : public unary_function<_Tp, _Ret>
    {
    public:
      explicit
      const_mem_fun_ref_t(_Ret (_Tp::*__pf)() const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp& __r) const
      { return (__r.*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)() const;
    };


  template <class _Ret, class _Tp, class _Arg>
    class mem_fun1_t : public binary_function<_Tp*, _Arg, _Ret>
    {
    public:
      explicit
      mem_fun1_t(_Ret (_Tp::*__pf)(_Arg))
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp* __p, _Arg __x) const
      { return (__p->*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg);
    };


  template <class _Ret, class _Tp, class _Arg>
    class const_mem_fun1_t : public binary_function<const _Tp*, _Arg, _Ret>
    {
    public:
      explicit
      const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp* __p, _Arg __x) const
      { return (__p->*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg) const;
    };


  template <class _Ret, class _Tp, class _Arg>
    class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>
    {
    public:
      explicit
      mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg))
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp& __r, _Arg __x) const
      { return (__r.*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg);
    };


  template <class _Ret, class _Tp, class _Arg>
    class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>
    {
    public:
      explicit
      const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp& __r, _Arg __x) const
      { return (__r.*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg) const;
    };


  template <class _Tp>
    class mem_fun_t<void, _Tp> : public unary_function<_Tp*, void>
    {
    public:
      explicit
      mem_fun_t(void (_Tp::*__pf)())
      : _M_f(__pf) {}

      void
      operator()(_Tp* __p) const
      { (__p->*_M_f)(); }
    private:
      void (_Tp::*_M_f)();
    };


  template <class _Tp>
    class const_mem_fun_t<void, _Tp> : public unary_function<const _Tp*, void>
    {
    public:
      explicit
      const_mem_fun_t(void (_Tp::*__pf)() const)
      : _M_f(__pf) {}

      void
      operator()(const _Tp* __p) const
      { (__p->*_M_f)(); }
    private:
      void (_Tp::*_M_f)() const;
    };


  template <class _Tp>
    class mem_fun_ref_t<void, _Tp> : public unary_function<_Tp, void>
    {
    public:
      explicit
      mem_fun_ref_t(void (_Tp::*__pf)())
      : _M_f(__pf) {}

      void
      operator()(_Tp& __r) const
      { (__r.*_M_f)(); }
    private:
      void (_Tp::*_M_f)();
    };


  template <class _Tp>
    class const_mem_fun_ref_t<void, _Tp> : public unary_function<_Tp, void>
    {
    public:
      explicit
      const_mem_fun_ref_t(void (_Tp::*__pf)() const)
      : _M_f(__pf) {}

      void
      operator()(const _Tp& __r) const
      { (__r.*_M_f)(); }
    private:
      void (_Tp::*_M_f)() const;
    };


  template <class _Tp, class _Arg>
    class mem_fun1_t<void, _Tp, _Arg> : public binary_function<_Tp*, _Arg, void>
    {
    public:
      explicit
      mem_fun1_t(void (_Tp::*__pf)(_Arg))
      : _M_f(__pf) {}

      void
      operator()(_Tp* __p, _Arg __x) const
      { (__p->*_M_f)(__x); }
    private:
      void (_Tp::*_M_f)(_Arg);
    };


  template <class _Tp, class _Arg>
    class const_mem_fun1_t<void, _Tp, _Arg>
    : public binary_function<const _Tp*, _Arg, void>
    {
    public:
      explicit
      const_mem_fun1_t(void (_Tp::*__pf)(_Arg) const)
      : _M_f(__pf) {}

      void
      operator()(const _Tp* __p, _Arg __x) const
      { (__p->*_M_f)(__x); }
    private:
      void (_Tp::*_M_f)(_Arg) const;
    };


  template <class _Tp, class _Arg>
    class mem_fun1_ref_t<void, _Tp, _Arg>
    : public binary_function<_Tp, _Arg, void>
    {
    public:
      explicit
      mem_fun1_ref_t(void (_Tp::*__pf)(_Arg))
      : _M_f(__pf) {}

      void
      operator()(_Tp& __r, _Arg __x) const
      { (__r.*_M_f)(__x); }
    private:
      void (_Tp::*_M_f)(_Arg);
    };


  template <class _Tp, class _Arg>
    class const_mem_fun1_ref_t<void, _Tp, _Arg>
    : public binary_function<_Tp, _Arg, void>
    {
    public:
      explicit
      const_mem_fun1_ref_t(void (_Tp::*__pf)(_Arg) const)
      : _M_f(__pf) {}

      void
      operator()(const _Tp& __r, _Arg __x) const
      { (__r.*_M_f)(__x); }
    private:
      void (_Tp::*_M_f)(_Arg) const;
    };



  template <class _Ret, class _Tp>
    inline mem_fun_t<_Ret, _Tp>
    mem_fun(_Ret (_Tp::*__f)())
    { return mem_fun_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp>
    inline const_mem_fun_t<_Ret, _Tp>
    mem_fun(_Ret (_Tp::*__f)() const)
    { return const_mem_fun_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp>
    inline mem_fun_ref_t<_Ret, _Tp>
    mem_fun_ref(_Ret (_Tp::*__f)())
    { return mem_fun_ref_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp>
    inline const_mem_fun_ref_t<_Ret, _Tp>
    mem_fun_ref(_Ret (_Tp::*__f)() const)
    { return const_mem_fun_ref_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline mem_fun1_t<_Ret, _Tp, _Arg>
    mem_fun(_Ret (_Tp::*__f)(_Arg))
    { return mem_fun1_t<_Ret, _Tp, _Arg>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline const_mem_fun1_t<_Ret, _Tp, _Arg>
    mem_fun(_Ret (_Tp::*__f)(_Arg) const)
    { return const_mem_fun1_t<_Ret, _Tp, _Arg>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline mem_fun1_ref_t<_Ret, _Tp, _Arg>
    mem_fun_ref(_Ret (_Tp::*__f)(_Arg))
    { return mem_fun1_ref_t<_Ret, _Tp, _Arg>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg>
    mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)
    { return const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(__f); }



}
# 52 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/atomicity.h" 1 3
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/atomicity.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/atomic_word.h" 1 3
# 33 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/atomicity.h" 2 3

namespace __gnu_cxx
{
  _Atomic_word
  __attribute__ ((__unused__))
  __exchange_and_add(volatile _Atomic_word* __mem, int __val);

  void
  __attribute__ ((__unused__))
  __atomic_add(volatile _Atomic_word* __mem, int __val);
}
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 2 3


namespace std
{
# 109 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    class basic_string
    {

    public:
      typedef _Traits traits_type;
      typedef typename _Traits::char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _Alloc::size_type size_type;
      typedef typename _Alloc::difference_type difference_type;
      typedef typename _Alloc::reference reference;
      typedef typename _Alloc::const_reference const_reference;
      typedef typename _Alloc::pointer pointer;
      typedef typename _Alloc::const_pointer const_pointer;
      typedef __gnu_cxx::__normal_iterator<pointer, basic_string> iterator;
      typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
                                                            const_iterator;
      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
      typedef std::reverse_iterator<iterator> reverse_iterator;

    private:
# 144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
# 169 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage[];

        static _Rep&
        _S_empty_rep()
        { return *reinterpret_cast<_Rep*>(&_S_empty_rep_storage); }

        bool
 _M_is_leaked() const
        { return this->_M_refcount < 0; }

        bool
 _M_is_shared() const
        { return this->_M_refcount > 0; }

        void
 _M_set_leaked()
        { this->_M_refcount = -1; }

        void
 _M_set_sharable()
        { this->_M_refcount = 0; }

 void
 _M_set_length_and_sharable(size_type __n)
 {
   this->_M_set_sharable();
   this->_M_length = __n;
   traits_type::assign(this->_M_refdata()[__n], _S_terminal);


 }

 _CharT*
 _M_refdata() throw()
 { return reinterpret_cast<_CharT*>(this + 1); }

 _CharT*
 _M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 {
   return (!_M_is_leaked() && __alloc1 == __alloc2)
           ? _M_refcopy() : _M_clone(__alloc1);
 }


 static _Rep*
 _S_create(size_type, size_type, const _Alloc&);

 void
 _M_dispose(const _Alloc& __a)
 {

   if (__builtin_expect(this != &_S_empty_rep(), false))

     if (__gnu_cxx::__exchange_and_add(&this->_M_refcount, -1) <= 0)
       _M_destroy(__a);
 }

 void
 _M_destroy(const _Alloc&) throw();

 _CharT*
 _M_refcopy() throw()
 {

   if (__builtin_expect(this != &_S_empty_rep(), false))

            __gnu_cxx::__atomic_add(&this->_M_refcount, 1);
   return _M_refdata();
 }

 _CharT*
 _M_clone(const _Alloc&, size_type __res = 0);
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider(_CharT* __dat, const _Alloc& __a)
 : _Alloc(__a), _M_p(__dat) { }

 _CharT* _M_p;
      };

    public:




      static const size_type npos = static_cast<size_type>(-1);

    private:

      mutable _Alloc_hider _M_dataplus;

      _CharT*
      _M_data() const
      { return _M_dataplus._M_p; }

      _CharT*
      _M_data(_CharT* __p)
      { return (_M_dataplus._M_p = __p); }

      _Rep*
      _M_rep() const
      { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }



      iterator
      _M_ibegin() const
      { return iterator(_M_data()); }

      iterator
      _M_iend() const
      { return iterator(_M_data() + this->size()); }

      void
      _M_leak()
      {
 if (!_M_rep()->_M_is_leaked())
   _M_leak_hard();
      }

      size_type
      _M_check(size_type __pos, const char* __s) const
      {
 if (__pos > this->size())
   __throw_out_of_range((__s));
 return __pos;
      }

      void
      _M_check_length(size_type __n1, size_type __n2, const char* __s) const
      {
 if (this->max_size() - (this->size() - __n1) < __n2)
   __throw_length_error((__s));
      }


      size_type
      _M_limit(size_type __pos, size_type __off) const
      {
 const bool __testoff = __off < this->size() - __pos;
 return __testoff ? __off : this->size() - __pos;
      }


      bool
      _M_disjunct(const _CharT* __s) const
      {
 return (less<const _CharT*>()(__s, _M_data())
  || less<const _CharT*>()(_M_data() + this->size(), __s));
      }



      static void
      _M_copy(_CharT* __d, const _CharT* __s, size_type __n)
      {
 if (__n == 1)
   traits_type::assign(*__d, *__s);
 else
   traits_type::copy(__d, __s, __n);
      }

      static void
      _M_move(_CharT* __d, const _CharT* __s, size_type __n)
      {
 if (__n == 1)
   traits_type::assign(*__d, *__s);
 else
   traits_type::move(__d, __s, __n);
      }

      static void
      _M_assign(_CharT* __d, size_type __n, _CharT __c)
      {
 if (__n == 1)
   traits_type::assign(*__d, __c);
 else
   traits_type::assign(__d, __n, __c);
      }



      template<class _Iterator>
        static void
        _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
        {
   for (; __k1 != __k2; ++__k1, ++__p)
     traits_type::assign(*__p, *__k1);
 }

      static void
      _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)
      { _S_copy_chars(__p, __k1.base(), __k2.base()); }

      static void
      _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
      { _S_copy_chars(__p, __k1.base(), __k2.base()); }

      static void
      _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)
      { _M_copy(__p, __k1, __k2 - __k1); }

      static void
      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
      { _M_copy(__p, __k1, __k2 - __k1); }

      void
      _M_mutate(size_type __pos, size_type __len1, size_type __len2);

      void
      _M_leak_hard();

      static _Rep&
      _S_empty_rep()
      { return _Rep::_S_empty_rep(); }

    public:







      inline
      basic_string();




      explicit
      basic_string(const _Alloc& __a);






      basic_string(const basic_string& __str);






      basic_string(const basic_string& __str, size_type __pos,
     size_type __n = npos);







      basic_string(const basic_string& __str, size_type __pos,
     size_type __n, const _Alloc& __a);
# 443 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string(const _CharT* __s, size_type __n,
     const _Alloc& __a = _Alloc());





      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());






      basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());







      template<class _InputIterator>
        basic_string(_InputIterator __beg, _InputIterator __end,
       const _Alloc& __a = _Alloc());




      ~basic_string()
      { _M_rep()->_M_dispose(this->get_allocator()); }





      basic_string&
      operator=(const basic_string& __str)
      { return this->assign(__str); }





      basic_string&
      operator=(const _CharT* __s)
      { return this->assign(__s); }
# 498 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      operator=(_CharT __c)
      {
 this->assign(1, __c);
 return *this;
      }






      iterator
      begin()
      {
 _M_leak();
 return iterator(_M_data());
      }





      const_iterator
      begin() const
      { return const_iterator(_M_data()); }





      iterator
      end()
      {
 _M_leak();
 return iterator(_M_data() + this->size());
      }





      const_iterator
      end() const
      { return const_iterator(_M_data() + this->size()); }






      reverse_iterator
      rbegin()
      { return reverse_iterator(this->end()); }






      const_reverse_iterator
      rbegin() const
      { return const_reverse_iterator(this->end()); }






      reverse_iterator
      rend()
      { return reverse_iterator(this->begin()); }






      const_reverse_iterator
      rend() const
      { return const_reverse_iterator(this->begin()); }

    public:



      size_type
      size() const
      { return _M_rep()->_M_length; }



      size_type
      length() const
      { return _M_rep()->_M_length; }


      size_type
      max_size() const
      { return _Rep::_S_max_size; }
# 609 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      void
      resize(size_type __n, _CharT __c);
# 622 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      void
      resize(size_type __n)
      { this->resize(__n, _CharT()); }





      size_type
      capacity() const
      { return _M_rep()->_M_capacity; }
# 651 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      void
      reserve(size_type __res_arg = 0);




      void
      clear()
      { _M_mutate(0, this->size(), 0); }




      bool
      empty() const
      { return this->size() == 0; }
# 679 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      const_reference
      operator[] (size_type __pos) const
      {
 ;
 return _M_data()[__pos];
      }
# 696 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      reference
      operator[](size_type __pos)
      {

 ;

 ;
 _M_leak();
 return _M_data()[__pos];
      }
# 717 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      const_reference
      at(size_type __n) const
      {
 if (__n >= this->size())
   __throw_out_of_range(("basic_string::at"));
 return _M_data()[__n];
      }
# 736 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      reference
      at(size_type __n)
      {
 if (__n >= size())
   __throw_out_of_range(("basic_string::at"));
 _M_leak();
 return _M_data()[__n];
      }







      basic_string&
      operator+=(const basic_string& __str)
      { return this->append(__str); }






      basic_string&
      operator+=(const _CharT* __s)
      { return this->append(__s); }






      basic_string&
      operator+=(_CharT __c)
      {
 this->push_back(__c);
 return *this;
      }






      basic_string&
      append(const basic_string& __str);
# 796 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      append(const basic_string& __str, size_type __pos, size_type __n);







      basic_string&
      append(const _CharT* __s, size_type __n);






      basic_string&
      append(const _CharT* __s)
      {
 ;
 return this->append(__s, traits_type::length(__s));
      }
# 828 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      append(size_type __n, _CharT __c);
# 839 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      template<class _InputIterator>
        basic_string&
        append(_InputIterator __first, _InputIterator __last)
        { return this->replace(_M_iend(), _M_iend(), __first, __last); }





      void
      push_back(_CharT __c)
      {
 const size_type __len = 1 + this->size();
 if (__len > this->capacity() || _M_rep()->_M_is_shared())
   this->reserve(__len);
 traits_type::assign(_M_data()[this->size()], __c);
 _M_rep()->_M_set_length_and_sharable(__len);
      }






      basic_string&
      assign(const basic_string& __str);
# 878 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      assign(const basic_string& __str, size_type __pos, size_type __n)
      { return this->assign(__str._M_data()
       + __str._M_check(__pos, "basic_string::assign"),
       __str._M_limit(__pos, __n)); }
# 894 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      assign(const _CharT* __s, size_type __n);
# 906 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      assign(const _CharT* __s)
      {
 ;
 return this->assign(__s, traits_type::length(__s));
      }
# 922 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      assign(size_type __n, _CharT __c)
      { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
# 934 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      template<class _InputIterator>
        basic_string&
        assign(_InputIterator __first, _InputIterator __last)
        { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
# 951 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      void
      insert(iterator __p, size_type __n, _CharT __c)
      { this->replace(__p, __p, __n, __c); }
# 966 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      template<class _InputIterator>
        void
        insert(iterator __p, _InputIterator __beg, _InputIterator __end)
        { this->replace(__p, __p, __beg, __end); }
# 982 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos1, const basic_string& __str)
      { return this->insert(__pos1, __str, size_type(0), __str.size()); }
# 1004 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos1, const basic_string& __str,
      size_type __pos2, size_type __n)
      { return this->insert(__pos1, __str._M_data()
       + __str._M_check(__pos2, "basic_string::insert"),
       __str._M_limit(__pos2, __n)); }
# 1027 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos, const _CharT* __s, size_type __n);
# 1045 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos, const _CharT* __s)
      {
 ;
 return this->insert(__pos, __s, traits_type::length(__s));
      }
# 1068 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos, size_type __n, _CharT __c)
      { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
         size_type(0), __n, __c); }
# 1085 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      iterator
      insert(iterator __p, _CharT __c)
      {
 ;
 const size_type __pos = __p - _M_ibegin();
 _M_replace_aux(__pos, size_type(0), size_type(1), __c);
 _M_rep()->_M_set_leaked();
 return this->_M_ibegin() + __pos;
      }
# 1109 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      erase(size_type __pos = 0, size_type __n = npos)
      {
 _M_mutate(_M_check(__pos, "basic_string::erase"),
    _M_limit(__pos, __n), size_type(0));
 return *this;
      }
# 1125 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      iterator
      erase(iterator __position)
      {
 ;

 const size_type __pos = __position - _M_ibegin();
 _M_mutate(__pos, size_type(1), size_type(0));
 _M_rep()->_M_set_leaked();
 return _M_ibegin() + __pos;
      }
# 1145 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      iterator
      erase(iterator __first, iterator __last)
      {
 ;

        const size_type __pos = __first - _M_ibegin();
 _M_mutate(__pos, __last - __first, size_type(0));
 _M_rep()->_M_set_leaked();
 return _M_ibegin() + __pos;
      }
# 1172 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n, const basic_string& __str)
      { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
# 1194 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos1, size_type __n1, const basic_string& __str,
       size_type __pos2, size_type __n2)
      { return this->replace(__pos1, __n1, __str._M_data()
        + __str._M_check(__pos2, "basic_string::replace"),
        __str._M_limit(__pos2, __n2)); }
# 1218 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s,
       size_type __n2);
# 1237 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s)
      {
 ;
 return this->replace(__pos, __n1, __s, traits_type::length(__s));
      }
# 1260 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
      { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
         _M_limit(__pos, __n1), __n2, __c); }
# 1278 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, const basic_string& __str)
      { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
# 1296 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
      {
 ;

 return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
      }
# 1317 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, const _CharT* __s)
      {
 ;
 return this->replace(__i1, __i2, __s, traits_type::length(__s));
      }
# 1338 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
      {
 ;

 return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
      }
# 1360 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      template<class _InputIterator>
        basic_string&
        replace(iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2)
        {
   ;

   ;
   typedef typename std::__is_integer<_InputIterator>::__type _Integral;
   return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
 }



      basic_string&
      replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1, __k2 - __k1);
      }

      basic_string&
      replace(iterator __i1, iterator __i2,
       const _CharT* __k1, const _CharT* __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1, __k2 - __k1);
      }

      basic_string&
      replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1.base(), __k2 - __k1);
      }

      basic_string&
      replace(iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1.base(), __k2 - __k1);
      }

    private:
      template<class _Integer>
 basic_string&
 _M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type)
        { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }

      template<class _InputIterator>
 basic_string&
 _M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type);

      basic_string&
      _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c);

      basic_string&
      _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
        size_type __n2);



      template<class _InIterator>
        static _CharT*
        _S_construct_aux(_InIterator __beg, _InIterator __end,
    const _Alloc& __a, __false_type)
 {
          typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
          return _S_construct(__beg, __end, __a, _Tag());
 }

      template<class _InIterator>
        static _CharT*
        _S_construct_aux(_InIterator __beg, _InIterator __end,
    const _Alloc& __a, __true_type)
 { return _S_construct(static_cast<size_type>(__beg),
         static_cast<value_type>(__end), __a); }

      template<class _InIterator>
        static _CharT*
        _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
 {
   typedef typename std::__is_integer<_InIterator>::__type _Integral;
   return _S_construct_aux(__beg, __end, __a, _Integral());
        }


      template<class _InIterator>
        static _CharT*
         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
        input_iterator_tag);



      template<class _FwdIterator>
        static _CharT*
        _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
       forward_iterator_tag);

      static _CharT*
      _S_construct(size_type __req, _CharT __c, const _Alloc& __a);

    public:
# 1491 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
# 1501 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      void
      swap(basic_string& __s);
# 1511 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      const _CharT*
      c_str() const
      { return _M_data(); }







      const _CharT*
      data() const
      { return _M_data(); }




      allocator_type
      get_allocator() const
      { return _M_dataplus; }
# 1543 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find(const _CharT* __s, size_type __pos, size_type __n) const;
# 1556 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find(const basic_string& __str, size_type __pos = 0) const
      { return this->find(__str.data(), __pos, __str.size()); }
# 1570 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find(const _CharT* __s, size_type __pos = 0) const
      {
 ;
 return this->find(__s, __pos, traits_type::length(__s));
      }
# 1587 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find(_CharT __c, size_type __pos = 0) const;
# 1600 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      rfind(const basic_string& __str, size_type __pos = npos) const
      { return this->rfind(__str.data(), __pos, __str.size()); }
# 1615 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      rfind(const _CharT* __s, size_type __pos, size_type __n) const;
# 1628 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      rfind(const _CharT* __s, size_type __pos = npos) const
      {
 ;
 return this->rfind(__s, __pos, traits_type::length(__s));
      }
# 1645 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      rfind(_CharT __c, size_type __pos = npos) const;
# 1658 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_of(const basic_string& __str, size_type __pos = 0) const
      { return this->find_first_of(__str.data(), __pos, __str.size()); }
# 1673 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
# 1686 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_of(const _CharT* __s, size_type __pos = 0) const
      {
 ;
 return this->find_first_of(__s, __pos, traits_type::length(__s));
      }
# 1705 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_of(_CharT __c, size_type __pos = 0) const
      { return this->find(__c, __pos); }
# 1719 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_of(const basic_string& __str, size_type __pos = npos) const
      { return this->find_last_of(__str.data(), __pos, __str.size()); }
# 1734 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
# 1747 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_of(const _CharT* __s, size_type __pos = npos) const
      {
 ;
 return this->find_last_of(__s, __pos, traits_type::length(__s));
      }
# 1766 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_of(_CharT __c, size_type __pos = npos) const
      { return this->rfind(__c, __pos); }
# 1780 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_not_of(const basic_string& __str, size_type __pos = 0) const
      { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
# 1795 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_not_of(const _CharT* __s, size_type __pos,
   size_type __n) const;
# 1809 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_not_of(const _CharT* __s, size_type __pos = 0) const
      {
 ;
 return this->find_first_not_of(__s, __pos, traits_type::length(__s));
      }
# 1826 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_first_not_of(_CharT __c, size_type __pos = 0) const;
# 1839 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_not_of(const basic_string& __str, size_type __pos = npos) const
      { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
# 1855 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_not_of(const _CharT* __s, size_type __pos,
         size_type __n) const;
# 1868 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_not_of(const _CharT* __s, size_type __pos = npos) const
      {
 ;
 return this->find_last_not_of(__s, __pos, traits_type::length(__s));
      }
# 1885 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      size_type
      find_last_not_of(_CharT __c, size_type __pos = npos) const;
# 1900 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      basic_string
      substr(size_type __pos = 0, size_type __n = npos) const
      { return basic_string(*this,
       _M_check(__pos, "basic_string::substr"), __n); }
# 1918 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      int
      compare(const basic_string& __str) const
      {
 const size_type __size = this->size();
 const size_type __osize = __str.size();
 const size_type __len = std::min(__size, __osize);

 int __r = traits_type::compare(_M_data(), __str.data(), __len);
 if (!__r)
   __r = __size - __osize;
 return __r;
      }
# 1948 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      int
      compare(size_type __pos, size_type __n, const basic_string& __str) const;
# 1972 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      int
      compare(size_type __pos1, size_type __n1, const basic_string& __str,
       size_type __pos2, size_type __n2) const;
# 1990 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      int
      compare(const _CharT* __s) const;
# 2013 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      int
      compare(size_type __pos, size_type __n1, const _CharT* __s) const;
# 2038 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
      int
      compare(size_type __pos, size_type __n1, const _CharT* __s,
       size_type __n2) const;
  };

  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>::
    basic_string()

    : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
# 2059 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
      __str.append(__rhs);
      return __str;
    }







  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT,_Traits,_Alloc>
    operator+(const _CharT* __lhs,
       const basic_string<_CharT,_Traits,_Alloc>& __rhs);







  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT,_Traits,_Alloc>
    operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      const _CharT* __rhs)
    {
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
      __str.append(__rhs);
      return __str;
    }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
    {
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;
      __string_type __str(__lhs);
      __str.append(__size_type(1), __rhs);
      return __str;
    }
# 2130 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) == 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator==(const _CharT* __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) == 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) == 0; }
# 2167 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) != 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator!=(const _CharT* __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) != 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) != 0; }
# 2204 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) < 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const _CharT* __rhs)
    { return __lhs.compare(__rhs) < 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const _CharT* __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) > 0; }
# 2241 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) > 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const _CharT* __rhs)
    { return __lhs.compare(__rhs) > 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>(const _CharT* __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) < 0; }
# 2278 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) <= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) <= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<=(const _CharT* __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) >= 0; }
# 2315 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) >= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) >= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>=(const _CharT* __lhs,
      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) <= 0; }
# 2352 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline void
    swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
  basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { __lhs.swap(__rhs); }
# 2369 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __is,
        basic_string<_CharT, _Traits, _Alloc>& __str);
# 2383 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __os,
        const basic_string<_CharT, _Traits, _Alloc>& __str);
# 2401 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    getline(basic_istream<_CharT, _Traits>& __is,
     basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
# 2418 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_istream<_CharT, _Traits>&
    getline(basic_istream<_CharT, _Traits>& __is,
     basic_string<_CharT, _Traits, _Alloc>& __str);

  template<>
    basic_istream<char>&
    getline(basic_istream<char>& __in, basic_string<char>& __str,
     char __delim);







}
# 53 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/algorithm" 1 3
# 63 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/algorithm" 3
       
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/algorithm" 3




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 1 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 1 3
# 65 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
namespace std
{



  template<typename _RandomAccessIterator, typename _Distance>
    bool
    __is_heap(_RandomAccessIterator __first, _Distance __n)
    {
      _Distance __parent = 0;
      for (_Distance __child = 1; __child < __n; ++__child)
 {
   if (__first[__parent] < __first[__child])
     return false;
   if ((__child & 1) == 0)
     ++__parent;
 }
      return true;
    }

  template<typename _RandomAccessIterator, typename _Distance,
           typename _StrictWeakOrdering>
    bool
    __is_heap(_RandomAccessIterator __first, _StrictWeakOrdering __comp,
       _Distance __n)
    {
      _Distance __parent = 0;
      for (_Distance __child = 1; __child < __n; ++__child)
 {
   if (__comp(__first[__parent], __first[__child]))
     return false;
   if ((__child & 1) == 0)
     ++__parent;
 }
      return true;
    }

  template<typename _RandomAccessIterator>
    bool
    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    { return std::__is_heap(__first, std::distance(__first, __last)); }

  template<typename _RandomAccessIterator, typename _StrictWeakOrdering>
    bool
    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
     _StrictWeakOrdering __comp)
    { return std::__is_heap(__first, __comp, std::distance(__first, __last)); }



  template<typename _RandomAccessIterator, typename _Distance, typename _Tp>
    void
    __push_heap(_RandomAccessIterator __first,
  _Distance __holeIndex, _Distance __topIndex, _Tp __value)
    {
      _Distance __parent = (__holeIndex - 1) / 2;
      while (__holeIndex > __topIndex && *(__first + __parent) < __value)
 {
   *(__first + __holeIndex) = *(__first + __parent);
   __holeIndex = __parent;
   __parent = (__holeIndex - 1) / 2;
 }
      *(__first + __holeIndex) = __value;
    }
# 139 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

     
      ;


      std::__push_heap(__first, _DistanceType((__last - __first) - 1),
         _DistanceType(0), _ValueType(*(__last - 1)));
    }

  template<typename _RandomAccessIterator, typename _Distance, typename _Tp,
     typename _Compare>
    void
    __push_heap(_RandomAccessIterator __first, _Distance __holeIndex,
  _Distance __topIndex, _Tp __value, _Compare __comp)
    {
      _Distance __parent = (__holeIndex - 1) / 2;
      while (__holeIndex > __topIndex
      && __comp(*(__first + __parent), __value))
 {
   *(__first + __holeIndex) = *(__first + __parent);
   __holeIndex = __parent;
   __parent = (__holeIndex - 1) / 2;
 }
      *(__first + __holeIndex) = __value;
    }
# 187 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

      ;
      ;

      std::__push_heap(__first, _DistanceType((__last - __first) - 1),
         _DistanceType(0), _ValueType(*(__last - 1)), __comp);
    }

  template<typename _RandomAccessIterator, typename _Distance, typename _Tp>
    void
    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value)
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = 2 * __holeIndex + 2;
      while (__secondChild < __len)
 {
   if (*(__first + __secondChild) < *(__first + (__secondChild - 1)))
     __secondChild--;
   *(__first + __holeIndex) = *(__first + __secondChild);
   __holeIndex = __secondChild;
   __secondChild = 2 * (__secondChild + 1);
 }
      if (__secondChild == __len)
 {
   *(__first + __holeIndex) = *(__first + (__secondChild - 1));
   __holeIndex = __secondChild - 1;
 }
      std::__push_heap(__first, __holeIndex, __topIndex, __value);
    }

  template<typename _RandomAccessIterator, typename _Tp>
    inline void
    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result, _Tp __value)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      *__result = *__first;
      std::__adjust_heap(__first, _Distance(0), _Distance(__last - __first),
    __value);
    }
# 251 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;
      ;

      std::__pop_heap(__first, __last - 1, __last - 1,
        _ValueType(*(__last - 1)));
    }

  template<typename _RandomAccessIterator, typename _Distance,
    typename _Tp, typename _Compare>
    void
    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value, _Compare __comp)
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = 2 * __holeIndex + 2;
      while (__secondChild < __len)
 {
   if (__comp(*(__first + __secondChild),
       *(__first + (__secondChild - 1))))
     __secondChild--;
   *(__first + __holeIndex) = *(__first + __secondChild);
   __holeIndex = __secondChild;
   __secondChild = 2 * (__secondChild + 1);
 }
      if (__secondChild == __len)
 {
   *(__first + __holeIndex) = *(__first + (__secondChild - 1));
   __holeIndex = __secondChild - 1;
 }
      std::__push_heap(__first, __holeIndex, __topIndex, __value, __comp);
    }

  template<typename _RandomAccessIterator, typename _Tp, typename _Compare>
    inline void
    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result, _Tp __value, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      *__result = *__first;
      std::__adjust_heap(__first, _Distance(0), _Distance(__last - __first),
    __value, __comp);
    }
# 317 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    pop_heap(_RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp)
    {

     

      ;
      ;

      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      std::__pop_heap(__first, __last - 1, __last - 1,
        _ValueType(*(__last - 1)), __comp);
    }
# 342 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    void
    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

     
      ;

      if (__last - __first < 2)
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = (__len - 2) / 2;
      while (true)
 {
   std::__adjust_heap(__first, __parent, __len,
        _ValueType(*(__first + __parent)));
   if (__parent == 0)
     return;
   __parent--;
 }
    }
# 382 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

      ;

      if (__last - __first < 2)
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = (__len - 2) / 2;
      while (true)
 {
   std::__adjust_heap(__first, __parent, __len,
        _ValueType(*(__first + __parent)), __comp);
   if (__parent == 0)
     return;
   __parent--;
 }
    }
# 420 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    void
    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;


      while (__last - __first > 1)
 std::pop_heap(__first, __last--);
    }
# 446 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    void
    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {

     

      ;
      ;

      while (__last - __first > 1)
 std::pop_heap(__first, __last--, __comp);
    }

}
# 65 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_tempbuf.h" 1 3
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_tempbuf.h" 3
namespace std
{







  template<typename _ForwardIterator, typename _Tp>
    class _Temporary_buffer
    {

     

 public:
      typedef _Tp value_type;
      typedef value_type* pointer;
      typedef pointer iterator;
      typedef ptrdiff_t size_type;

    protected:
      size_type _M_original_len;
      size_type _M_len;
      pointer _M_buffer;

      void
      _M_initialize_buffer(const _Tp&, __true_type) { }

      void
      _M_initialize_buffer(const _Tp& val, __false_type)
      { std::uninitialized_fill_n(_M_buffer, _M_len, val); }

    public:

      size_type
      size() const
      { return _M_len; }


      size_type
      requested_size() const
      { return _M_original_len; }


      iterator
      begin()
      { return _M_buffer; }


      iterator
      end()
      { return _M_buffer + _M_len; }





      _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last);

      ~_Temporary_buffer()
      {
 std::_Destroy(_M_buffer, _M_buffer + _M_len);
 std::return_temporary_buffer(_M_buffer);
      }

    private:

      _Temporary_buffer(const _Temporary_buffer&);

      void
      operator=(const _Temporary_buffer&);
    };


  template<typename _ForwardIterator, typename _Tp>
    _Temporary_buffer<_ForwardIterator, _Tp>::
    _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last)
    : _M_original_len(std::distance(__first, __last)),
      _M_len(0), _M_buffer(0)
    {

      typedef typename std::__is_scalar<_Tp>::__type _Trivial;

      try
 {
   pair<pointer, size_type> __p(get_temporary_buffer<
           value_type>(_M_original_len));
   _M_buffer = __p.first;
   _M_len = __p.second;
   if (_M_len > 0)
     _M_initialize_buffer(*__first, _Trivial());
 }
      catch(...)
 {
   std::return_temporary_buffer(_M_buffer);
   _M_buffer = 0;
   _M_len = 0;
   throw;
 }
    }
}
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 2 3




namespace std
{
# 84 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _Tp>
    inline const _Tp&
    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c)
    {

     
      if (__a < __b)
 if (__b < __c)
   return __b;
 else if (__a < __c)
   return __c;
 else
   return __a;
      else if (__a < __c)
 return __a;
      else if (__b < __c)
 return __c;
      else
 return __b;
    }
# 118 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _Tp, typename _Compare>
    inline const _Tp&
    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)
    {

     
      if (__comp(__a, __b))
 if (__comp(__b, __c))
   return __b;
 else if (__comp(__a, __c))
   return __c;
 else
   return __a;
      else if (__comp(__a, __c))
 return __a;
      else if (__comp(__b, __c))
 return __c;
      else
 return __b;
    }
# 150 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Function>
    _Function
    for_each(_InputIterator __first, _InputIterator __last, _Function __f)
    {

     
      ;
      for ( ; __first != __last; ++__first)
 __f(*__first);
      return __f;
    }






  template<typename _InputIterator, typename _Tp>
    inline _InputIterator
    find(_InputIterator __first, _InputIterator __last,
  const _Tp& __val, input_iterator_tag)
    {
      while (__first != __last && !(*__first == __val))
 ++__first;
      return __first;
    }






  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    find_if(_InputIterator __first, _InputIterator __last,
     _Predicate __pred, input_iterator_tag)
    {
      while (__first != __last && !__pred(*__first))
 ++__first;
      return __first;
    }






  template<typename _RandomAccessIterator, typename _Tp>
    _RandomAccessIterator
    find(_RandomAccessIterator __first, _RandomAccessIterator __last,
  const _Tp& __val, random_access_iterator_tag)
    {
      typename iterator_traits<_RandomAccessIterator>::difference_type
 __trip_count = (__last - __first) >> 2;

      for ( ; __trip_count > 0 ; --__trip_count)
 {
   if (*__first == __val)
     return __first;
   ++__first;

   if (*__first == __val)
     return __first;
   ++__first;

   if (*__first == __val)
     return __first;
   ++__first;

   if (*__first == __val)
     return __first;
   ++__first;
 }

      switch (__last - __first)
 {
 case 3:
   if (*__first == __val)
     return __first;
   ++__first;
 case 2:
   if (*__first == __val)
     return __first;
   ++__first;
 case 1:
   if (*__first == __val)
     return __first;
   ++__first;
 case 0:
 default:
   return __last;
 }
    }






  template<typename _RandomAccessIterator, typename _Predicate>
    _RandomAccessIterator
    find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
     _Predicate __pred, random_access_iterator_tag)
    {
      typename iterator_traits<_RandomAccessIterator>::difference_type
 __trip_count = (__last - __first) >> 2;

      for ( ; __trip_count > 0 ; --__trip_count)
 {
   if (__pred(*__first))
     return __first;
   ++__first;

   if (__pred(*__first))
     return __first;
   ++__first;

   if (__pred(*__first))
     return __first;
   ++__first;

   if (__pred(*__first))
     return __first;
   ++__first;
 }

      switch (__last - __first)
 {
 case 3:
   if (__pred(*__first))
     return __first;
   ++__first;
 case 2:
   if (__pred(*__first))
     return __first;
   ++__first;
 case 1:
   if (__pred(*__first))
     return __first;
   ++__first;
 case 0:
 default:
   return __last;
 }
    }
# 304 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Tp>
    inline _InputIterator
    find(_InputIterator __first, _InputIterator __last,
  const _Tp& __val)
    {

     
     

      ;
      return std::find(__first, __last, __val,
         std::__iterator_category(__first));
    }
# 326 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    find_if(_InputIterator __first, _InputIterator __last,
     _Predicate __pred)
    {

     
     

      ;
      return std::find_if(__first, __last, __pred,
     std::__iterator_category(__first));
    }
# 348 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    _ForwardIterator
    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;
      if (__first == __last)
 return __last;
      _ForwardIterator __next = __first;
      while(++__next != __last)
 {
   if (*__first == *__next)
     return __first;
   __first = __next;
 }
      return __last;
    }
# 379 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _BinaryPredicate>
    _ForwardIterator
    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
    _BinaryPredicate __binary_pred)
    {

     
     


      ;
      if (__first == __last)
 return __last;
      _ForwardIterator __next = __first;
      while(++__next != __last)
 {
   if (__binary_pred(*__first, *__next))
     return __first;
   __first = __next;
 }
      return __last;
    }
# 410 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Tp>
    typename iterator_traits<_InputIterator>::difference_type
    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
    {

     
     

      ;
      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      for ( ; __first != __last; ++__first)
 if (*__first == __value)
   ++__n;
      return __n;
    }
# 434 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Predicate>
    typename iterator_traits<_InputIterator>::difference_type
    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
    {

     
     

      ;
      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      for ( ; __first != __last; ++__first)
 if (__pred(*__first))
   ++__n;
      return __n;
    }
# 473 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator1
    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2)
    {

     
     
     


      ;
      ;

      if (__first1 == __last1 || __first2 == __last2)
 return __first1;


      _ForwardIterator2 __tmp(__first2);
      ++__tmp;
      if (__tmp == __last2)
 return std::find(__first1, __last1, *__first2);


      _ForwardIterator2 __p1, __p;
      __p1 = __first2; ++__p1;
      _ForwardIterator1 __current = __first1;

      while (__first1 != __last1)
 {
   __first1 = std::find(__first1, __last1, *__first2);
   if (__first1 == __last1)
     return __last1;

   __p = __p1;
   __current = __first1;
   if (++__current == __last1)
     return __last1;

   while (*__current == *__p)
     {
       if (++__p == __last2)
  return __first1;
       if (++__current == __last1)
  return __last1;
     }
   ++__first1;
 }
      return __first1;
    }
# 544 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    _ForwardIterator1
    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2,
    _BinaryPredicate __predicate)
    {

     
     
     


      ;
      ;


      if (__first1 == __last1 || __first2 == __last2)
 return __first1;


      _ForwardIterator2 __tmp(__first2);
      ++__tmp;
      if (__tmp == __last2)
 {
   while (__first1 != __last1 && !__predicate(*__first1, *__first2))
     ++__first1;
   return __first1;
 }


      _ForwardIterator2 __p1, __p;
      __p1 = __first2; ++__p1;
      _ForwardIterator1 __current = __first1;

      while (__first1 != __last1)
 {
   while (__first1 != __last1)
     {
       if (__predicate(*__first1, *__first2))
  break;
       ++__first1;
     }
   while (__first1 != __last1 && !__predicate(*__first1, *__first2))
     ++__first1;
   if (__first1 == __last1)
     return __last1;

   __p = __p1;
   __current = __first1;
   if (++__current == __last1)
     return __last1;

   while (__predicate(*__current, *__p))
     {
       if (++__p == __last2)
  return __first1;
       if (++__current == __last1)
  return __last1;
     }
   ++__first1;
 }
      return __first1;
    }
# 622 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp>
    _ForwardIterator
    search_n(_ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp& __val)
    {

     
     

      ;

      if (__count <= 0)
 return __first;
      else
 {
   __first = std::find(__first, __last, __val);
   while (__first != __last)
     {
       typename iterator_traits<_ForwardIterator>::difference_type
  __n = __count;
       _ForwardIterator __i = __first;
       ++__i;
       while (__i != __last && __n != 1 && *__i == __val)
  {
    ++__i;
    --__n;
  }
       if (__n == 1)
  return __first;
       else
  __first = std::find(__i, __last, __val);
     }
   return __last;
 }
    }
# 673 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp,
           typename _BinaryPredicate>
    _ForwardIterator
    search_n(_ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp& __val,
      _BinaryPredicate __binary_pred)
    {

     
     

      ;

      if (__count <= 0)
 return __first;
      else
 {
   while (__first != __last)
     {
       if (__binary_pred(*__first, __val))
  break;
       ++__first;
     }
   while (__first != __last)
     {
       typename iterator_traits<_ForwardIterator>::difference_type
  __n = __count;
       _ForwardIterator __i = __first;
       ++__i;
       while (__i != __last && __n != 1 && __binary_pred(*__i, __val))
  {
    ++__i;
    --__n;
  }
       if (__n == 1)
  return __first;
       else
  {
    while (__i != __last)
      {
        if (__binary_pred(*__i, __val))
   break;
        ++__i;
      }
    __first = __i;
  }
     }
   return __last;
 }
    }
# 735 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator2
    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2)
    {

     

     

     


     


      ;

      for ( ; __first1 != __last1; ++__first1, ++__first2)
 std::iter_swap(__first1, __first2);
      return __first2;
    }
# 773 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _UnaryOperation>
    _OutputIterator
    transform(_InputIterator __first, _InputIterator __last,
       _OutputIterator __result, _UnaryOperation __unary_op)
    {

     
     


      ;

      for ( ; __first != __last; ++__first, ++__result)
 *__result = __unary_op(*__first);
      return __result;
    }
# 808 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _BinaryOperation>
    _OutputIterator
    transform(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _OutputIterator __result,
       _BinaryOperation __binary_op)
    {

     
     
     


      ;

      for ( ; __first1 != __last1; ++__first1, ++__first2, ++__result)
 *__result = __binary_op(*__first1, *__first2);
      return __result;
    }
# 840 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    void
    replace(_ForwardIterator __first, _ForwardIterator __last,
     const _Tp& __old_value, const _Tp& __new_value)
    {

     

     

     

      ;

      for ( ; __first != __last; ++__first)
 if (*__first == __old_value)
   *__first = __new_value;
    }
# 871 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate, typename _Tp>
    void
    replace_if(_ForwardIterator __first, _ForwardIterator __last,
        _Predicate __pred, const _Tp& __new_value)
    {

     

     

     

      ;

      for ( ; __first != __last; ++__first)
 if (__pred(*__first))
   *__first = __new_value;
    }
# 904 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator, typename _Tp>
    _OutputIterator
    replace_copy(_InputIterator __first, _InputIterator __last,
   _OutputIterator __result,
   const _Tp& __old_value, const _Tp& __new_value)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first, ++__result)
 *__result = *__first == __old_value ? __new_value : *__first;
      return __result;
    }
# 937 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate, typename _Tp>
    _OutputIterator
    replace_copy_if(_InputIterator __first, _InputIterator __last,
      _OutputIterator __result,
      _Predicate __pred, const _Tp& __new_value)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first, ++__result)
 *__result = __pred(*__first) ? __new_value : *__first;
      return __result;
    }
# 968 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Generator>
    void
    generate(_ForwardIterator __first, _ForwardIterator __last,
      _Generator __gen)
    {

     
     

      ;

      for ( ; __first != __last; ++__first)
 *__first = __gen();
    }
# 994 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _OutputIterator, typename _Size, typename _Generator>
    _OutputIterator
    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)
    {

     



      for ( ; __n > 0; --__n, ++__first)
 *__first = __gen();
      return __first;
    }
# 1021 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator, typename _Tp>
    _OutputIterator
    remove_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result, const _Tp& __value)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first)
 if (!(*__first == __value))
   {
     *__result = *__first;
     ++__result;
   }
      return __result;
    }
# 1057 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate>
    _OutputIterator
    remove_copy_if(_InputIterator __first, _InputIterator __last,
     _OutputIterator __result, _Predicate __pred)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first)
 if (!__pred(*__first))
   {
     *__result = *__first;
     ++__result;
   }
      return __result;
    }
# 1096 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    _ForwardIterator
    remove(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __value)
    {

     

     

      ;

      __first = std::find(__first, __last, __value);
      _ForwardIterator __i = __first;
      return __first == __last ? __first
          : std::remove_copy(++__i, __last,
        __first, __value);
    }
# 1131 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    remove_if(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      __first = std::find_if(__first, __last, __pred);
      _ForwardIterator __i = __first;
      return __first == __last ? __first
          : std::remove_copy_if(++__i, __last,
           __first, __pred);
    }
# 1157 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    _OutputIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _OutputIterator __result,
    output_iterator_tag)
    {

      typename iterator_traits<_InputIterator>::value_type __value = *__first;
      *__result = __value;
      while (++__first != __last)
 if (!(__value == *__first))
   {
     __value = *__first;
     *++__result = __value;
   }
      return ++__result;
    }
# 1182 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    _ForwardIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _ForwardIterator __result,
    forward_iterator_tag)
    {

      *__result = *__first;
      while (++__first != __last)
 if (!(*__result == *__first))
   *++__result = *__first;
      return ++__result;
    }
# 1204 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    _OutputIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _OutputIterator __result,
    _BinaryPredicate __binary_pred,
    output_iterator_tag)
    {

     



      typename iterator_traits<_InputIterator>::value_type __value = *__first;
      *__result = __value;
      while (++__first != __last)
 if (!__binary_pred(__value, *__first))
   {
     __value = *__first;
     *++__result = __value;
   }
      return ++__result;
    }
# 1236 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate>
    _ForwardIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _ForwardIterator __result,
    _BinaryPredicate __binary_pred,
    forward_iterator_tag)
    {

     



      *__result = *__first;
      while (++__first != __last)
 if (!__binary_pred(*__result, *__first)) *++__result = *__first;
      return ++__result;
    }
# 1268 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    inline _OutputIterator
    unique_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result)
    {

     
     

     

      ;

      typedef typename iterator_traits<_OutputIterator>::iterator_category
 _IterType;

      if (__first == __last) return __result;
      return std::__unique_copy(__first, __last, __result, _IterType());
    }
# 1303 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    inline _OutputIterator
    unique_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result,
  _BinaryPredicate __binary_pred)
    {

     
     

      ;

      typedef typename iterator_traits<_OutputIterator>::iterator_category
 _IterType;

      if (__first == __last) return __result;
      return std::__unique_copy(__first, __last, __result,
    __binary_pred, _IterType());
    }
# 1337 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    _ForwardIterator
    unique(_ForwardIterator __first, _ForwardIterator __last)
    {

     

     

      ;


      __first = std::adjacent_find(__first, __last);
      if (__first == __last)
 return __last;


      _ForwardIterator __dest = __first;
      ++__first;
      while (++__first != __last)
 if (!(*__dest == *__first))
   *++__dest = *__first;
      return ++__dest;
    }
# 1376 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _BinaryPredicate>
    _ForwardIterator
    unique(_ForwardIterator __first, _ForwardIterator __last,
           _BinaryPredicate __binary_pred)
    {

     

     


      ;


      __first = std::adjacent_find(__first, __last, __binary_pred);
      if (__first == __last)
 return __last;


      _ForwardIterator __dest = __first;
      ++__first;
      while (++__first != __last)
 if (!__binary_pred(*__dest, *__first))
   *++__dest = *__first;
      return ++__dest;
    }
# 1410 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    void
    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
       bidirectional_iterator_tag)
    {
      while (true)
 if (__first == __last || __first == --__last)
   return;
 else
   {
     std::iter_swap(__first, __last);
     ++__first;
   }
    }
# 1432 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    void
    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
       random_access_iterator_tag)
    {
      if (__first == __last)
 return;
      --__last;
      while (__first < __last)
 {
   std::iter_swap(__first, __last);
   ++__first;
   --__last;
 }
    }
# 1459 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    inline void
    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
    {

     

      ;
      std::__reverse(__first, __last, std::__iterator_category(__first));
    }
# 1485 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _OutputIterator>
    _OutputIterator
    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
        _OutputIterator __result)
    {

     

     

      ;

      while (__first != __last)
 {
   --__last;
   *__result = *__last;
   ++__result;
 }
      return __result;
    }
# 1513 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _EuclideanRingElement>
    _EuclideanRingElement
    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
    {
      while (__n != 0)
 {
   _EuclideanRingElement __t = __m % __n;
   __m = __n;
   __n = __t;
 }
      return __m;
    }






  template<typename _ForwardIterator>
    void
    __rotate(_ForwardIterator __first,
      _ForwardIterator __middle,
      _ForwardIterator __last,
      forward_iterator_tag)
    {
      if (__first == __middle || __last == __middle)
 return;

      _ForwardIterator __first2 = __middle;
      do
 {
   swap(*__first, *__first2);
   ++__first;
   ++__first2;
   if (__first == __middle)
     __middle = __first2;
 }
      while (__first2 != __last);

      __first2 = __middle;

      while (__first2 != __last)
 {
   swap(*__first, *__first2);
   ++__first;
   ++__first2;
   if (__first == __middle)
     __middle = __first2;
   else if (__first2 == __last)
     __first2 = __middle;
 }
    }






  template<typename _BidirectionalIterator>
    void
    __rotate(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
       bidirectional_iterator_tag)
    {

     


      if (__first == __middle || __last == __middle)
 return;

      std::__reverse(__first, __middle, bidirectional_iterator_tag());
      std::__reverse(__middle, __last, bidirectional_iterator_tag());

      while (__first != __middle && __middle != __last)
 {
   swap(*__first, *--__last);
   ++__first;
 }

      if (__first == __middle)
 std::__reverse(__middle, __last, bidirectional_iterator_tag());
      else
 std::__reverse(__first, __middle, bidirectional_iterator_tag());
    }






  template<typename _RandomAccessIterator>
    void
    __rotate(_RandomAccessIterator __first,
      _RandomAccessIterator __middle,
      _RandomAccessIterator __last,
      random_access_iterator_tag)
    {

     


      if (__first == __middle || __last == __middle)
 return;

      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      const _Distance __n = __last - __first;
      const _Distance __k = __middle - __first;
      const _Distance __l = __n - __k;

      if (__k == __l)
 {
   std::swap_ranges(__first, __middle, __middle);
   return;
 }

      const _Distance __d = __gcd(__n, __k);

      for (_Distance __i = 0; __i < __d; __i++)
 {
   _ValueType __tmp = *__first;
   _RandomAccessIterator __p = __first;

   if (__k < __l)
     {
       for (_Distance __j = 0; __j < __l / __d; __j++)
  {
    if (__p > __first + __l)
      {
        *__p = *(__p - __l);
        __p -= __l;
      }

    *__p = *(__p + __k);
    __p += __k;
  }
     }
   else
     {
       for (_Distance __j = 0; __j < __k / __d - 1; __j ++)
  {
    if (__p < __last - __k)
      {
        *__p = *(__p + __k);
        __p += __k;
      }
    *__p = * (__p - __l);
    __p -= __l;
  }
     }

   *__p = __tmp;
   ++__first;
 }
    }
# 1692 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    inline void
    rotate(_ForwardIterator __first, _ForwardIterator __middle,
    _ForwardIterator __last)
    {

     

      ;
      ;

      typedef typename iterator_traits<_ForwardIterator>::iterator_category
 _IterType;
      std::__rotate(__first, __middle, __last, _IterType());
    }
# 1725 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _OutputIterator>
    _OutputIterator
    rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
                _ForwardIterator __last, _OutputIterator __result)
    {

     
     

      ;
      ;

      return std::copy(__first, __middle,
                       std::copy(__middle, __last, __result));
    }
# 1751 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

      ;

      if (__first != __last)
 for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
   std::iter_swap(__i, __first + (std::rand() % ((__i - __first) + 1)));
    }
# 1778 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _RandomNumberGenerator>
    void
    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,
     _RandomNumberGenerator& __rand)
    {

     

      ;

      if (__first == __last)
 return;
      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 std::iter_swap(__i, __first + __rand((__i - __first) + 1));
    }







  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    __partition(_ForwardIterator __first, _ForwardIterator __last,
  _Predicate __pred,
  forward_iterator_tag)
    {
      if (__first == __last)
 return __first;

      while (__pred(*__first))
 if (++__first == __last)
   return __first;

      _ForwardIterator __next = __first;

      while (++__next != __last)
 if (__pred(*__next))
   {
     swap(*__first, *__next);
     ++__first;
   }

      return __first;
    }






  template<typename _BidirectionalIterator, typename _Predicate>
    _BidirectionalIterator
    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
  _Predicate __pred,
  bidirectional_iterator_tag)
    {
      while (true)
 {
   while (true)
     if (__first == __last)
       return __first;
     else if (__pred(*__first))
       ++__first;
     else
       break;
   --__last;
   while (true)
     if (__first == __last)
       return __first;
     else if (!__pred(*__last))
       --__last;
     else
       break;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }
# 1872 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    inline _ForwardIterator
    partition(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      return std::__partition(__first, __last, __pred,
         std::__iterator_category(__first));
    }







  template<typename _ForwardIterator, typename _Predicate, typename _Distance>
    _ForwardIterator
    __inplace_stable_partition(_ForwardIterator __first,
          _ForwardIterator __last,
          _Predicate __pred, _Distance __len)
    {
      if (__len == 1)
 return __pred(*__first) ? __last : __first;
      _ForwardIterator __middle = __first;
      std::advance(__middle, __len / 2);
      _ForwardIterator __begin = std::__inplace_stable_partition(__first,
         __middle,
         __pred,
         __len / 2);
      _ForwardIterator __end = std::__inplace_stable_partition(__middle, __last,
              __pred,
              __len
              - __len / 2);
      std::rotate(__begin, __middle, __end);
      std::advance(__begin, std::distance(__middle, __end));
      return __begin;
    }






  template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
    typename _Distance>
    _ForwardIterator
    __stable_partition_adaptive(_ForwardIterator __first,
    _ForwardIterator __last,
    _Predicate __pred, _Distance __len,
    _Pointer __buffer,
    _Distance __buffer_size)
    {
      if (__len <= __buffer_size)
 {
   _ForwardIterator __result1 = __first;
   _Pointer __result2 = __buffer;
   for ( ; __first != __last ; ++__first)
     if (__pred(*__first))
       {
  *__result1 = *__first;
  ++__result1;
       }
     else
       {
  *__result2 = *__first;
  ++__result2;
       }
   std::copy(__buffer, __result2, __result1);
   return __result1;
 }
      else
 {
   _ForwardIterator __middle = __first;
   std::advance(__middle, __len / 2);
   _ForwardIterator __begin =
     std::__stable_partition_adaptive(__first, __middle, __pred,
          __len / 2, __buffer,
          __buffer_size);
   _ForwardIterator __end =
     std::__stable_partition_adaptive(__middle, __last, __pred,
          __len - __len / 2,
          __buffer, __buffer_size);
   std::rotate(__begin, __middle, __end);
   std::advance(__begin, std::distance(__middle, __end));
   return __begin;
 }
    }
# 1983 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    stable_partition(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      if (__first == __last)
 return __first;
      else
 {
   typedef typename iterator_traits<_ForwardIterator>::value_type
     _ValueType;
   typedef typename iterator_traits<_ForwardIterator>::difference_type
     _DistanceType;

   _Temporary_buffer<_ForwardIterator, _ValueType> __buf(__first,
        __last);
 if (__buf.size() > 0)
   return
     std::__stable_partition_adaptive(__first, __last, __pred,
       _DistanceType(__buf.requested_size()),
       __buf.begin(), __buf.size());
 else
   return
     std::__inplace_stable_partition(__first, __last, __pred,
      _DistanceType(__buf.requested_size()));
 }
    }






  template<typename _RandomAccessIterator, typename _Tp>
    _RandomAccessIterator
    __unguarded_partition(_RandomAccessIterator __first,
     _RandomAccessIterator __last, _Tp __pivot)
    {
      while (true)
 {
   while (*__first < __pivot)
     ++__first;
   --__last;
   while (__pivot < *__last)
     --__last;
   if (!(__first < __last))
     return __first;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }






  template<typename _RandomAccessIterator, typename _Tp, typename _Compare>
    _RandomAccessIterator
    __unguarded_partition(_RandomAccessIterator __first,
     _RandomAccessIterator __last,
     _Tp __pivot, _Compare __comp)
    {
      while (true)
 {
   while (__comp(*__first, __pivot))
     ++__first;
   --__last;
   while (__comp(__pivot, *__last))
     --__last;
   if (!(__first < __last))
     return __first;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }







  enum { _S_threshold = 16 };






  template<typename _RandomAccessIterator, typename _Tp>
    void
    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val)
    {
      _RandomAccessIterator __next = __last;
      --__next;
      while (__val < *__next)
 {
   *__last = *__next;
   __last = __next;
   --__next;
 }
      *__last = __val;
    }






  template<typename _RandomAccessIterator, typename _Tp, typename _Compare>
    void
    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val,
         _Compare __comp)
    {
      _RandomAccessIterator __next = __last;
      --__next;
      while (__comp(__val, *__next))
 {
   *__last = *__next;
   __last = __next;
   --__next;
 }
      *__last = __val;
    }






  template<typename _RandomAccessIterator>
    void
    __insertion_sort(_RandomAccessIterator __first,
       _RandomAccessIterator __last)
    {
      if (__first == __last)
 return;

      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 {
   typename iterator_traits<_RandomAccessIterator>::value_type
     __val = *__i;
   if (__val < *__first)
     {
       std::copy_backward(__first, __i, __i + 1);
       *__first = __val;
     }
   else
     std::__unguarded_linear_insert(__i, __val);
 }
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __insertion_sort(_RandomAccessIterator __first,
       _RandomAccessIterator __last, _Compare __comp)
    {
      if (__first == __last) return;

      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 {
   typename iterator_traits<_RandomAccessIterator>::value_type
     __val = *__i;
   if (__comp(__val, *__first))
     {
       std::copy_backward(__first, __i, __i + 1);
       *__first = __val;
     }
   else
     std::__unguarded_linear_insert(__i, __val, __comp);
 }
    }






  template<typename _RandomAccessIterator>
    inline void
    __unguarded_insertion_sort(_RandomAccessIterator __first,
          _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 std::__unguarded_linear_insert(__i, _ValueType(*__i));
    }






  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __unguarded_insertion_sort(_RandomAccessIterator __first,
          _RandomAccessIterator __last, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 std::__unguarded_linear_insert(__i, _ValueType(*__i), __comp);
    }






  template<typename _RandomAccessIterator>
    void
    __final_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last)
    {
      if (__last - __first > int(_S_threshold))
 {
   std::__insertion_sort(__first, __first + int(_S_threshold));
   std::__unguarded_insertion_sort(__first + int(_S_threshold), __last);
 }
      else
 std::__insertion_sort(__first, __last);
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __final_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp)
    {
      if (__last - __first > int(_S_threshold))
 {
   std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
   std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
       __comp);
 }
      else
 std::__insertion_sort(__first, __last, __comp);
    }






  template<typename _Size>
    inline _Size
    __lg(_Size __n)
    {
      _Size __k;
      for (__k = 0; __n != 1; __n >>= 1)
 ++__k;
      return __k;
    }
# 2272 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    void
    partial_sort(_RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;
      ;

      std::make_heap(__first, __middle);
      for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
 if (*__i < *__first)
   std::__pop_heap(__first, __middle, __i, _ValueType(*__i));
      std::sort_heap(__first, __middle);
    }
# 2313 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    void
    partial_sort(_RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last,
   _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     

      ;
      ;

      std::make_heap(__first, __middle, __comp);
      for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
 if (__comp(*__i, *__first))
   std::__pop_heap(__first, __middle, __i, _ValueType(*__i), __comp);
      std::sort_heap(__first, __middle, __comp);
    }
# 2355 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _RandomAccessIterator>
    _RandomAccessIterator
    partial_sort_copy(_InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last)
    {
      typedef typename iterator_traits<_InputIterator>::value_type
 _InputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _OutputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     
     

     
     
      ;
      ;

      if (__result_first == __result_last)
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while(__first != __last && __result_real_last != __result_last)
 {
   *__result_real_last = *__first;
   ++__result_real_last;
   ++__first;
 }
      std::make_heap(__result_first, __result_real_last);
      while (__first != __last)
 {
   if (*__first < *__result_first)
     std::__adjust_heap(__result_first, _DistanceType(0),
          _DistanceType(__result_real_last
          - __result_first),
          _InputValueType(*__first));
   ++__first;
 }
      std::sort_heap(__result_first, __result_real_last);
      return __result_real_last;
    }
# 2419 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _RandomAccessIterator, typename _Compare>
    _RandomAccessIterator
    partial_sort_copy(_InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last,
        _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator>::value_type
 _InputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _OutputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     
     

     

     

      ;
      ;

      if (__result_first == __result_last)
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while(__first != __last && __result_real_last != __result_last)
 {
   *__result_real_last = *__first;
   ++__result_real_last;
   ++__first;
 }
      std::make_heap(__result_first, __result_real_last, __comp);
      while (__first != __last)
 {
   if (__comp(*__first, *__result_first))
     std::__adjust_heap(__result_first, _DistanceType(0),
          _DistanceType(__result_real_last
          - __result_first),
          _InputValueType(*__first),
          __comp);
   ++__first;
 }
      std::sort_heap(__result_first, __result_real_last, __comp);
      return __result_real_last;
    }






  template<typename _RandomAccessIterator, typename _Size>
    void
    __introsort_loop(_RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      while (__last - __first > int(_S_threshold))
 {
   if (__depth_limit == 0)
     {
       std::partial_sort(__first, __last, __last);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last
          - 1))));
   std::__introsort_loop(__cut, __last, __depth_limit);
   __last = __cut;
 }
    }






  template<typename _RandomAccessIterator, typename _Size, typename _Compare>
    void
    __introsort_loop(_RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      while (__last - __first > int(_S_threshold))
 {
   if (__depth_limit == 0)
     {
       std::partial_sort(__first, __last, __last, __comp);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last - 1),
        __comp)),
           __comp);
   std::__introsort_loop(__cut, __last, __depth_limit, __comp);
   __last = __cut;
 }
    }
# 2554 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;

      if (__first != __last)
 {
   std::__introsort_loop(__first, __last, __lg(__last - __first) * 2);
   std::__final_insertion_sort(__first, __last);
 }
    }
# 2588 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     

      ;

      if (__first != __last)
 {
   std::__introsort_loop(__first, __last, __lg(__last - __first) * 2,
    __comp);
   std::__final_insertion_sort(__first, __last, __comp);
 }
    }
# 2621 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    _ForwardIterator
    lower_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;






     
     
     
      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (*__middle < __val)
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 2676 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    _ForwardIterator
    lower_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     

      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__comp(*__middle, __val))
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 2723 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    _ForwardIterator
    upper_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;



     
     
     
      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__val < *__middle)
     __len = __half;
   else
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }
# 2775 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    _ForwardIterator
    upper_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     

      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__comp(__val, *__middle))
     __len = __half;
   else
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }






  template<typename _BidirectionalIterator, typename _Distance>
    void
    __merge_without_buffer(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2)
    {
      if (__len1 == 0 || __len2 == 0)
 return;
      if (__len1 + __len2 == 2)
 {
   if (*__middle < *__first)
     std::iter_swap(__first, __middle);
   return;
 }
      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if (__len1 > __len2)
 {
   __len11 = __len1 / 2;
   std::advance(__first_cut, __len11);
   __second_cut = std::lower_bound(__middle, __last, *__first_cut);
   __len22 = std::distance(__middle, __second_cut);
 }
      else
 {
   __len22 = __len2 / 2;
   std::advance(__second_cut, __len22);
   __first_cut = std::upper_bound(__first, __middle, *__second_cut);
   __len11 = std::distance(__first, __first_cut);
 }
      std::rotate(__first_cut, __middle, __second_cut);
      _BidirectionalIterator __new_middle = __first_cut;
      std::advance(__new_middle, std::distance(__middle, __second_cut));
      std::__merge_without_buffer(__first, __first_cut, __new_middle,
      __len11, __len22);
      std::__merge_without_buffer(__new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22);
    }






  template<typename _BidirectionalIterator, typename _Distance,
    typename _Compare>
    void
    __merge_without_buffer(_BidirectionalIterator __first,
                           _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2,
      _Compare __comp)
    {
      if (__len1 == 0 || __len2 == 0)
 return;
      if (__len1 + __len2 == 2)
 {
   if (__comp(*__middle, *__first))
     std::iter_swap(__first, __middle);
   return;
 }
      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if (__len1 > __len2)
 {
   __len11 = __len1 / 2;
   std::advance(__first_cut, __len11);
   __second_cut = std::lower_bound(__middle, __last, *__first_cut,
       __comp);
   __len22 = std::distance(__middle, __second_cut);
 }
      else
 {
   __len22 = __len2 / 2;
   std::advance(__second_cut, __len22);
   __first_cut = std::upper_bound(__first, __middle, *__second_cut,
      __comp);
   __len11 = std::distance(__first, __first_cut);
 }
      std::rotate(__first_cut, __middle, __second_cut);
      _BidirectionalIterator __new_middle = __first_cut;
      std::advance(__new_middle, std::distance(__middle, __second_cut));
      std::__merge_without_buffer(__first, __first_cut, __new_middle,
      __len11, __len22, __comp);
      std::__merge_without_buffer(__new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22, __comp);
    }






  template<typename _RandomAccessIterator>
    void
    __inplace_stable_sort(_RandomAccessIterator __first,
     _RandomAccessIterator __last)
    {
      if (__last - __first < 15)
 {
   std::__insertion_sort(__first, __last);
   return;
 }
      _RandomAccessIterator __middle = __first + (__last - __first) / 2;
      std::__inplace_stable_sort(__first, __middle);
      std::__inplace_stable_sort(__middle, __last);
      std::__merge_without_buffer(__first, __middle, __last,
      __middle - __first,
      __last - __middle);
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __inplace_stable_sort(_RandomAccessIterator __first,
     _RandomAccessIterator __last, _Compare __comp)
    {
      if (__last - __first < 15)
 {
   std::__insertion_sort(__first, __last, __comp);
   return;
 }
      _RandomAccessIterator __middle = __first + (__last - __first) / 2;
      std::__inplace_stable_sort(__first, __middle, __comp);
      std::__inplace_stable_sort(__middle, __last, __comp);
      std::__merge_without_buffer(__first, __middle, __last,
      __middle - __first,
      __last - __middle,
      __comp);
    }
# 2973 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    merge(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result)
    {

     
     
     

     


     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (*__first2 < *__first1)
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }
# 3031 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    merge(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result, _Compare __comp)
    {

     
     
     


     

     


      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(*__first2, *__first1))
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }

  template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance>
    void
    __merge_sort_loop(_RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result,
        _Distance __step_size)
    {
      const _Distance __two_step = 2 * __step_size;

      while (__last - __first >= __two_step)
 {
   __result = std::merge(__first, __first + __step_size,
    __first + __step_size, __first + __two_step,
    __result);
   __first += __two_step;
 }

      __step_size = std::min(_Distance(__last - __first), __step_size);
      std::merge(__first, __first + __step_size, __first + __step_size, __last,
   __result);
    }

  template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance, typename _Compare>
    void
    __merge_sort_loop(_RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result, _Distance __step_size,
        _Compare __comp)
    {
      const _Distance __two_step = 2 * __step_size;

      while (__last - __first >= __two_step)
 {
   __result = std::merge(__first, __first + __step_size,
    __first + __step_size, __first + __two_step,
    __result,
    __comp);
   __first += __two_step;
 }
      __step_size = std::min(_Distance(__last - __first), __step_size);

      std::merge(__first, __first + __step_size,
   __first + __step_size, __last,
   __result,
   __comp);
    }

  enum { _S_chunk_size = 7 };

  template<typename _RandomAccessIterator, typename _Distance>
    void
    __chunk_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size)
    {
      while (__last - __first >= __chunk_size)
 {
   std::__insertion_sort(__first, __first + __chunk_size);
   __first += __chunk_size;
 }
      std::__insertion_sort(__first, __last);
    }

  template<typename _RandomAccessIterator, typename _Distance, typename _Compare>
    void
    __chunk_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size, _Compare __comp)
    {
      while (__last - __first >= __chunk_size)
 {
   std::__insertion_sort(__first, __first + __chunk_size, __comp);
   __first += __chunk_size;
 }
      std::__insertion_sort(__first, __last, __comp);
    }

  template<typename _RandomAccessIterator, typename _Pointer>
    void
    __merge_sort_with_buffer(_RandomAccessIterator __first,
        _RandomAccessIterator __last,
                             _Pointer __buffer)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std::__chunk_insertion_sort(__first, __last, __step_size);

      while (__step_size < __len)
 {
   std::__merge_sort_loop(__first, __last, __buffer, __step_size);
   __step_size *= 2;
   std::__merge_sort_loop(__buffer, __buffer_last, __first, __step_size);
   __step_size *= 2;
 }
    }

  template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
    void
    __merge_sort_with_buffer(_RandomAccessIterator __first,
        _RandomAccessIterator __last,
                             _Pointer __buffer, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std::__chunk_insertion_sort(__first, __last, __step_size, __comp);

      while (__step_size < __len)
 {
   std::__merge_sort_loop(__first, __last, __buffer,
     __step_size, __comp);
   __step_size *= 2;
   std::__merge_sort_loop(__buffer, __buffer_last, __first,
     __step_size, __comp);
   __step_size *= 2;
 }
    }






  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3>
    _BidirectionalIterator3
    __merge_backward(_BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result)
    {
      if (__first1 == __last1)
 return std::copy_backward(__first2, __last2, __result);
      if (__first2 == __last2)
 return std::copy_backward(__first1, __last1, __result);
      --__last1;
      --__last2;
      while (true)
 {
   if (*__last2 < *__last1)
     {
       *--__result = *__last1;
       if (__first1 == __last1)
  return std::copy_backward(__first2, ++__last2, __result);
       --__last1;
     }
   else
     {
       *--__result = *__last2;
       if (__first2 == __last2)
  return std::copy_backward(__first1, ++__last1, __result);
       --__last2;
     }
 }
    }






  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3, typename _Compare>
    _BidirectionalIterator3
    __merge_backward(_BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result,
       _Compare __comp)
    {
      if (__first1 == __last1)
 return std::copy_backward(__first2, __last2, __result);
      if (__first2 == __last2)
 return std::copy_backward(__first1, __last1, __result);
      --__last1;
      --__last2;
      while (true)
 {
   if (__comp(*__last2, *__last1))
     {
       *--__result = *__last1;
       if (__first1 == __last1)
  return std::copy_backward(__first2, ++__last2, __result);
       --__last1;
     }
   else
     {
       *--__result = *__last2;
       if (__first2 == __last2)
  return std::copy_backward(__first1, ++__last1, __result);
       --__last2;
     }
 }
    }






  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _Distance>
    _BidirectionalIterator1
    __rotate_adaptive(_BidirectionalIterator1 __first,
        _BidirectionalIterator1 __middle,
        _BidirectionalIterator1 __last,
        _Distance __len1, _Distance __len2,
        _BidirectionalIterator2 __buffer,
        _Distance __buffer_size)
    {
      _BidirectionalIterator2 __buffer_end;
      if (__len1 > __len2 && __len2 <= __buffer_size)
 {
   __buffer_end = std::copy(__middle, __last, __buffer);
   std::copy_backward(__first, __middle, __last);
   return std::copy(__buffer, __buffer_end, __first);
 }
      else if (__len1 <= __buffer_size)
 {
   __buffer_end = std::copy(__first, __middle, __buffer);
   std::copy(__middle, __last, __first);
   return std::copy_backward(__buffer, __buffer_end, __last);
 }
      else
 {
   std::rotate(__first, __middle, __last);
   std::advance(__first, std::distance(__middle, __last));
   return __first;
 }
    }






  template<typename _BidirectionalIterator, typename _Distance,
    typename _Pointer>
    void
    __merge_adaptive(_BidirectionalIterator __first,
                     _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size)
    {
      if (__len1 <= __len2 && __len1 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__first, __middle, __buffer);
   std::merge(__buffer, __buffer_end, __middle, __last, __first);
 }
      else if (__len2 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__middle, __last, __buffer);
   std::__merge_backward(__first, __middle, __buffer,
    __buffer_end, __last);
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if (__len1 > __len2)
     {
       __len11 = __len1 / 2;
       std::advance(__first_cut, __len11);
       __second_cut = std::lower_bound(__middle, __last,
           *__first_cut);
       __len22 = std::distance(__middle, __second_cut);
     }
   else
     {
       __len22 = __len2 / 2;
       std::advance(__second_cut, __len22);
       __first_cut = std::upper_bound(__first, __middle,
          *__second_cut);
       __len11 = std::distance(__first, __first_cut);
     }
   _BidirectionalIterator __new_middle =
     std::__rotate_adaptive(__first_cut, __middle, __second_cut,
       __len1 - __len11, __len22, __buffer,
       __buffer_size);
   std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size);
   std::__merge_adaptive(__new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer, __buffer_size);
 }
    }






  template<typename _BidirectionalIterator, typename _Distance, typename _Pointer,
    typename _Compare>
    void
    __merge_adaptive(_BidirectionalIterator __first,
                     _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size,
       _Compare __comp)
    {
      if (__len1 <= __len2 && __len1 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__first, __middle, __buffer);
   std::merge(__buffer, __buffer_end, __middle, __last, __first, __comp);
 }
      else if (__len2 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__middle, __last, __buffer);
   std::__merge_backward(__first, __middle, __buffer, __buffer_end,
    __last, __comp);
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if (__len1 > __len2)
     {
       __len11 = __len1 / 2;
       std::advance(__first_cut, __len11);
       __second_cut = std::lower_bound(__middle, __last, *__first_cut,
           __comp);
       __len22 = std::distance(__middle, __second_cut);
     }
   else
     {
       __len22 = __len2 / 2;
       std::advance(__second_cut, __len22);
       __first_cut = std::upper_bound(__first, __middle, *__second_cut,
          __comp);
       __len11 = std::distance(__first, __first_cut);
     }
   _BidirectionalIterator __new_middle =
     std::__rotate_adaptive(__first_cut, __middle, __second_cut,
       __len1 - __len11, __len22, __buffer,
       __buffer_size);
   std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size, __comp);
   std::__merge_adaptive(__new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer,
    __buffer_size, __comp);
 }
    }
# 3451 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    void
    inplace_merge(_BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last)
    {
      typedef typename iterator_traits<_BidirectionalIterator>::value_type
          _ValueType;
      typedef typename iterator_traits<_BidirectionalIterator>::difference_type
          _DistanceType;


     

     
      ;
      ;

      if (__first == __middle || __middle == __last)
 return;

      _DistanceType __len1 = std::distance(__first, __middle);
      _DistanceType __len2 = std::distance(__middle, __last);

      _Temporary_buffer<_BidirectionalIterator, _ValueType> __buf(__first,
          __last);
      if (__buf.begin() == 0)
 std::__merge_without_buffer(__first, __middle, __last, __len1, __len2);
      else
 std::__merge_adaptive(__first, __middle, __last, __len1, __len2,
         __buf.begin(), _DistanceType(__buf.size()));
    }
# 3505 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    void
    inplace_merge(_BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last,
    _Compare __comp)
    {
      typedef typename iterator_traits<_BidirectionalIterator>::value_type
          _ValueType;
      typedef typename iterator_traits<_BidirectionalIterator>::difference_type
          _DistanceType;


     

     

      ;
      ;

      if (__first == __middle || __middle == __last)
 return;

      const _DistanceType __len1 = std::distance(__first, __middle);
      const _DistanceType __len2 = std::distance(__middle, __last);

      _Temporary_buffer<_BidirectionalIterator, _ValueType> __buf(__first,
          __last);
      if (__buf.begin() == 0)
 std::__merge_without_buffer(__first, __middle, __last, __len1,
        __len2, __comp);
      else
 std::__merge_adaptive(__first, __middle, __last, __len1, __len2,
         __buf.begin(), _DistanceType(__buf.size()),
         __comp);
    }

  template<typename _RandomAccessIterator, typename _Pointer,
    typename _Distance>
    void
    __stable_sort_adaptive(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
                           _Pointer __buffer, _Distance __buffer_size)
    {
      const _Distance __len = (__last - __first + 1) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if (__len > __buffer_size)
 {
   std::__stable_sort_adaptive(__first, __middle,
          __buffer, __buffer_size);
   std::__stable_sort_adaptive(__middle, __last,
          __buffer, __buffer_size);
 }
      else
 {
   std::__merge_sort_with_buffer(__first, __middle, __buffer);
   std::__merge_sort_with_buffer(__middle, __last, __buffer);
 }
      std::__merge_adaptive(__first, __middle, __last,
       _Distance(__middle - __first),
       _Distance(__last - __middle),
       __buffer, __buffer_size);
    }

  template<typename _RandomAccessIterator, typename _Pointer,
    typename _Distance, typename _Compare>
    void
    __stable_sort_adaptive(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
                           _Pointer __buffer, _Distance __buffer_size,
                           _Compare __comp)
    {
      const _Distance __len = (__last - __first + 1) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if (__len > __buffer_size)
 {
   std::__stable_sort_adaptive(__first, __middle, __buffer,
          __buffer_size, __comp);
   std::__stable_sort_adaptive(__middle, __last, __buffer,
          __buffer_size, __comp);
 }
      else
 {
   std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
   std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
 }
      std::__merge_adaptive(__first, __middle, __last,
       _Distance(__middle - __first),
       _Distance(__last - __middle),
       __buffer, __buffer_size,
       __comp);
    }
# 3614 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     

     
      ;

      _Temporary_buffer<_RandomAccessIterator, _ValueType>
 buf(__first, __last);
      if (buf.begin() == 0)
 std::__inplace_stable_sort(__first, __last);
      else
 std::__stable_sort_adaptive(__first, __last, buf.begin(),
        _DistanceType(buf.size()));
    }
# 3655 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     

     


      ;

      _Temporary_buffer<_RandomAccessIterator, _ValueType> buf(__first, __last);
      if (buf.begin() == 0)
 std::__inplace_stable_sort(__first, __last, __comp);
      else
 std::__stable_sort_adaptive(__first, __last, buf.begin(),
        _DistanceType(buf.size()), __comp);
    }
# 3696 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    void
    nth_element(_RandomAccessIterator __first,
  _RandomAccessIterator __nth,
  _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;
      ;

      while (__last - __first > 3)
 {
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last
          - 1))));
   if (__cut <= __nth)
     __first = __cut;
   else
     __last = __cut;
 }
      std::__insertion_sort(__first, __last);
    }
# 3747 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    void
    nth_element(_RandomAccessIterator __first,
  _RandomAccessIterator __nth,
  _RandomAccessIterator __last,
       _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     

      ;
      ;

      while (__last - __first > 3)
 {
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last - 1),
             __comp)), __comp);
   if (__cut <= __nth)
     __first = __cut;
   else
     __last = __cut;
 }
      std::__insertion_sort(__first, __last, __comp);
    }
# 3800 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    pair<_ForwardIterator, _ForwardIterator>
    equal_range(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;



     
     
     
      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle, __left, __right;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (*__middle < __val)
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else if (__val < *__middle)
     __len = __half;
   else
     {
       __left = std::lower_bound(__first, __middle, __val);
       std::advance(__first, __len);
       __right = std::upper_bound(++__middle, __first, __val);
       return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
     }
 }
      return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
    }
# 3862 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    pair<_ForwardIterator, _ForwardIterator>
    equal_range(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val,
  _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     

     

      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle, __left, __right;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__comp(*__middle, __val))
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else if (__comp(__val, *__middle))
     __len = __half;
   else
     {
       __left = std::lower_bound(__first, __middle, __val, __comp);
       std::advance(__first, __len);
       __right = std::upper_bound(++__middle, __first, __val, __comp);
       return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
     }
 }
      return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
    }
# 3920 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    bool
    binary_search(_ForwardIterator __first, _ForwardIterator __last,
                  const _Tp& __val)
    {


     
     

     
      ;

      _ForwardIterator __i = std::lower_bound(__first, __last, __val);
      return __i != __last && !(__val < *__i);
    }
# 3952 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    bool
    binary_search(_ForwardIterator __first, _ForwardIterator __last,
                  const _Tp& __val, _Compare __comp)
    {

     
     

     

      ;

      _ForwardIterator __i = std::lower_bound(__first, __last, __val, __comp);
      return __i != __last && !__comp(__val, *__i);
    }
# 3990 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    bool
    includes(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2)
    {

     
     
     


     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first2 < *__first1)
   return false;
 else if(*__first1 < *__first2)
   ++__first1;
 else
   ++__first1, ++__first2;

      return __first2 == __last2;
    }
# 4036 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _Compare>
    bool
    includes(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)
    {

     
     
     


     


      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first2, *__first1))
   return false;
 else if(__comp(*__first1, *__first2))
   ++__first1;
 else
   ++__first1, ++__first2;

      return __first2 == __last2;
    }
# 4082 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_union(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result)
    {

     
     
     

     


     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (*__first1 < *__first2)
     {
       *__result = *__first1;
       ++__first1;
     }
   else if (*__first2 < *__first1)
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
       ++__first2;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }
# 4144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_union(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {

     
     
     


     

     


      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(*__first1, *__first2))
     {
       *__result = *__first1;
       ++__first1;
     }
   else if (__comp(*__first2, *__first1))
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
       ++__first2;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }
# 4205 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result)
    {

     
     
     

     


     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first1 < *__first2)
   ++__first1;
 else if (*__first2 < *__first1)
   ++__first2;
 else
   {
     *__result = *__first1;
     ++__first1;
     ++__first2;
     ++__result;
   }
      return __result;
    }
# 4259 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {

     
     
     


     

     


      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first1, *__first2))
   ++__first1;
 else if (__comp(*__first2, *__first1))
   ++__first2;
 else
   {
     *__result = *__first1;
     ++__first1;
     ++__first2;
     ++__result;
   }
      return __result;
    }
# 4313 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result)
    {

     
     
     

     


     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first1 < *__first2)
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (*__first2 < *__first1)
   ++__first2;
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first1, __last1, __result);
    }
# 4371 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result, _Compare __comp)
    {

     
     
     


     

     


      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first1, *__first2))
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (__comp(*__first2, *__first1))
   ++__first2;
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first1, __last1, __result);
    }
# 4425 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result)
    {

     
     
     

     


     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first1 < *__first2)
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (*__first2 < *__first1)
   {
     *__result = *__first2;
     ++__first2;
     ++__result;
   }
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first2, __last2, std::copy(__first1,
          __last1, __result));
    }
# 4486 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result,
        _Compare __comp)
    {

     
     
     


     

     


      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first1, *__first2))
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (__comp(*__first2, *__first1))
   {
     *__result = *__first2;
     ++__first2;
     ++__result;
   }
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first2, __last2, std::copy(__first1,
          __last1, __result));
    }
# 4539 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    _ForwardIterator
    max_element(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;

      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (*__result < *__first)
   __result = __first;
      return __result;
    }
# 4566 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Compare>
    _ForwardIterator
    max_element(_ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp)
    {

     
     


      ;

      if (__first == __last) return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (__comp(*__result, *__first)) __result = __first;
      return __result;
    }







  template<typename _ForwardIterator>
    _ForwardIterator
    min_element(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;

      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (*__first < *__result)
   __result = __first;
      return __result;
    }
# 4618 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Compare>
    _ForwardIterator
    min_element(_ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp)
    {

     
     


      ;

      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (__comp(*__first, *__result))
   __result = __first;
      return __result;
    }
# 4653 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    bool
    next_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last)
    {

     

     

      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (*__i < *__ii)
     {
       _BidirectionalIterator __j = __last;
       while (!(*__i < *--__j))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 4709 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    bool
    next_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp)
    {

     

     


      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (__comp(*__i, *__ii))
     {
       _BidirectionalIterator __j = __last;
       while (!__comp(*__i, *--__j))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 4764 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    bool
    prev_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last)
    {

     

     

      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (*__ii < *__i)
     {
       _BidirectionalIterator __j = __last;
       while (!(*--__j < *__i))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 4820 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    bool
    prev_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp)
    {

     

     


      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (__comp(*__ii, *__i))
     {
       _BidirectionalIterator __j = __last;
       while (!__comp(*--__j, *__i))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 4879 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    _InputIterator
    find_first_of(_InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2)
    {

     
     
     


      ;
      ;

      for ( ; __first1 != __last1; ++__first1)
 for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
   if (*__first1 == *__iter)
     return __first1;
      return __last1;
    }
# 4915 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate>
    _InputIterator
    find_first_of(_InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2,
    _BinaryPredicate __comp)
    {

     
     
     


      ;
      ;

      for ( ; __first1 != __last1; ++__first1)
 for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
   if (__comp(*__first1, *__iter))
     return __first1;
      return __last1;
    }
# 4945 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator1
    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag)
    {
      if (__first2 == __last2)
 return __last1;
      else
 {
   _ForwardIterator1 __result = __last1;
   while (1)
     {
       _ForwardIterator1 __new_result
  = std::search(__first1, __last1, __first2, __last2);
       if (__new_result == __last1)
  return __result;
       else
  {
    __result = __new_result;
    __first1 = __new_result;
    ++__first1;
  }
     }
 }
    }

  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    _ForwardIterator1
    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag,
        _BinaryPredicate __comp)
    {
      if (__first2 == __last2)
 return __last1;
      else
 {
   _ForwardIterator1 __result = __last1;
   while (1)
     {
       _ForwardIterator1 __new_result
  = std::search(__first1, __last1, __first2, __last2, __comp);
       if (__new_result == __last1)
  return __result;
       else
  {
    __result = __new_result;
    __first1 = __new_result;
    ++__first1;
  }
     }
 }
    }


  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2>
    _BidirectionalIterator1
    __find_end(_BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag)
    {

     

     


      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;

      _RevIterator1 __rlast1(__first1);
      _RevIterator2 __rlast2(__first2);
      _RevIterator1 __rresult = std::search(_RevIterator1(__last1), __rlast1,
         _RevIterator2(__last2), __rlast2);

      if (__rresult == __rlast1)
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult.base();
   std::advance(__result, -std::distance(__first2, __last2));
   return __result;
 }
    }

  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BinaryPredicate>
    _BidirectionalIterator1
    __find_end(_BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag,
        _BinaryPredicate __comp)
    {

     

     


      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;

      _RevIterator1 __rlast1(__first1);
      _RevIterator2 __rlast2(__first2);
      _RevIterator1 __rresult = std::search(_RevIterator1(__last1), __rlast1,
         _RevIterator2(__last2), __rlast2,
         __comp);

      if (__rresult == __rlast1)
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult.base();
   std::advance(__result, -std::distance(__first2, __last2));
   return __result;
 }
    }
# 5095 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline _ForwardIterator1
    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2)
    {

     
     
     


      ;
      ;

      return std::__find_end(__first1, __last1, __first2, __last2,
        std::__iterator_category(__first1),
        std::__iterator_category(__first2));
    }
# 5140 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    inline _ForwardIterator1
    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2,
      _BinaryPredicate __comp)
    {

     
     
     


      ;
      ;

      return std::__find_end(__first1, __last1, __first2, __last2,
        std::__iterator_category(__first1),
        std::__iterator_category(__first2),
        __comp);
    }

}
# 69 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/algorithm" 2 3
# 56 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.tcc" 1 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.tcc" 3
       
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.tcc" 3

namespace std
{
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
    { return __ptr == 0; }

  template<typename _Type>
    inline bool
    __is_null_pointer(_Type)
    { return false; }

  template<typename _CharT, typename _Traits, typename _Alloc>
    const typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    _Rep::_S_max_size = (((npos - sizeof(_Rep_base))/sizeof(_CharT)) - 1) / 4;

  template<typename _CharT, typename _Traits, typename _Alloc>
    const _CharT
    basic_string<_CharT, _Traits, _Alloc>::
    _Rep::_S_terminal = _CharT();

  template<typename _CharT, typename _Traits, typename _Alloc>
    const typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::npos;



  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep_storage[
    (sizeof(_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) /
      sizeof(size_type)];





  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      _CharT*
      basic_string<_CharT, _Traits, _Alloc>::
      _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
     input_iterator_tag)
      {

 if (__beg == __end && __a == _Alloc())
   return _S_empty_rep()._M_refdata();


 _CharT __buf[128];
 size_type __len = 0;
 while (__beg != __end && __len < sizeof(__buf) / sizeof(_CharT))
   {
     __buf[__len++] = *__beg;
     ++__beg;
   }
 _Rep* __r = _Rep::_S_create(__len, size_type(0), __a);
 _M_copy(__r->_M_refdata(), __buf, __len);
 try
   {
     while (__beg != __end)
       {
  if (__len == __r->_M_capacity)
    {

      _Rep* __another = _Rep::_S_create(__len + 1, __len, __a);
      _M_copy(__another->_M_refdata(), __r->_M_refdata(), __len);
      __r->_M_destroy(__a);
      __r = __another;
    }
  __r->_M_refdata()[__len++] = *__beg;
  ++__beg;
       }
   }
 catch(...)
   {
     __r->_M_destroy(__a);
     throw;
   }
 __r->_M_set_length_and_sharable(__len);
 return __r->_M_refdata();
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template <typename _InIterator>
      _CharT*
      basic_string<_CharT, _Traits, _Alloc>::
      _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
     forward_iterator_tag)
      {

 if (__beg == __end && __a == _Alloc())
   return _S_empty_rep()._M_refdata();


 if (__builtin_expect(__is_null_pointer(__beg) && __beg != __end, 0))
   __throw_logic_error(("basic_string::_S_construct NULL not valid"));

 const size_type __dnew = static_cast<size_type>(std::distance(__beg,
              __end));

 _Rep* __r = _Rep::_S_create(__dnew, size_type(0), __a);
 try
   { _S_copy_chars(__r->_M_refdata(), __beg, __end); }
 catch(...)
   {
     __r->_M_destroy(__a);
     throw;
   }
 __r->_M_set_length_and_sharable(__dnew);
 return __r->_M_refdata();
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _CharT*
    basic_string<_CharT, _Traits, _Alloc>::
    _S_construct(size_type __n, _CharT __c, const _Alloc& __a)
    {

      if (__n == 0 && __a == _Alloc())
 return _S_empty_rep()._M_refdata();


      _Rep* __r = _Rep::_S_create(__n, size_type(0), __a);
      if (__n)
 _M_assign(__r->_M_refdata(), __n, __c);

      __r->_M_set_length_and_sharable(__n);
      return __r->_M_refdata();
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const basic_string& __str)
    : _M_dataplus(__str._M_rep()->_M_grab(_Alloc(__str.get_allocator()),
       __str.get_allocator()),
    __str.get_allocator())
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const _Alloc& __a)
    : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const basic_string& __str, size_type __pos, size_type __n)
    : _M_dataplus(_S_construct(__str._M_data()
          + __str._M_check(__pos,
      "basic_string::basic_string"),
          __str._M_data() + __str._M_limit(__pos, __n)
          + __pos, _Alloc()), _Alloc())
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const basic_string& __str, size_type __pos,
   size_type __n, const _Alloc& __a)
    : _M_dataplus(_S_construct(__str._M_data()
          + __str._M_check(__pos,
      "basic_string::basic_string"),
          __str._M_data() + __str._M_limit(__pos, __n)
          + __pos, __a), __a)
    { }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const _CharT* __s, size_type __n, const _Alloc& __a)
    : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
    { }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const _CharT* __s, const _Alloc& __a)
    : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
          __s + npos, __a), __a)
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(size_type __n, _CharT __c, const _Alloc& __a)
    : _M_dataplus(_S_construct(__n, __c, __a), __a)
    { }


  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InputIterator>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc& __a)
    : _M_dataplus(_S_construct(__beg, __end, __a), __a)
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    assign(const basic_string& __str)
    {
      if (_M_rep() != __str._M_rep())
 {

   const allocator_type __a = this->get_allocator();
   _CharT* __tmp = __str._M_rep()->_M_grab(__a, __str.get_allocator());
   _M_rep()->_M_dispose(__a);
   _M_data(__tmp);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    assign(const _CharT* __s, size_type __n)
    {
      ;
      _M_check_length(this->size(), __n, "basic_string::assign");
      if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 return _M_replace_safe(size_type(0), this->size(), __s, __n);
      else
 {

   const size_type __pos = __s - _M_data();
   if (__pos >= __n)
     _M_copy(_M_data(), __s, __n);
   else if (__pos)
     _M_move(_M_data(), __s, __n);
   _M_rep()->_M_set_length_and_sharable(__n);
   return *this;
 }
     }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(size_type __n, _CharT __c)
    {
      if (__n)
 {
   _M_check_length(size_type(0), __n, "basic_string::append");
   const size_type __len = __n + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     this->reserve(__len);
   _M_assign(_M_data() + this->size(), __n, __c);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(const _CharT* __s, size_type __n)
    {
      ;
      if (__n)
 {
   _M_check_length(size_type(0), __n, "basic_string::append");
   const size_type __len = __n + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     {
       if (_M_disjunct(__s))
  this->reserve(__len);
       else
  {
    const size_type __off = __s - _M_data();
    this->reserve(__len);
    __s = _M_data() + __off;
  }
     }
   _M_copy(_M_data() + this->size(), __s, __n);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(const basic_string& __str)
    {
      const size_type __size = __str.size();
      if (__size)
 {
   const size_type __len = __size + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     this->reserve(__len);
   _M_copy(_M_data() + this->size(), __str._M_data(), __size);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(const basic_string& __str, size_type __pos, size_type __n)
    {
      __str._M_check(__pos, "basic_string::append");
      __n = __str._M_limit(__pos, __n);
      if (__n)
 {
   const size_type __len = __n + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     this->reserve(__len);
   _M_copy(_M_data() + this->size(), __str._M_data() + __pos, __n);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_string<_CharT, _Traits, _Alloc>&
     basic_string<_CharT, _Traits, _Alloc>::
     insert(size_type __pos, const _CharT* __s, size_type __n)
     {
       ;
       _M_check(__pos, "basic_string::insert");
       _M_check_length(size_type(0), __n, "basic_string::insert");
       if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
         return _M_replace_safe(__pos, size_type(0), __s, __n);
       else
         {

           const size_type __off = __s - _M_data();
           _M_mutate(__pos, 0, __n);
           __s = _M_data() + __off;
           _CharT* __p = _M_data() + __pos;
           if (__s + __n <= __p)
             _M_copy(__p, __s, __n);
           else if (__s >= __p)
             _M_copy(__p, __s + __n, __n);
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy(__p, __s, __nleft);
               _M_copy(__p + __nleft, __p + __n, __n - __nleft);
             }
           return *this;
         }
     }

   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_string<_CharT, _Traits, _Alloc>&
     basic_string<_CharT, _Traits, _Alloc>::
     replace(size_type __pos, size_type __n1, const _CharT* __s,
      size_type __n2)
     {
       ;
       _M_check(__pos, "basic_string::replace");
       __n1 = _M_limit(__pos, __n1);
       _M_check_length(__n1, __n2, "basic_string::replace");
       bool __left;
       if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
         return _M_replace_safe(__pos, __n1, __s, __n2);
       else if ((__left = __s + __n2 <= _M_data() + __pos)
  || _M_data() + __pos + __n1 <= __s)
  {

    size_type __off = __s - _M_data();
    __left ? __off : (__off += __n2 - __n1);
    _M_mutate(__pos, __n1, __n2);
    _M_copy(_M_data() + __pos, _M_data() + __off, __n2);
    return *this;
  }
       else
  {

    const basic_string __tmp(__s, __n2);
    return _M_replace_safe(__pos, __n1, __tmp._M_data(), __n2);
  }
     }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::_Rep::
    _M_destroy(const _Alloc& __a) throw ()
    {
      const size_type __size = sizeof(_Rep_base) +
                        (this->_M_capacity + 1) * sizeof(_CharT);
      _Raw_bytes_alloc(__a).deallocate(reinterpret_cast<char*>(this), __size);
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    _M_leak_hard()
    {

      if (_M_rep() == &_S_empty_rep())
 return;

      if (_M_rep()->_M_is_shared())
 _M_mutate(0, 0, 0);
      _M_rep()->_M_set_leaked();
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    _M_mutate(size_type __pos, size_type __len1, size_type __len2)
    {
      const size_type __old_size = this->size();
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if (__new_size > this->capacity() || _M_rep()->_M_is_shared())
 {

   const allocator_type __a = get_allocator();
   _Rep* __r = _Rep::_S_create(__new_size, this->capacity(), __a);

   if (__pos)
     _M_copy(__r->_M_refdata(), _M_data(), __pos);
   if (__how_much)
     _M_copy(__r->_M_refdata() + __pos + __len2,
      _M_data() + __pos + __len1, __how_much);

   _M_rep()->_M_dispose(__a);
   _M_data(__r->_M_refdata());
 }
      else if (__how_much && __len1 != __len2)
 {

   _M_move(_M_data() + __pos + __len2,
    _M_data() + __pos + __len1, __how_much);
 }
      _M_rep()->_M_set_length_and_sharable(__new_size);
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    reserve(size_type __res)
    {
      if (__res != this->capacity() || _M_rep()->_M_is_shared())
        {

   if (__res < this->size())
     __res = this->size();
   const allocator_type __a = get_allocator();
   _CharT* __tmp = _M_rep()->_M_clone(__a, __res - this->size());
   _M_rep()->_M_dispose(__a);
   _M_data(__tmp);
        }
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    swap(basic_string& __s)
    {
      if (_M_rep()->_M_is_leaked())
 _M_rep()->_M_set_sharable();
      if (__s._M_rep()->_M_is_leaked())
 __s._M_rep()->_M_set_sharable();
      if (this->get_allocator() == __s.get_allocator())
 {
   _CharT* __tmp = _M_data();
   _M_data(__s._M_data());
   __s._M_data(__tmp);
 }

      else
 {
   const basic_string __tmp1(_M_ibegin(), _M_iend(),
        __s.get_allocator());
   const basic_string __tmp2(__s._M_ibegin(), __s._M_iend(),
        this->get_allocator());
   *this = __tmp2;
   __s = __tmp1;
 }
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::_Rep*
    basic_string<_CharT, _Traits, _Alloc>::_Rep::
    _S_create(size_type __capacity, size_type __old_capacity,
       const _Alloc& __alloc)
    {


      if (__capacity > _S_max_size)
 __throw_length_error(("basic_string::_S_create"));
# 558 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.tcc" 3
      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof(void*);







      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 __capacity = 2 * __old_capacity;




      size_type __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);

      const size_type __adj_size = __size + __malloc_header_size;
      if (__adj_size > __pagesize && __capacity > __old_capacity)
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof(_CharT);

   if (__capacity > _S_max_size)
     __capacity = _S_max_size;
   __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);
 }



      void* __place = _Raw_bytes_alloc(__alloc).allocate(__size);
      _Rep *__p = new (__place) _Rep;
      __p->_M_capacity = __capacity;
      return __p;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _CharT*
    basic_string<_CharT, _Traits, _Alloc>::_Rep::
    _M_clone(const _Alloc& __alloc, size_type __res)
    {

      const size_type __requested_cap = this->_M_length + __res;
      _Rep* __r = _Rep::_S_create(__requested_cap, this->_M_capacity,
      __alloc);
      if (this->_M_length)
 _M_copy(__r->_M_refdata(), _M_refdata(), this->_M_length);

      __r->_M_set_length_and_sharable(this->_M_length);
      return __r->_M_refdata();
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    resize(size_type __n, _CharT __c)
    {
      const size_type __size = this->size();
      _M_check_length(__size, __n, "basic_string::resize");
      if (__size < __n)
 this->append(__n - __size, __c);
      else if (__n < __size)
 this->erase(__n);

    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InputIterator>
      basic_string<_CharT, _Traits, _Alloc>&
      basic_string<_CharT, _Traits, _Alloc>::
      _M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type)
      {
 const basic_string __s(__k1, __k2);
 const size_type __n1 = __i2 - __i1;
 _M_check_length(__n1, __s.size(), "basic_string::_M_replace_dispatch");
 return _M_replace_safe(__i1 - _M_ibegin(), __n1, __s._M_data(),
          __s.size());
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c)
    {
      _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
      _M_mutate(__pos1, __n1, __n2);
      if (__n2)
 _M_assign(_M_data() + __pos1, __n2, __c);
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
      size_type __n2)
    {
      _M_mutate(__pos1, __n1, __n2);
      if (__n2)
 _M_copy(_M_data() + __pos1, __s, __n2);
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      ;
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;
      const __size_type __len = _Traits::length(__lhs);
      __string_type __str;
      __str.reserve(__len + __rhs.size());
      __str.append(__lhs, __len);
      __str.append(__rhs);
      return __str;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs.size();
      __str.reserve(__len + 1);
      __str.append(__size_type(1), __lhs);
      __str.append(__rhs);
      return __str;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    copy(_CharT* __s, size_type __n, size_type __pos) const
    {
      _M_check(__pos, "basic_string::copy");
      __n = _M_limit(__pos, __n);
      ;
      if (__n)
 _M_copy(__s, _M_data() + __pos, __n);

      return __n;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      size_type __ret = npos;
      const size_type __size = this->size();
      if (__pos + __n <= __size)
 {
   const _CharT* __data = _M_data();
   const _CharT* __p = std::search(__data + __pos, __data + __size,
       __s, __s + __n, traits_type::eq);
   if (__p != __data + __size || __n == 0)
     __ret = __p - __data;
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find(_CharT __c, size_type __pos) const
    {
      size_type __ret = npos;
      const size_type __size = this->size();
      if (__pos < __size)
 {
   const _CharT* __data = _M_data();
   const size_type __n = __size - __pos;
   const _CharT* __p = traits_type::find(__data + __pos, __n, __c);
   if (__p)
     __ret = __p - __data;
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    rfind(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      const size_type __size = this->size();
      if (__n <= __size)
 {
   __pos = std::min(size_type(__size - __n), __pos);
   const _CharT* __data = _M_data();
   do
     {
       if (traits_type::compare(__data + __pos, __s, __n) == 0)
  return __pos;
     }
   while (__pos-- > 0);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    rfind(_CharT __c, size_type __pos) const
    {
      size_type __size = this->size();
      if (__size)
 {
   if (--__size > __pos)
     __size = __pos;
   for (++__size; __size-- > 0; )
     if (traits_type::eq(_M_data()[__size], __c))
       return __size;
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      for (; __n && __pos < this->size(); ++__pos)
 {
   const _CharT* __p = traits_type::find(__s, __n, _M_data()[__pos]);
   if (__p)
     return __pos;
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      size_type __size = this->size();
      if (__size && __n)
 {
   if (--__size > __pos)
     __size = __pos;
   do
     {
       if (traits_type::find(__s, __n, _M_data()[__size]))
  return __size;
     }
   while (__size-- != 0);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_first_not_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      for (; __pos < this->size(); ++__pos)
 if (!traits_type::find(__s, __n, _M_data()[__pos]))
   return __pos;
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_first_not_of(_CharT __c, size_type __pos) const
    {
      for (; __pos < this->size(); ++__pos)
 if (!traits_type::eq(_M_data()[__pos], __c))
   return __pos;
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_last_not_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      size_type __size = this->size();
      if (__size)
 {
   if (--__size > __pos)
     __size = __pos;
   do
     {
       if (!traits_type::find(__s, __n, _M_data()[__size]))
  return __size;
     }
   while (__size--);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_last_not_of(_CharT __c, size_type __pos) const
    {
      size_type __size = this->size();
      if (__size)
 {
   if (--__size > __pos)
     __size = __pos;
   do
     {
       if (!traits_type::eq(_M_data()[__size], __c))
  return __size;
     }
   while (__size--);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string<_CharT, _Traits, _Alloc>::
    compare(size_type __pos, size_type __n, const basic_string& __str) const
    {
      _M_check(__pos, "basic_string::compare");
      __n = _M_limit(__pos, __n);
      const size_type __osize = __str.size();
      const size_type __len = std::min(__n, __osize);
      int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);
      if (!__r)
 __r = __n - __osize;
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string<_CharT, _Traits, _Alloc>::
    compare(size_type __pos1, size_type __n1, const basic_string& __str,
     size_type __pos2, size_type __n2) const
    {
      _M_check(__pos1, "basic_string::compare");
      __str._M_check(__pos2, "basic_string::compare");
      __n1 = _M_limit(__pos1, __n1);
      __n2 = __str._M_limit(__pos2, __n2);
      const size_type __len = std::min(__n1, __n2);
      int __r = traits_type::compare(_M_data() + __pos1,
         __str.data() + __pos2, __len);
      if (!__r)
 __r = __n1 - __n2;
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string<_CharT, _Traits, _Alloc>::
    compare(const _CharT* __s) const
    {
      ;
      const size_type __size = this->size();
      const size_type __osize = traits_type::length(__s);
      const size_type __len = std::min(__size, __osize);
      int __r = traits_type::compare(_M_data(), __s, __len);
      if (!__r)
 __r = __size - __osize;
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string <_CharT, _Traits, _Alloc>::
    compare(size_type __pos, size_type __n1, const _CharT* __s) const
    {
      ;
      _M_check(__pos, "basic_string::compare");
      __n1 = _M_limit(__pos, __n1);
      const size_type __osize = traits_type::length(__s);
      const size_type __len = std::min(__n1, __osize);
      int __r = traits_type::compare(_M_data() + __pos, __s, __len);
      if (!__r)
 __r = __n1 - __osize;
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string <_CharT, _Traits, _Alloc>::
    compare(size_type __pos, size_type __n1, const _CharT* __s,
     size_type __n2) const
    {
      ;
      _M_check(__pos, "basic_string::compare");
      __n1 = _M_limit(__pos, __n1);
      const size_type __len = std::min(__n1, __n2);
      int __r = traits_type::compare(_M_data() + __pos, __s, __len);
      if (!__r)
 __r = __n1 - __n2;
      return __r;
    }





  extern template class basic_string<char>;
  extern template
    basic_istream<char>&
    operator>>(basic_istream<char>&, string&);
  extern template
    basic_ostream<char>&
    operator<<(basic_ostream<char>&, const string&);
  extern template
    basic_istream<char>&
    getline(basic_istream<char>&, string&, char);
  extern template
    basic_istream<char>&
    getline(basic_istream<char>&, string&);
# 996 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_string.tcc" 3
}
# 57 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/string" 2 3
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Types.h" 2
# 1 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h" 1
# 56 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
typedef int BOOL;
# 101 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
typedef enum
{
    eINVALID_NODE = 0,
    eELEMENT_NODE = 1,
    eATTRIBUTE_NODE = 2,
    eTEXT_NODE = 3,
    eCDATA_SECTION_NODE = 4,
    eENTITY_REFERENCE_NODE = 5,
    eENTITY_NODE = 6,
    ePROCESSING_INSTRUCTION_NODE = 7,
    eCOMMENT_NODE = 8,
    eDOCUMENT_NODE = 9,
    eDOCUMENT_TYPE_NODE = 10,
    eDOCUMENT_FRAGMENT_NODE = 11,
    eNOTATION_NODE = 12,

} IXML_NODE_TYPE;







typedef enum
{
    IXML_INDEX_SIZE_ERR = 1,
    IXML_DOMSTRING_SIZE_ERR = 2,
    IXML_HIERARCHY_REQUEST_ERR = 3,
    IXML_WRONG_DOCUMENT_ERR = 4,
    IXML_INVALID_CHARACTER_ERR = 5,
    IXML_NO_DATA_ALLOWED_ERR = 6,
    IXML_NO_MODIFICATION_ALLOWED_ERR = 7,
    IXML_NOT_FOUND_ERR = 8,
    IXML_NOT_SUPPORTED_ERR = 9,
    IXML_INUSE_ATTRIBUTE_ERR = 10,
    IXML_INVALID_STATE_ERR = 11,
    IXML_SYNTAX_ERR = 12,
    IXML_INVALID_MODIFICATION_ERR = 13,
    IXML_NAMESPACE_ERR = 14,
    IXML_INVALID_ACCESS_ERR = 15,

    IXML_SUCCESS = 0,
    IXML_NO_SUCH_FILE = 101,
    IXML_INSUFFICIENT_MEMORY = 102,
    IXML_FILE_DONE = 104,
    IXML_INVALID_PARAMETER = 105,
    IXML_FAILED = 106,
    IXML_INVALID_ITEM_NUMBER = 107,

} IXML_ERRORCODE;
# 164 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
typedef struct _IXML_Document *Docptr;

typedef struct _IXML_Node *Nodeptr;
typedef struct _IXML_Node
{
    char * nodeName;
    char * nodeValue;
    IXML_NODE_TYPE nodeType;
    char * namespaceURI;
    char * prefix;
    char * localName;
    BOOL readOnly;

    Nodeptr parentNode;
    Nodeptr firstChild;
    Nodeptr prevSibling;
    Nodeptr nextSibling;
    Nodeptr firstAttr;
    Docptr ownerDocument;

} IXML_Node;

typedef struct _IXML_Document
{
    IXML_Node n;
} IXML_Document;

typedef struct _IXML_CDATASection
{
    IXML_Node n;
} IXML_CDATASection;

typedef struct _IXML_Element
{
    IXML_Node n;
    char * tagName;

} IXML_Element;

typedef struct _IXML_ATTR
{
    IXML_Node n;
    BOOL specified;
    IXML_Element *ownerElement;
} IXML_Attr;

typedef struct _IXML_Text
{
    IXML_Node n;
} IXML_Text;

typedef struct _IXML_NodeList
{
    IXML_Node *nodeItem;
    struct _IXML_NodeList *next;
} IXML_NodeList;


typedef struct _IXML_NamedNodeMap
{
    IXML_Node *nodeItem;
    struct _IXML_NamedNodeMap *next;
} IXML_NamedNodeMap;


extern "C" {
# 254 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 const char *
ixmlNode_getNodeName(IXML_Node *nodeptr

                    );







 const char *
ixmlNode_getNodeValue(IXML_Node *nodeptr

                     );
# 284 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlNode_setNodeValue(IXML_Node *nodeptr,

                      const char *newNodeValue

                  );
# 312 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 unsigned short
ixmlNode_getNodeType(IXML_Node *nodeptr

                    );







 IXML_Node*
ixmlNode_getParentNode(IXML_Node *nodeptr


                      );
# 336 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_NodeList*
ixmlNode_getChildNodes(IXML_Node *nodeptr


                   );







 IXML_Node*
ixmlNode_getFirstChild(IXML_Node *nodeptr


);







 IXML_Node*
ixmlNode_getLastChild(IXML_Node *nodeptr


                  );







 IXML_Node*
ixmlNode_getPreviousSibling(IXML_Node *nodeptr


                        );







 IXML_Node*
ixmlNode_getNextSibling(IXML_Node *nodeptr


                    );
# 397 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_NamedNodeMap*
ixmlNode_getAttributes(IXML_Node *nodeptr


                   );
# 412 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Document*
ixmlNode_getOwnerDocument(IXML_Node *nodeptr


                      );
# 428 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 const char *
ixmlNode_getNamespaceURI(IXML_Node *nodeptr


                     );
# 444 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 const char *
ixmlNode_getPrefix(IXML_Node *nodeptr

               );
# 459 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 const char *
ixmlNode_getLocalName(IXML_Node *nodeptr


                  );
# 491 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlNode_insertBefore(IXML_Node *nodeptr,


                      IXML_Node* newChild,

                      IXML_Node* refChild



                  );
# 526 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlNode_replaceChild(IXML_Node *nodeptr,


                      IXML_Node* newChild,

                      IXML_Node* oldChild,

                      IXML_Node** returnNode


                  );
# 556 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlNode_removeChild(IXML_Node *nodeptr,

                     IXML_Node* oldChild,

                     IXML_Node **returnNode


                 );
# 583 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlNode_appendChild(IXML_Node *nodeptr,

                     IXML_Node* newChild

                 );







 BOOL
ixmlNode_hasChildNodes(IXML_Node *nodeptr

                   );
# 609 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNode_cloneNode(IXML_Node *nodeptr,

                   BOOL deep


                  );
# 624 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 BOOL
ixmlNode_hasAttributes(IXML_Node *nodeptr

                      );






 void
ixmlNode_free(IXML_Node *nodeptr

             );
# 662 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void
ixmlAttr_free(IXML_Attr *attrNode

             );
# 693 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void
ixmlCDATASection_init(IXML_CDATASection *nodeptr

                     );







 void
ixmlCDATASection_free(IXML_CDATASection *nodeptr

                     );
# 731 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void
ixmlDocument_init(IXML_Document *nodeptr

                 );
# 749 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int ixmlDocument_createDocumentEx(IXML_Document** doc


                    );
# 761 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Document* ixmlDocument_createDocument();
# 783 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_createElementEx(IXML_Document *doc,

                             const char * tagName,


                             IXML_Element **rtElement


                            );
# 804 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Element*
ixmlDocument_createElement(IXML_Document *doc,

                           const char * tagName

                           );
# 827 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_createTextNodeEx(IXML_Document *doc,

                              const char * data,


                              IXML_Node** textNode


                              );







 IXML_Node*
ixmlDocument_createTextNode(IXML_Document *doc,

                            const char * data


                            );
# 868 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_createCDATASectionEx(IXML_Document *doc,


                                  const char * data,


                                  IXML_CDATASection** cdNode


                                 );
# 887 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_CDATASection*
ixmlDocument_createCDATASection(IXML_Document *doc,


                                const char * data


                               );






 IXML_Attr*
ixmlDocument_createAttribute(IXML_Document *doc,

                             const char *name

                            );
# 925 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_createAttributeEx(IXML_Document *doc,


                               const char *name,

                               IXML_Attr** attrNode


                              );
# 945 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_NodeList*
ixmlDocument_getElementsByTagName(IXML_Document *doc,

                                  const char * tagName

                                 );
# 971 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_createElementNSEx(IXML_Document *doc,


                               const char * namespaceURI,


                               const char * qualifiedName,


                               IXML_Element** rtElement


                              );
# 994 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Element*
ixmlDocument_createElementNS(IXML_Document *doc,

                             const char * namespaceURI,


                             const char * qualifiedName


                             );
# 1022 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_createAttributeNSEx(IXML_Document *doc,


                                 const char * namespaceURI,

                                 const char * qualifiedName,

                                 IXML_Attr** attrNode


                                );







 IXML_Attr*
ixmlDocument_createAttributeNS(IXML_Document *doc,


                               const char * namespaceURI,

                               const char * qualifiedName

                              );
# 1061 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_NodeList*
ixmlDocument_getElementsByTagNameNS(IXML_Document* doc,

                                    const char * namespaceURI,



                                    const char * localName



                                    );







 IXML_Element*
ixmlDocument_getElementById(IXML_Document* doc,


                            const char * tagName

                            );
# 1096 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void
ixmlDocument_free(IXML_Document* doc

                 );
# 1120 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlDocument_importNode(IXML_Document* doc,

                        IXML_Node* importNode,

                        BOOL deep,



                        IXML_Node** rtNode


                       );
# 1156 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void ixmlElement_init(IXML_Element *element

                     );
# 1167 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 const char *
ixmlElement_getTagName(IXML_Element* element


                      );







 const char *
ixmlElement_getAttribute(IXML_Element* element,


                         const char * name

                        );
# 1203 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_setAttribute(IXML_Element* element,


                         const char * name,

                         const char * value



                        );
# 1225 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_removeAttribute(IXML_Element* element,


                            const char * name

                           );
# 1241 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Attr*
ixmlElement_getAttributeNode(IXML_Element* element,


                             const char * name

                            );
# 1265 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_setAttributeNode(IXML_Element* element,


                             IXML_Attr* newAttr,

                             IXML_Attr** rtAttr




                            );
# 1290 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_removeAttributeNode(IXML_Element* element,


                                IXML_Attr* oldAttr,


                                IXML_Attr** rtAttr


                               );
# 1310 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_NodeList*
ixmlElement_getElementsByTagName(IXML_Element* element,


                                 const char * tagName


                                );
# 1327 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 const char *
ixmlElement_getAttributeNS(IXML_Element* element,


                           const char * namespaceURI,

                           const char * localname

                          );
# 1359 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_setAttributeNS(IXML_Element* element,


                           const char * namespaceURI,

                           const char * qualifiedName,

                           const char * value

                          );
# 1381 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_removeAttributeNS(IXML_Element* element,


                              const char * namespaceURI,

                              const char * localName

                             );






 IXML_Attr*
ixmlElement_getAttributeNodeNS(IXML_Element* element,


                               const char * namespaceURI,

                               const char * localName

                              );
# 1423 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlElement_setAttributeNodeNS(IXML_Element* element,


                               IXML_Attr* newAttr,

                               IXML_Attr** rcAttr


                              );
# 1442 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_NodeList*
ixmlElement_getElementsByTagNameNS(IXML_Element* element,


                                   const char * namespaceURI,


                                   const char * localName


                                  );
# 1462 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 BOOL
ixmlElement_hasAttribute(IXML_Element* element,


                         const char * name

                        );
# 1478 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 BOOL
ixmlElement_hasAttributeNS(IXML_Element* element,


                           const char * namespaceURI,

                           const char * localName

                          );






 void
ixmlElement_free(IXML_Element* element

                );
# 1520 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 unsigned long
ixmlNamedNodeMap_getLength(IXML_NamedNodeMap *nnMap


                          );






 IXML_Node*
ixmlNamedNodeMap_getNamedItem(IXML_NamedNodeMap *nnMap,

                              const char * name

                             );
# 1546 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNamedNodeMap_setNamedItem(IXML_NamedNodeMap *nnMap,


                              IXML_Node *arg


                             );







 IXML_Node*
ixmlNamedNodeMap_removeNamedItem(IXML_NamedNodeMap *nnMap,


                                 const char * name

                                );
# 1576 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNamedNodeMap_item(IXML_NamedNodeMap *nnMap,


                      unsigned long index

                     );
# 1593 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNamedNodeMap_getNamedItemNS(IXML_NamedNodeMap *nnMap,


                                const char * *namespaceURI,


                                const char * localName


                               );
# 1613 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNamedNodeMap_setNamedItemNS(IXML_NamedNodeMap *nnMap,


                                IXML_Node *arg

                               );
# 1628 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNamedNodeMap_removeNamedItemNS(IXML_NamedNodeMap *nnMap,


                                   const char * namespaceURI,


                                   const char * localName


                                  );







 void
ixmlNamedNodeMap_free(IXML_NamedNodeMap *nnMap

                     );
# 1675 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 IXML_Node*
ixmlNodeList_item(IXML_NodeList *nList,


                  unsigned long index

                 );






 unsigned long
ixmlNodeList_length(IXML_NodeList *nList


                   );
# 1701 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void
ixmlNodeList_free(IXML_NodeList *nList

                 );
# 1743 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 char *
ixmlPrintDocument(IXML_Document *doc);
# 1761 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 char *
ixmlPrintNode(IXML_Node *doc

             );
# 1782 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 char *
ixmlDocumenttoString(IXML_Document *doc);
# 1799 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 char *
ixmlNodetoString(IXML_Node *doc

                );
# 1814 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 void
ixmlRelaxParser(char errorChar);







 IXML_Document*
ixmlParseBuffer(const char *buffer


               );
# 1846 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlParseBufferEx(const char *buffer,


                  IXML_Document** doc


                );







 IXML_Document*
ixmlLoadDocument(const char* xmlFile


                );
# 1883 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 int
ixmlLoadDocumentEx(const char* xmlFile,


                   IXML_Document** doc


                 );
# 1899 "/home/davidhu/svn.32M/apps/../include/upnp/ixml.h"
 char *
ixmlCloneDOMString(const char * src

                  );






 void
ixmlFreeDOMString(char * buf

                 );


}
# 6 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Types.h" 2

namespace HWICS
{
    class Object
    {
    public:
        Object():
            m_Xoff(0),
            m_Yoff(0),
   m_ObjType(ObjectType_Unknown)
        {};
  Object(const Object &rObj):
   m_Xoff(rObj.m_Xoff),
   m_Yoff(rObj.m_Yoff),
   m_ObjType(rObj.m_ObjType)
  {
  };
        virtual ~Object(){};
  virtual Object *clone() = 0;
  Object & operator=(const Object &rObj)
  {
   m_Xoff = rObj.m_Xoff;
   m_Yoff = rObj.m_Yoff;
   m_ObjType = rObj.m_ObjType;
   return *this;
  };

        virtual HYBool Draw(HYVoid *pData) const{return 1;};

    public:
  HYI32 m_Xoff;
  HYI32 m_Yoff;
  enum
  {
   ObjectType_Unknown,
   ObjectType_Circle,
   ObjectType_Image,
   ObjectType_Line,
   ObjectType_List,
   ObjectType_Rect,
   ObjectType_RoundRect,
   ObjectType_Text,
   ObjectType_MText,
   ObjectType_Video
  }m_ObjType;
    };

    class Color
    {
    public:
        Color():
            m_R(0),
            m_G(0),
            m_B(0),
            m_A(0xFF)
        {
        };

        Color(const IXML_Node *pNode)
        {
            Parse(pNode);
        }

        Color(const Color &C)
        {
            m_Color = C.m_Color;
        };

        Color & operator=(const Color &C)
        {
            m_Color = C.m_Color;
            return *this;
        };
  operator HYU32() const
  {
   HYU32 C = (((HYU32)m_A) << 24) | (((HYU32)m_R) << 16) | (((HYU32)m_G) << 8) | ((HYU32)m_B);
   return C;
  };
        HYVoid Parse(const IXML_Node *pNode);

    public:
        union
        {
            HYU32 m_Color;
            struct
            {
                HYU8 m_R;
                HYU8 m_G;
                HYU8 m_B;
                HYU8 m_A;
            };
        };
    };

    enum ErrCode
    {
        Success,
        Object_CreateFail,
  Object_NotFound
    };

    class ErrorHandle
    {
    public:
        ErrorHandle(const ErrCode Code, const char *pReason)
        {
            m_ErrCode = Code;
            m_Reason = pReason;
        };
        ~ErrorHandle(){};
        ErrCode m_ErrCode;
        std::string m_Reason;
    };

    HYU32 HexStrToU32(const char *pStr);
    const char * GetTextNodeValue(const IXML_Node *pNode);
};
# 4 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Localize.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2







# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYTypes.h" 1
# 23 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYDebug.h" 1
# 24 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYThread.h" 1
# 25 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYMemory.h" 1
# 26 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYUtils.h" 1
# 27 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYError.h" 1
# 28 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../utils/LinkedList.h" 1
# 29 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HWICS/HWICS.h" 1
# 33 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Localize.h" 2

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/map" 1 3
# 63 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/map" 3
       
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/map" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_tree.h" 1 3
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_tree.h" 3
namespace std
{
# 90 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_tree.h" 3
  enum _Rb_tree_color { _S_red = false, _S_black = true };

  struct _Rb_tree_node_base
  {
    typedef _Rb_tree_node_base* _Base_ptr;
    typedef const _Rb_tree_node_base* _Const_Base_ptr;

    _Rb_tree_color _M_color;
    _Base_ptr _M_parent;
    _Base_ptr _M_left;
    _Base_ptr _M_right;

    static _Base_ptr
    _S_minimum(_Base_ptr __x)
    {
      while (__x->_M_left != 0) __x = __x->_M_left;
      return __x;
    }

    static _Const_Base_ptr
    _S_minimum(_Const_Base_ptr __x)
    {
      while (__x->_M_left != 0) __x = __x->_M_left;
      return __x;
    }

    static _Base_ptr
    _S_maximum(_Base_ptr __x)
    {
      while (__x->_M_right != 0) __x = __x->_M_right;
      return __x;
    }

    static _Const_Base_ptr
    _S_maximum(_Const_Base_ptr __x)
    {
      while (__x->_M_right != 0) __x = __x->_M_right;
      return __x;
    }
  };

  template<typename _Val>
    struct _Rb_tree_node : public _Rb_tree_node_base
    {
      typedef _Rb_tree_node<_Val>* _Link_type;
      _Val _M_value_field;
    };

  _Rb_tree_node_base*
  _Rb_tree_increment(_Rb_tree_node_base* __x);

  const _Rb_tree_node_base*
  _Rb_tree_increment(const _Rb_tree_node_base* __x);

  _Rb_tree_node_base*
  _Rb_tree_decrement(_Rb_tree_node_base* __x);

  const _Rb_tree_node_base*
  _Rb_tree_decrement(const _Rb_tree_node_base* __x);

  template<typename _Tp>
    struct _Rb_tree_iterator
    {
      typedef _Tp value_type;
      typedef _Tp& reference;
      typedef _Tp* pointer;

      typedef bidirectional_iterator_tag iterator_category;
      typedef ptrdiff_t difference_type;

      typedef _Rb_tree_iterator<_Tp> _Self;
      typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;
      typedef _Rb_tree_node<_Tp>* _Link_type;

      _Rb_tree_iterator()
      : _M_node() { }

      _Rb_tree_iterator(_Link_type __x)
      : _M_node(__x) { }

      reference
      operator*() const
      { return static_cast<_Link_type>(_M_node)->_M_value_field; }

      pointer
      operator->() const
      { return &static_cast<_Link_type>(_M_node)->_M_value_field; }

      _Self&
      operator++()
      {
 _M_node = _Rb_tree_increment(_M_node);
 return *this;
      }

      _Self
      operator++(int)
      {
 _Self __tmp = *this;
 _M_node = _Rb_tree_increment(_M_node);
 return __tmp;
      }

      _Self&
      operator--()
      {
 _M_node = _Rb_tree_decrement(_M_node);
 return *this;
      }

      _Self
      operator--(int)
      {
 _Self __tmp = *this;
 _M_node = _Rb_tree_decrement(_M_node);
 return __tmp;
      }

      bool
      operator==(const _Self& __x) const
      { return _M_node == __x._M_node; }

      bool
      operator!=(const _Self& __x) const
      { return _M_node != __x._M_node; }

      _Base_ptr _M_node;
  };

  template<typename _Tp>
    struct _Rb_tree_const_iterator
    {
      typedef _Tp value_type;
      typedef const _Tp& reference;
      typedef const _Tp* pointer;

      typedef _Rb_tree_iterator<_Tp> iterator;

      typedef bidirectional_iterator_tag iterator_category;
      typedef ptrdiff_t difference_type;

      typedef _Rb_tree_const_iterator<_Tp> _Self;
      typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;
      typedef const _Rb_tree_node<_Tp>* _Link_type;

      _Rb_tree_const_iterator()
      : _M_node() { }

      _Rb_tree_const_iterator(_Link_type __x)
      : _M_node(__x) { }

      _Rb_tree_const_iterator(const iterator& __it)
      : _M_node(__it._M_node) { }

      reference
      operator*() const
      { return static_cast<_Link_type>(_M_node)->_M_value_field; }

      pointer
      operator->() const
      { return &static_cast<_Link_type>(_M_node)->_M_value_field; }

      _Self&
      operator++()
      {
 _M_node = _Rb_tree_increment(_M_node);
 return *this;
      }

      _Self
      operator++(int)
      {
 _Self __tmp = *this;
 _M_node = _Rb_tree_increment(_M_node);
 return __tmp;
      }

      _Self&
      operator--()
      {
 _M_node = _Rb_tree_decrement(_M_node);
 return *this;
      }

      _Self
      operator--(int)
      {
 _Self __tmp = *this;
 _M_node = _Rb_tree_decrement(_M_node);
 return __tmp;
      }

      bool
      operator==(const _Self& __x) const
      { return _M_node == __x._M_node; }

      bool
      operator!=(const _Self& __x) const
      { return _M_node != __x._M_node; }

      _Base_ptr _M_node;
    };

  template<typename _Val>
    inline bool
    operator==(const _Rb_tree_iterator<_Val>& __x,
               const _Rb_tree_const_iterator<_Val>& __y)
    { return __x._M_node == __y._M_node; }

  template<typename _Val>
    inline bool
    operator!=(const _Rb_tree_iterator<_Val>& __x,
               const _Rb_tree_const_iterator<_Val>& __y)
    { return __x._M_node != __y._M_node; }

  void
  _Rb_tree_rotate_left(_Rb_tree_node_base* const __x,
                       _Rb_tree_node_base*& __root);

  void
  _Rb_tree_rotate_right(_Rb_tree_node_base* const __x,
                        _Rb_tree_node_base*& __root);

  void
  _Rb_tree_insert_and_rebalance(const bool __insert_left,
                                _Rb_tree_node_base* __x,
                                _Rb_tree_node_base* __p,
                                _Rb_tree_node_base& __header);

  _Rb_tree_node_base*
  _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
          _Rb_tree_node_base& __header);


  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc = allocator<_Val> >
    class _Rb_tree
    {
      typedef typename _Alloc::template rebind<_Rb_tree_node<_Val> >::other
              _Node_allocator;

    protected:
      typedef _Rb_tree_node_base* _Base_ptr;
      typedef const _Rb_tree_node_base* _Const_Base_ptr;
      typedef _Rb_tree_node<_Val> _Rb_tree_node;

    public:
      typedef _Key key_type;
      typedef _Val value_type;
      typedef value_type* pointer;
      typedef const value_type* const_pointer;
      typedef value_type& reference;
      typedef const value_type& const_reference;
      typedef _Rb_tree_node* _Link_type;
      typedef const _Rb_tree_node* _Const_Link_type;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

      allocator_type
      get_allocator() const
      { return *static_cast<const _Node_allocator*>(&this->_M_impl); }

    protected:
      _Rb_tree_node*
      _M_get_node()
      { return _M_impl._Node_allocator::allocate(1); }

      void
      _M_put_node(_Rb_tree_node* __p)
      { _M_impl._Node_allocator::deallocate(__p, 1); }

      _Link_type
      _M_create_node(const value_type& __x)
      {
 _Link_type __tmp = _M_get_node();
 try
   { get_allocator().construct(&__tmp->_M_value_field, __x); }
 catch(...)
   {
     _M_put_node(__tmp);
     throw;
   }
 return __tmp;
      }

      _Link_type
      _M_clone_node(_Const_Link_type __x)
      {
 _Link_type __tmp = _M_create_node(__x->_M_value_field);
 __tmp->_M_color = __x->_M_color;
 __tmp->_M_left = 0;
 __tmp->_M_right = 0;
 return __tmp;
      }

      void
      destroy_node(_Link_type __p)
      {
 get_allocator().destroy(&__p->_M_value_field);
 _M_put_node(__p);
      }

    protected:
      template<typename _Key_compare,
        bool _Is_pod_comparator = std::__is_pod<_Key_compare>::__value>
        struct _Rb_tree_impl : public _Node_allocator
        {
   _Key_compare _M_key_compare;
   _Rb_tree_node_base _M_header;
   size_type _M_node_count;

   _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),
   const _Key_compare& __comp = _Key_compare())
   : _Node_allocator(__a), _M_key_compare(__comp), _M_header(),
     _M_node_count(0)
   {
     this->_M_header._M_color = _S_red;
     this->_M_header._M_parent = 0;
     this->_M_header._M_left = &this->_M_header;
     this->_M_header._M_right = &this->_M_header;
   }
 };



      template<typename _Key_compare>
        struct _Rb_tree_impl<_Key_compare, true> : public _Node_allocator
 {
   _Key_compare _M_key_compare;
   _Rb_tree_node_base _M_header;
   size_type _M_node_count;

   _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),
   const _Key_compare& __comp = _Key_compare())
   : _Node_allocator(__a), _M_key_compare(__comp), _M_node_count(0)
   {
     this->_M_header._M_color = _S_red;
     this->_M_header._M_parent = 0;
     this->_M_header._M_left = &this->_M_header;
     this->_M_header._M_right = &this->_M_header;
   }
 };

      _Rb_tree_impl<_Compare> _M_impl;

    protected:
      _Base_ptr&
      _M_root()
      { return this->_M_impl._M_header._M_parent; }

      _Const_Base_ptr
      _M_root() const
      { return this->_M_impl._M_header._M_parent; }

      _Base_ptr&
      _M_leftmost()
      { return this->_M_impl._M_header._M_left; }

      _Const_Base_ptr
      _M_leftmost() const
      { return this->_M_impl._M_header._M_left; }

      _Base_ptr&
      _M_rightmost()
      { return this->_M_impl._M_header._M_right; }

      _Const_Base_ptr
      _M_rightmost() const
      { return this->_M_impl._M_header._M_right; }

      _Link_type
      _M_begin()
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }

      _Const_Link_type
      _M_begin() const
      {
 return static_cast<_Const_Link_type>
   (this->_M_impl._M_header._M_parent);
      }

      _Link_type
      _M_end()
      { return static_cast<_Link_type>(&this->_M_impl._M_header); }

      _Const_Link_type
      _M_end() const
      { return static_cast<_Const_Link_type>(&this->_M_impl._M_header); }

      static const_reference
      _S_value(_Const_Link_type __x)
      { return __x->_M_value_field; }

      static const _Key&
      _S_key(_Const_Link_type __x)
      { return _KeyOfValue()(_S_value(__x)); }

      static _Link_type
      _S_left(_Base_ptr __x)
      { return static_cast<_Link_type>(__x->_M_left); }

      static _Const_Link_type
      _S_left(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_left); }

      static _Link_type
      _S_right(_Base_ptr __x)
      { return static_cast<_Link_type>(__x->_M_right); }

      static _Const_Link_type
      _S_right(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_right); }

      static const_reference
      _S_value(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }

      static const _Key&
      _S_key(_Const_Base_ptr __x)
      { return _KeyOfValue()(_S_value(__x)); }

      static _Base_ptr
      _S_minimum(_Base_ptr __x)
      { return _Rb_tree_node_base::_S_minimum(__x); }

      static _Const_Base_ptr
      _S_minimum(_Const_Base_ptr __x)
      { return _Rb_tree_node_base::_S_minimum(__x); }

      static _Base_ptr
      _S_maximum(_Base_ptr __x)
      { return _Rb_tree_node_base::_S_maximum(__x); }

      static _Const_Base_ptr
      _S_maximum(_Const_Base_ptr __x)
      { return _Rb_tree_node_base::_S_maximum(__x); }

    public:
      typedef _Rb_tree_iterator<value_type> iterator;
      typedef _Rb_tree_const_iterator<value_type> const_iterator;

      typedef std::reverse_iterator<iterator> reverse_iterator;
      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;

    private:
      iterator
      _M_insert(_Base_ptr __x, _Base_ptr __y, const value_type& __v);

      _Link_type
      _M_copy(_Const_Link_type __x, _Link_type __p);

      void
      _M_erase(_Link_type __x);

    public:

      _Rb_tree()
      { }

      _Rb_tree(const _Compare& __comp)
      : _M_impl(allocator_type(), __comp)
      { }

      _Rb_tree(const _Compare& __comp, const allocator_type& __a)
      : _M_impl(__a, __comp)
      { }

      _Rb_tree(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)
      : _M_impl(__x.get_allocator(), __x._M_impl._M_key_compare)
      {
 if (__x._M_root() != 0)
   {
     _M_root() = _M_copy(__x._M_begin(), _M_end());
     _M_leftmost() = _S_minimum(_M_root());
     _M_rightmost() = _S_maximum(_M_root());
     _M_impl._M_node_count = __x._M_impl._M_node_count;
   }
      }

      ~_Rb_tree()
      { _M_erase(_M_begin()); }

      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
      operator=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x);


      _Compare
      key_comp() const
      { return _M_impl._M_key_compare; }

      iterator
      begin()
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_left); }

      const_iterator
      begin() const
      {
 return static_cast<_Const_Link_type>
   (this->_M_impl._M_header._M_left);
      }

      iterator
      end()
      { return static_cast<_Link_type>(&this->_M_impl._M_header); }

      const_iterator
      end() const
      { return static_cast<_Const_Link_type>(&this->_M_impl._M_header); }

      reverse_iterator
      rbegin()
      { return reverse_iterator(end()); }

      const_reverse_iterator
      rbegin() const
      { return const_reverse_iterator(end()); }

      reverse_iterator
      rend()
      { return reverse_iterator(begin()); }

      const_reverse_iterator
      rend() const
      { return const_reverse_iterator(begin()); }

      bool
      empty() const
      { return _M_impl._M_node_count == 0; }

      size_type
      size() const
      { return _M_impl._M_node_count; }

      size_type
      max_size() const
      { return size_type(-1); }

      void
      swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t);


      pair<iterator,bool>
      insert_unique(const value_type& __x);

      iterator
      insert_equal(const value_type& __x);

      iterator
      insert_unique(iterator __position, const value_type& __x);

      iterator
      insert_equal(iterator __position, const value_type& __x);

      template<typename _InputIterator>
      void
      insert_unique(_InputIterator __first, _InputIterator __last);

      template<typename _InputIterator>
      void
      insert_equal(_InputIterator __first, _InputIterator __last);

      void
      erase(iterator __position);

      size_type
      erase(const key_type& __x);

      void
      erase(iterator __first, iterator __last);

      void
      erase(const key_type* __first, const key_type* __last);

      void
      clear()
      {
        _M_erase(_M_begin());
        _M_leftmost() = _M_end();
        _M_root() = 0;
        _M_rightmost() = _M_end();
        _M_impl._M_node_count = 0;
      }


      iterator
      find(const key_type& __x);

      const_iterator
      find(const key_type& __x) const;

      size_type
      count(const key_type& __x) const;

      iterator
      lower_bound(const key_type& __x);

      const_iterator
      lower_bound(const key_type& __x) const;

      iterator
      upper_bound(const key_type& __x);

      const_iterator
      upper_bound(const key_type& __x) const;

      pair<iterator,iterator>
      equal_range(const key_type& __x);

      pair<const_iterator, const_iterator>
      equal_range(const key_type& __x) const;


      bool
      __rb_verify() const;
    };

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline bool
    operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
        const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    {
      return __x.size() == __y.size()
      && std::equal(__x.begin(), __x.end(), __y.begin());
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline bool
    operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    {
      return std::lexicographical_compare(__x.begin(), __x.end(),
       __y.begin(), __y.end());
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline bool
    operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
        const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    { return !(__x == __y); }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline bool
    operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    { return __y < __x; }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline bool
    operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
        const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    { return !(__y < __x); }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline bool
    operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
        const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    { return !(__x < __y); }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline void
    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
  _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
    { __x.swap(__y); }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    operator=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)
    {
      if (this != &__x)
 {

   clear();
   _M_impl._M_key_compare = __x._M_impl._M_key_compare;
   if (__x._M_root() != 0)
     {
       _M_root() = _M_copy(__x._M_begin(), _M_end());
       _M_leftmost() = _S_minimum(_M_root());
       _M_rightmost() = _S_maximum(_M_root());
       _M_impl._M_node_count = __x._M_impl._M_node_count;
     }
 }
      return *this;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_insert(_Base_ptr __x, _Base_ptr __p, const _Val& __v)
    {
      bool __insert_left = (__x != 0 || __p == _M_end()
       || _M_impl._M_key_compare(_KeyOfValue()(__v),
            _S_key(__p)));

      _Link_type __z = _M_create_node(__v);

      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
        this->_M_impl._M_header);
      ++_M_impl._M_node_count;
      return iterator(__z);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    insert_equal(const _Val& __v)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      while (__x != 0)
 {
   __y = __x;
   __x = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x)) ?
         _S_left(__x) : _S_right(__x);
 }
      return _M_insert(__x, __y, __v);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t)
    {
      if (_M_root() == 0)
      {
 if (__t._M_root() != 0)
 {
   _M_root() = __t._M_root();
   _M_leftmost() = __t._M_leftmost();
   _M_rightmost() = __t._M_rightmost();
          _M_root()->_M_parent = _M_end();

   __t._M_root() = 0;
   __t._M_leftmost() = __t._M_end();
   __t._M_rightmost() = __t._M_end();
 }
      }
      else if (__t._M_root() == 0)
      {
 __t._M_root() = _M_root();
 __t._M_leftmost() = _M_leftmost();
 __t._M_rightmost() = _M_rightmost();
        __t._M_root()->_M_parent = __t._M_end();

 _M_root() = 0;
 _M_leftmost() = _M_end();
 _M_rightmost() = _M_end();
      }
      else
      {
 std::swap(_M_root(),__t._M_root());
 std::swap(_M_leftmost(),__t._M_leftmost());
 std::swap(_M_rightmost(),__t._M_rightmost());

 _M_root()->_M_parent = _M_end();
 __t._M_root()->_M_parent = __t._M_end();
      }

      std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
      std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
      _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    insert_unique(const _Val& __v)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      bool __comp = true;
      while (__x != 0)
 {
   __y = __x;
   __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
   __x = __comp ? _S_left(__x) : _S_right(__x);
 }
      iterator __j = iterator(__y);
      if (__comp)
 if (__j == begin())
   return pair<iterator,bool>(_M_insert(__x, __y, __v), true);
 else
   --__j;
      if (_M_impl._M_key_compare(_S_key(__j._M_node), _KeyOfValue()(__v)))
 return pair<iterator, bool>(_M_insert(__x, __y, __v), true);
      return pair<iterator, bool>(__j, false);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    insert_unique(iterator __position, const _Val& __v)
    {

      if (__position._M_node == _M_end())
 {
   if (size() > 0
       && _M_impl._M_key_compare(_S_key(_M_rightmost()),
     _KeyOfValue()(__v)))
     return _M_insert(0, _M_rightmost(), __v);
   else
     return insert_unique(__v).first;
 }
      else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
          _S_key(__position._M_node)))
 {

   iterator __before = __position;
   if (__position._M_node == _M_leftmost())
     return _M_insert(_M_leftmost(), _M_leftmost(), __v);
   else if (_M_impl._M_key_compare(_S_key((--__before)._M_node),
       _KeyOfValue()(__v)))
     {
       if (_S_right(__before._M_node) == 0)
  return _M_insert(0, __before._M_node, __v);
       else
  return _M_insert(__position._M_node,
     __position._M_node, __v);
     }
   else
     return insert_unique(__v).first;
 }
      else if (_M_impl._M_key_compare(_S_key(__position._M_node),
          _KeyOfValue()(__v)))
 {

   iterator __after = __position;
   if (__position._M_node == _M_rightmost())
     return _M_insert(0, _M_rightmost(), __v);
   else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
       _S_key((++__after)._M_node)))
     {
       if (_S_right(__position._M_node) == 0)
  return _M_insert(0, __position._M_node, __v);
       else
  return _M_insert(__after._M_node, __after._M_node, __v);
     }
   else
     return insert_unique(__v).first;
 }
      else
 return __position;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    insert_equal(iterator __position, const _Val& __v)
    {

      if (__position._M_node == _M_end())
 {
   if (size() > 0
       && !_M_impl._M_key_compare(_KeyOfValue()(__v),
      _S_key(_M_rightmost())))
     return _M_insert(0, _M_rightmost(), __v);
   else
     return insert_equal(__v);
 }
      else if (!_M_impl._M_key_compare(_S_key(__position._M_node),
           _KeyOfValue()(__v)))
 {

   iterator __before = __position;
   if (__position._M_node == _M_leftmost())
     return _M_insert(_M_leftmost(), _M_leftmost(), __v);
   else if (!_M_impl._M_key_compare(_KeyOfValue()(__v),
        _S_key((--__before)._M_node)))
     {
       if (_S_right(__before._M_node) == 0)
  return _M_insert(0, __before._M_node, __v);
       else
  return _M_insert(__position._M_node,
     __position._M_node, __v);
     }
   else
     return insert_equal(__v);
 }
      else
 {

   iterator __after = __position;
   if (__position._M_node == _M_rightmost())
     return _M_insert(0, _M_rightmost(), __v);
   else if (!_M_impl._M_key_compare(_S_key((++__after)._M_node),
        _KeyOfValue()(__v)))
     {
       if (_S_right(__position._M_node) == 0)
  return _M_insert(0, __position._M_node, __v);
       else
  return _M_insert(__after._M_node, __after._M_node, __v);
     }
   else
     return insert_equal(__v);
 }
    }

  template<typename _Key, typename _Val, typename _KoV,
           typename _Cmp, typename _Alloc>
    template<class _II>
      void
      _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
      insert_equal(_II __first, _II __last)
      {
 for (; __first != __last; ++__first)
   insert_equal(end(), *__first);
      }

  template<typename _Key, typename _Val, typename _KoV,
           typename _Cmp, typename _Alloc>
    template<class _II>
    void
    _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
    insert_unique(_II __first, _II __last)
    {
      for (; __first != __last; ++__first)
 insert_unique(end(), *__first);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    erase(iterator __position)
    {
      _Link_type __y =
 static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
    (__position._M_node,
     this->_M_impl._M_header));
      destroy_node(__y);
      --_M_impl._M_node_count;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    erase(const _Key& __x)
    {
      pair<iterator,iterator> __p = equal_range(__x);
      size_type __n = std::distance(__p.first, __p.second);
      erase(__p.first, __p.second);
      return __n;
    }

  template<typename _Key, typename _Val, typename _KoV,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
    _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
    _M_copy(_Const_Link_type __x, _Link_type __p)
    {

      _Link_type __top = _M_clone_node(__x);
      __top->_M_parent = __p;

      try
 {
   if (__x->_M_right)
     __top->_M_right = _M_copy(_S_right(__x), __top);
   __p = __top;
   __x = _S_left(__x);

   while (__x != 0)
     {
       _Link_type __y = _M_clone_node(__x);
       __p->_M_left = __y;
       __y->_M_parent = __p;
       if (__x->_M_right)
  __y->_M_right = _M_copy(_S_right(__x), __y);
       __p = __y;
       __x = _S_left(__x);
     }
 }
      catch(...)
 {
   _M_erase(__top);
   throw;
 }
      return __top;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_erase(_Link_type __x)
    {

      while (__x != 0)
 {
   _M_erase(_S_right(__x));
   _Link_type __y = _S_left(__x);
   destroy_node(__x);
   __x = __y;
 }
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    erase(iterator __first, iterator __last)
    {
      if (__first == begin() && __last == end())
 clear();
      else
 while (__first != __last)
   erase(__first++);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    erase(const _Key* __first, const _Key* __last)
    {
      while (__first != __last)
 erase(*__first++);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    find(const _Key& __k)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();

      while (__x != 0)
 if (!_M_impl._M_key_compare(_S_key(__x), __k))
   __y = __x, __x = _S_left(__x);
 else
   __x = _S_right(__x);

      iterator __j = iterator(__y);
      return (__j == end()
       || _M_impl._M_key_compare(__k,
     _S_key(__j._M_node))) ? end() : __j;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    find(const _Key& __k) const
    {
      _Const_Link_type __x = _M_begin();
      _Const_Link_type __y = _M_end();

     while (__x != 0)
       {
  if (!_M_impl._M_key_compare(_S_key(__x), __k))
    __y = __x, __x = _S_left(__x);
  else
    __x = _S_right(__x);
       }
     const_iterator __j = const_iterator(__y);
     return (__j == end()
      || _M_impl._M_key_compare(__k,
           _S_key(__j._M_node))) ? end() : __j;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    count(const _Key& __k) const
    {
      pair<const_iterator, const_iterator> __p = equal_range(__k);
      const size_type __n = std::distance(__p.first, __p.second);
      return __n;
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    lower_bound(const _Key& __k)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();

      while (__x != 0)
 if (!_M_impl._M_key_compare(_S_key(__x), __k))
   __y = __x, __x = _S_left(__x);
 else
   __x = _S_right(__x);

      return iterator(__y);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    lower_bound(const _Key& __k) const
    {
      _Const_Link_type __x = _M_begin();
      _Const_Link_type __y = _M_end();

      while (__x != 0)
 if (!_M_impl._M_key_compare(_S_key(__x), __k))
   __y = __x, __x = _S_left(__x);
 else
   __x = _S_right(__x);

      return const_iterator(__y);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    upper_bound(const _Key& __k)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();

      while (__x != 0)
 if (_M_impl._M_key_compare(__k, _S_key(__x)))
   __y = __x, __x = _S_left(__x);
 else
   __x = _S_right(__x);

      return iterator(__y);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    upper_bound(const _Key& __k) const
    {
      _Const_Link_type __x = _M_begin();
      _Const_Link_type __y = _M_end();

      while (__x != 0)
 if (_M_impl._M_key_compare(__k, _S_key(__x)))
   __y = __x, __x = _S_left(__x);
 else
   __x = _S_right(__x);

      return const_iterator(__y);
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    inline
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
      _Compare, _Alloc>::iterator,
  typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    equal_range(const _Key& __k)
    { return pair<iterator, iterator>(lower_bound(__k), upper_bound(__k)); }

  template<typename _Key, typename _Val, typename _KoV,
           typename _Compare, typename _Alloc>
    inline
    pair<typename _Rb_tree<_Key, _Val, _KoV,
      _Compare, _Alloc>::const_iterator,
  typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::const_iterator>
    _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
    equal_range(const _Key& __k) const
    { return pair<const_iterator, const_iterator>(lower_bound(__k),
        upper_bound(__k)); }

  unsigned int
  _Rb_tree_black_count(const _Rb_tree_node_base* __node,
                       const _Rb_tree_node_base* __root);

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    bool
    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const
    {
      if (_M_impl._M_node_count == 0 || begin() == end())
 return _M_impl._M_node_count == 0 && begin() == end()
        && this->_M_impl._M_header._M_left == _M_end()
        && this->_M_impl._M_header._M_right == _M_end();

      unsigned int __len = _Rb_tree_black_count(_M_leftmost(), _M_root());
      for (const_iterator __it = begin(); __it != end(); ++__it)
 {
   _Const_Link_type __x = static_cast<_Const_Link_type>(__it._M_node);
   _Const_Link_type __L = _S_left(__x);
   _Const_Link_type __R = _S_right(__x);

   if (__x->_M_color == _S_red)
     if ((__L && __L->_M_color == _S_red)
  || (__R && __R->_M_color == _S_red))
       return false;

   if (__L && _M_impl._M_key_compare(_S_key(__x), _S_key(__L)))
     return false;
   if (__R && _M_impl._M_key_compare(_S_key(__R), _S_key(__x)))
     return false;

   if (!__L && !__R && _Rb_tree_black_count(__x, _M_root()) != __len)
     return false;
 }

      if (_M_leftmost() != _Rb_tree_node_base::_S_minimum(_M_root()))
 return false;
      if (_M_rightmost() != _Rb_tree_node_base::_S_maximum(_M_root()))
 return false;
      return true;
    }
}
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/map" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 1 3
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
namespace std
{
# 89 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
  template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
            typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
    class map
    {

     
     


    public:
      typedef _Key key_type;
      typedef _Tp mapped_type;
      typedef std::pair<const _Key, _Tp> value_type;
      typedef _Compare key_compare;

      class value_compare
      : public std::binary_function<value_type, value_type, bool>
      {
 friend class map<_Key,_Tp,_Compare,_Alloc>;
      protected:
 _Compare comp;

 value_compare(_Compare __c)
 : comp(__c) { }

      public:
 bool operator()(const value_type& __x, const value_type& __y) const
 { return comp(__x.first, __y.first); }
      };

    private:

      typedef _Rb_tree<key_type, value_type,
         _Select1st<value_type>, key_compare, _Alloc> _Rep_type;

      _Rep_type _M_t;

    public:


      typedef typename _Alloc::pointer pointer;
      typedef typename _Alloc::const_pointer const_pointer;
      typedef typename _Alloc::reference reference;
      typedef typename _Alloc::const_reference const_reference;
      typedef typename _Rep_type::allocator_type allocator_type;
      typedef typename _Rep_type::iterator iterator;
      typedef typename _Rep_type::const_iterator const_iterator;
      typedef typename _Rep_type::size_type size_type;
      typedef typename _Rep_type::difference_type difference_type;
      typedef typename _Rep_type::reverse_iterator reverse_iterator;
      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;







      map()
      : _M_t(_Compare(), allocator_type()) { }





      explicit
      map(const _Compare& __comp, const allocator_type& __a = allocator_type())
      : _M_t(__comp, __a) { }
# 165 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      map(const map& __x)
      : _M_t(__x._M_t) { }
# 177 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      template <typename _InputIterator>
        map(_InputIterator __first, _InputIterator __last)
 : _M_t(_Compare(), allocator_type())
        { _M_t.insert_unique(__first, __last); }
# 193 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      template <typename _InputIterator>
        map(_InputIterator __first, _InputIterator __last,
     const _Compare& __comp, const allocator_type& __a = allocator_type())
 : _M_t(__comp, __a)
        { _M_t.insert_unique(__first, __last); }
# 215 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      map&
      operator=(const map& __x)
      {
 _M_t = __x._M_t;
 return *this;
      }


      allocator_type
      get_allocator() const
      { return _M_t.get_allocator(); }







      iterator
      begin()
      { return _M_t.begin(); }






      const_iterator
      begin() const
      { return _M_t.begin(); }





      iterator
      end()
      { return _M_t.end(); }






      const_iterator
      end() const
      { return _M_t.end(); }






      reverse_iterator
      rbegin()
      { return _M_t.rbegin(); }






      const_reverse_iterator
      rbegin() const
      { return _M_t.rbegin(); }






      reverse_iterator
      rend()
      { return _M_t.rend(); }






      const_reverse_iterator
      rend() const
      { return _M_t.rend(); }





      bool
      empty() const
      { return _M_t.empty(); }


      size_type
      size() const
      { return _M_t.size(); }


      size_type
      max_size() const
      { return _M_t.max_size(); }
# 330 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      mapped_type&
      operator[](const key_type& __k)
      {



 iterator __i = lower_bound(__k);

 if (__i == end() || key_comp()(__k, (*__i).first))
          __i = insert(__i, value_type(__k, mapped_type()));
 return (*__i).second;
      }
# 358 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      std::pair<iterator,bool>
      insert(const value_type& __x)
      { return _M_t.insert_unique(__x); }
# 382 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      iterator
      insert(iterator position, const value_type& __x)
      { return _M_t.insert_unique(position, __x); }
# 394 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      template <typename _InputIterator>
        void
        insert(_InputIterator __first, _InputIterator __last)
        { _M_t.insert_unique(__first, __last); }
# 408 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      void
      erase(iterator __position)
      { _M_t.erase(__position); }
# 423 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      size_type
      erase(const key_type& __x)
      { return _M_t.erase(__x); }
# 438 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      void
      erase(iterator __first, iterator __last)
      { _M_t.erase(__first, __last); }
# 453 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      void
      swap(map& __x)
      { _M_t.swap(__x._M_t); }







      void
      clear()
      { _M_t.clear(); }






      key_compare
      key_comp() const
      { return _M_t.key_comp(); }





      value_compare
      value_comp() const
      { return value_compare(_M_t.key_comp()); }
# 496 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      iterator
      find(const key_type& __x)
      { return _M_t.find(__x); }
# 511 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      const_iterator
      find(const key_type& __x) const
      { return _M_t.find(__x); }
# 523 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      size_type
      count(const key_type& __x) const
      { return _M_t.find(__x) == _M_t.end() ? 0 : 1; }
# 538 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      iterator
      lower_bound(const key_type& __x)
      { return _M_t.lower_bound(__x); }
# 553 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      const_iterator
      lower_bound(const key_type& __x) const
      { return _M_t.lower_bound(__x); }







      iterator
      upper_bound(const key_type& __x)
      { return _M_t.upper_bound(__x); }







      const_iterator
      upper_bound(const key_type& __x) const
      { return _M_t.upper_bound(__x); }
# 592 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      std::pair<iterator,iterator>
      equal_range(const key_type& __x)
      { return _M_t.equal_range(__x); }
# 611 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
      std::pair<const_iterator,const_iterator>
      equal_range(const key_type& __x) const
      { return _M_t.equal_range(__x); }

      template <typename _K1, typename _T1, typename _C1, typename _A1>
        friend bool
        operator== (const map<_K1,_T1,_C1,_A1>&,
      const map<_K1,_T1,_C1,_A1>&);

      template <typename _K1, typename _T1, typename _C1, typename _A1>
        friend bool
        operator< (const map<_K1,_T1,_C1,_A1>&,
     const map<_K1,_T1,_C1,_A1>&);
    };
# 636 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator==(const map<_Key,_Tp,_Compare,_Alloc>& __x,
               const map<_Key,_Tp,_Compare,_Alloc>& __y)
    { return __x._M_t == __y._M_t; }
# 653 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_map.h" 3
  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator<(const map<_Key,_Tp,_Compare,_Alloc>& __x,
              const map<_Key,_Tp,_Compare,_Alloc>& __y)
    { return __x._M_t < __y._M_t; }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator!=(const map<_Key,_Tp,_Compare,_Alloc>& __x,
               const map<_Key,_Tp,_Compare,_Alloc>& __y)
    { return !(__x == __y); }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator>(const map<_Key,_Tp,_Compare,_Alloc>& __x,
              const map<_Key,_Tp,_Compare,_Alloc>& __y)
    { return __y < __x; }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator<=(const map<_Key,_Tp,_Compare,_Alloc>& __x,
               const map<_Key,_Tp,_Compare,_Alloc>& __y)
    { return !(__y < __x); }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator>=(const map<_Key,_Tp,_Compare,_Alloc>& __x,
               const map<_Key,_Tp,_Compare,_Alloc>& __y)
    { return !(__x < __y); }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline void
    swap(map<_Key,_Tp,_Compare,_Alloc>& __x, map<_Key,_Tp,_Compare,_Alloc>& __y)
    { __x.swap(__y); }
}
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/map" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 1 3
# 66 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
namespace std
{


  template <typename _Key, typename _Tp,
            typename _Compare = std::less<_Key>,
            typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
    class multimap;

  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator==(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
        const multimap<_Key,_Tp,_Compare,_Alloc>& __y);

  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator<(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
       const multimap<_Key,_Tp,_Compare,_Alloc>& __y);
# 106 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    class multimap
    {

     
     


    public:
      typedef _Key key_type;
      typedef _Tp mapped_type;
      typedef std::pair<const _Key, _Tp> value_type;
      typedef _Compare key_compare;

      class value_compare
      : public std::binary_function<value_type, value_type, bool>
      {
 friend class multimap<_Key,_Tp,_Compare,_Alloc>;
      protected:
 _Compare comp;

 value_compare(_Compare __c)
 : comp(__c) { }

      public:
 bool operator()(const value_type& __x, const value_type& __y) const
 { return comp(__x.first, __y.first); }
      };

    private:

      typedef _Rb_tree<key_type, value_type,
         _Select1st<value_type>, key_compare, _Alloc> _Rep_type;

      _Rep_type _M_t;

    public:


      typedef typename _Alloc::pointer pointer;
      typedef typename _Alloc::const_pointer const_pointer;
      typedef typename _Alloc::reference reference;
      typedef typename _Alloc::const_reference const_reference;
      typedef typename _Rep_type::allocator_type allocator_type;
      typedef typename _Rep_type::iterator iterator;
      typedef typename _Rep_type::const_iterator const_iterator;
      typedef typename _Rep_type::size_type size_type;
      typedef typename _Rep_type::difference_type difference_type;
      typedef typename _Rep_type::reverse_iterator reverse_iterator;
      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;






      multimap()
      : _M_t(_Compare(), allocator_type()) { }





      explicit
      multimap(const _Compare& __comp,
        const allocator_type& __a = allocator_type())
      : _M_t(__comp, __a) { }
# 181 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      multimap(const multimap& __x)
      : _M_t(__x._M_t) { }
# 193 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      template <typename _InputIterator>
        multimap(_InputIterator __first, _InputIterator __last)
 : _M_t(_Compare(), allocator_type())
        { _M_t.insert_equal(__first, __last); }
# 209 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      template <typename _InputIterator>
        multimap(_InputIterator __first, _InputIterator __last,
   const _Compare& __comp,
   const allocator_type& __a = allocator_type())
        : _M_t(__comp, __a)
        { _M_t.insert_equal(__first, __last); }
# 232 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      multimap&
      operator=(const multimap& __x)
      {
 _M_t = __x._M_t;
 return *this;
      }


      allocator_type
      get_allocator() const
      { return _M_t.get_allocator(); }







      iterator
      begin()
      { return _M_t.begin(); }






      const_iterator
      begin() const
      { return _M_t.begin(); }






      iterator
      end()
      { return _M_t.end(); }






      const_iterator
      end() const
      { return _M_t.end(); }






      reverse_iterator
      rbegin()
      { return _M_t.rbegin(); }






      const_reverse_iterator
      rbegin() const
      { return _M_t.rbegin(); }






      reverse_iterator
      rend()
      { return _M_t.rend(); }






      const_reverse_iterator
      rend() const
      { return _M_t.rend(); }



      bool
      empty() const
      { return _M_t.empty(); }


      size_type
      size() const
      { return _M_t.size(); }


      size_type
      max_size() const
      { return _M_t.max_size(); }
# 346 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      iterator
      insert(const value_type& __x)
      { return _M_t.insert_equal(__x); }
# 370 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      iterator
      insert(iterator __position, const value_type& __x)
      { return _M_t.insert_equal(__position, __x); }
# 382 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      template <typename _InputIterator>
        void
        insert(_InputIterator __first, _InputIterator __last)
        { _M_t.insert_equal(__first, __last); }
# 397 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      void
      erase(iterator __position)
      { _M_t.erase(__position); }
# 412 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      size_type
      erase(const key_type& __x)
      { return _M_t.erase(__x); }
# 427 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      void
      erase(iterator __first, iterator __last)
      { _M_t.erase(__first, __last); }
# 442 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      void
      swap(multimap& __x)
      { _M_t.swap(__x._M_t); }







      void
      clear()
      { _M_t.clear(); }






      key_compare
      key_comp() const
      { return _M_t.key_comp(); }





      value_compare
      value_comp() const
      { return value_compare(_M_t.key_comp()); }
# 485 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      iterator
      find(const key_type& __x)
      { return _M_t.find(__x); }
# 500 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      const_iterator
      find(const key_type& __x) const
      { return _M_t.find(__x); }






      size_type
      count(const key_type& __x) const
      { return _M_t.count(__x); }
# 524 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      iterator
      lower_bound(const key_type& __x)
      { return _M_t.lower_bound(__x); }
# 539 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      const_iterator
      lower_bound(const key_type& __x) const
      { return _M_t.lower_bound(__x); }







      iterator
      upper_bound(const key_type& __x)
      { return _M_t.upper_bound(__x); }







      const_iterator
      upper_bound(const key_type& __x) const
      { return _M_t.upper_bound(__x); }
# 576 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      std::pair<iterator,iterator>
      equal_range(const key_type& __x)
      { return _M_t.equal_range(__x); }
# 593 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
      std::pair<const_iterator,const_iterator>
      equal_range(const key_type& __x) const
      { return _M_t.equal_range(__x); }

      template <typename _K1, typename _T1, typename _C1, typename _A1>
        friend bool
        operator== (const multimap<_K1,_T1,_C1,_A1>&,
      const multimap<_K1,_T1,_C1,_A1>&);

      template <typename _K1, typename _T1, typename _C1, typename _A1>
        friend bool
        operator< (const multimap<_K1,_T1,_C1,_A1>&,
     const multimap<_K1,_T1,_C1,_A1>&);
  };
# 618 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator==(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
               const multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { return __x._M_t == __y._M_t; }
# 635 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_multimap.h" 3
  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator<(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
              const multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { return __x._M_t < __y._M_t; }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator!=(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
               const multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { return !(__x == __y); }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator>(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
              const multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { return __y < __x; }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator<=(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
               const multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { return !(__y < __x); }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline bool
    operator>=(const multimap<_Key,_Tp,_Compare,_Alloc>& __x,
               const multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { return !(__x < __y); }


  template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
    inline void
    swap(multimap<_Key,_Tp,_Compare,_Alloc>& __x,
         multimap<_Key,_Tp,_Compare,_Alloc>& __y)
    { __x.swap(__y); }
}
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/map" 2 3
# 7 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Localize.h" 2

namespace HWICS
{
    class Message
    {
    public:
        Message();
  Message(const Message & rMsg)
  {
   std::copy(rMsg.m_Msgs.begin(), rMsg.m_Msgs.end(), inserter(m_Msgs, m_Msgs.begin()));
  };
        ~Message();
        const std::string & GetMsg(std::string &)const;
  Message & operator=(const Message & rMsg)
  {
   m_Msgs.clear();
   std::copy(rMsg.m_Msgs.begin(), rMsg.m_Msgs.end(), inserter(m_Msgs, m_Msgs.begin()));
   return *this;
  };

        HYVoid Parse(const IXML_Node *pNode);
        std::map<std::string, std::string> m_Msgs;
    };

    class Language
    {
    public:
        Language();
  Language(const Language & rLang):
  m_LangIndex(rLang.m_LangIndex)
  {
   for (int i = 0; i < 12; i++)
   {
    std::copy(rLang.m_Langs[i].begin(), rLang.m_Langs[i].end(), inserter(m_Langs[i], m_Langs[i].begin()));
   }
  };
        ~Language();
        HYVoid SetLanguage(const char *pLangName) const;
        HYVoid SetLanguage(const std::string &rLangName) const;
        const std::string & GetMsg(const std::string &)const;
  Language & operator=(const Language & rLang)
  {
   m_LangIndex = rLang.m_LangIndex;
   for (int i = 0; i < 12; i++)
   {
    m_Langs[i].clear();
    std::copy(rLang.m_Langs[i].begin(), rLang.m_Langs[i].end(), inserter(m_Langs[i], m_Langs[i].begin()));
   }
   return *this;
  };

        HYVoid Parse(const IXML_Node *pNode);
        mutable HYI32 m_LangIndex;
        std::map<std::string, std::string> m_Langs[12];
    };
}
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Text.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Text.h" 2


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/vector" 1 3
# 63 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/vector" 3
       
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/vector" 3






# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 1 3
# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
namespace std
{





  template<typename _Tp, typename _Alloc>
    struct _Vector_base
    {
      struct _Vector_impl
      : public _Alloc
      {
 _Tp* _M_start;
 _Tp* _M_finish;
 _Tp* _M_end_of_storage;
 _Vector_impl(_Alloc const& __a)
 : _Alloc(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 { }
      };

    public:
      typedef _Alloc allocator_type;

      allocator_type
      get_allocator() const
      { return *static_cast<const _Alloc*>(&this->_M_impl); }

      _Vector_base(const allocator_type& __a)
      : _M_impl(__a)
      { }

      _Vector_base(size_t __n, const allocator_type& __a)
      : _M_impl(__a)
      {
 this->_M_impl._M_start = this->_M_allocate(__n);
 this->_M_impl._M_finish = this->_M_impl._M_start;
 this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
      }

      ~_Vector_base()
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
        - this->_M_impl._M_start); }

    public:
      _Vector_impl _M_impl;

      _Tp*
      _M_allocate(size_t __n)
      { return _M_impl.allocate(__n); }

      void
      _M_deallocate(_Tp* __p, size_t __n)
      {
 if (__p)
   _M_impl.deallocate(__p, __n);
      }
    };
# 147 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
  template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
    class vector : protected _Vector_base<_Tp, _Alloc>
    {

     

      typedef _Vector_base<_Tp, _Alloc> _Base;
      typedef vector<_Tp, _Alloc> vector_type;

    public:
      typedef _Tp value_type;
      typedef typename _Alloc::pointer pointer;
      typedef typename _Alloc::const_pointer const_pointer;
      typedef typename _Alloc::reference reference;
      typedef typename _Alloc::const_reference const_reference;
      typedef __gnu_cxx::__normal_iterator<pointer, vector_type> iterator;
      typedef __gnu_cxx::__normal_iterator<const_pointer, vector_type>
      const_iterator;
      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
      typedef std::reverse_iterator<iterator> reverse_iterator;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef typename _Base::allocator_type allocator_type;

    protected:





      using _Base::_M_allocate;
      using _Base::_M_deallocate;
      using _Base::_M_impl;

    public:





      explicit
      vector(const allocator_type& __a = allocator_type())
      : _Base(__a)
      { }
# 199 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      vector(size_type __n, const value_type& __value,
      const allocator_type& __a = allocator_type())
      : _Base(__n, __a)
      {
 std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
          this->get_allocator());
 this->_M_impl._M_finish = this->_M_impl._M_start + __n;
      }
# 215 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      explicit
      vector(size_type __n)
      : _Base(__n, allocator_type())
      {
 std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, value_type(),
          this->get_allocator());
 this->_M_impl._M_finish = this->_M_impl._M_start + __n;
      }
# 233 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      vector(const vector& __x)
      : _Base(__x.size(), __x.get_allocator())
      { this->_M_impl._M_finish =
   std::__uninitialized_copy_a(__x.begin(), __x.end(),
          this->_M_impl._M_start,
          this->get_allocator());
      }
# 256 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      template<typename _InputIterator>
        vector(_InputIterator __first, _InputIterator __last,
        const allocator_type& __a = allocator_type())
 : _Base(__a)
        {

   typedef typename std::__is_integer<_InputIterator>::__type _Integral;
   _M_initialize_dispatch(__first, __last, _Integral());
 }







      ~vector()
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
        this->get_allocator());
      }
# 285 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      vector&
      operator=(const vector& __x);
# 298 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      assign(size_type __n, const value_type& __val)
      { _M_fill_assign(__n, __val); }
# 314 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      template<typename _InputIterator>
        void
        assign(_InputIterator __first, _InputIterator __last)
        {

   typedef typename std::__is_integer<_InputIterator>::__type _Integral;
   _M_assign_dispatch(__first, __last, _Integral());
 }


      using _Base::get_allocator;







      iterator
      begin()
      { return iterator (this->_M_impl._M_start); }






      const_iterator
      begin() const
      { return const_iterator (this->_M_impl._M_start); }






      iterator
      end()
      { return iterator (this->_M_impl._M_finish); }






      const_iterator
      end() const
      { return const_iterator (this->_M_impl._M_finish); }






      reverse_iterator
      rbegin()
      { return reverse_iterator(end()); }






      const_reverse_iterator
      rbegin() const
      { return const_reverse_iterator(end()); }






      reverse_iterator
      rend()
      { return reverse_iterator(begin()); }






      const_reverse_iterator
      rend() const
      { return const_reverse_iterator(begin()); }



      size_type
      size() const
      { return size_type(end() - begin()); }


      size_type
      max_size() const
      { return size_type(-1) / sizeof(value_type); }
# 421 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      resize(size_type __new_size, const value_type& __x)
      {
 if (__new_size < size())
   erase(begin() + __new_size, end());
 else
   insert(end(), __new_size - size(), __x);
      }
# 440 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      resize(size_type __new_size)
      { resize(__new_size, value_type()); }





      size_type
      capacity() const
      { return size_type(const_iterator(this->_M_impl._M_end_of_storage)
    - begin()); }





      bool
      empty() const
      { return begin() == end(); }
# 478 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      reserve(size_type __n);
# 493 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      reference
      operator[](size_type __n)
      { return *(begin() + __n); }
# 508 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      const_reference
      operator[](size_type __n) const
      { return *(begin() + __n); }

    protected:

      void
      _M_range_check(size_type __n) const
      {
 if (__n >= this->size())
   __throw_out_of_range(("vector::_M_range_check"));
      }

    public:
# 533 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      reference
      at(size_type __n)
      {
 _M_range_check(__n);
 return (*this)[__n];
      }
# 551 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      const_reference
      at(size_type __n) const
      {
 _M_range_check(__n);
 return (*this)[__n];
      }





      reference
      front()
      { return *begin(); }





      const_reference
      front() const
      { return *begin(); }





      reference
      back()
      { return *(end() - 1); }





      const_reference
      back() const
      { return *(end() - 1); }
# 601 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      push_back(const value_type& __x)
      {
 if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   {
     this->_M_impl.construct(this->_M_impl._M_finish, __x);
     ++this->_M_impl._M_finish;
   }
 else
   _M_insert_aux(end(), __x);
      }
# 622 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      pop_back()
      {
 --this->_M_impl._M_finish;
 this->_M_impl.destroy(this->_M_impl._M_finish);
      }
# 640 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      iterator
      insert(iterator __position, const value_type& __x);
# 656 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      insert(iterator __position, size_type __n, const value_type& __x)
      { _M_fill_insert(__position, __n, __x); }
# 674 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      template<typename _InputIterator>
        void
        insert(iterator __position, _InputIterator __first,
        _InputIterator __last)
        {

   typedef typename std::__is_integer<_InputIterator>::__type _Integral;
   _M_insert_dispatch(__position, __first, __last, _Integral());
 }
# 699 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      iterator
      erase(iterator __position);
# 720 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      iterator
      erase(iterator __first, iterator __last);
# 732 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
      void
      swap(vector& __x)
      {
 std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
 std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
 std::swap(this->_M_impl._M_end_of_storage,
    __x._M_impl._M_end_of_storage);
      }







      void
      clear()
      { erase(begin(), end()); }

    protected:






      template<typename _ForwardIterator>
        pointer
        _M_allocate_and_copy(size_type __n,
        _ForwardIterator __first, _ForwardIterator __last)
        {
   pointer __result = this->_M_allocate(__n);
   try
     {
       std::__uninitialized_copy_a(__first, __last, __result,
       this->get_allocator());
       return __result;
     }
   catch(...)
     {
       _M_deallocate(__result, __n);
       throw;
     }
 }





      template<typename _Integer>
        void
        _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
        {
   this->_M_impl._M_start = _M_allocate(__n);
   this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
     this->get_allocator());
   this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
 }


      template<typename _InputIterator>
        void
        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
          __false_type)
        {
   typedef typename std::iterator_traits<_InputIterator>::
     iterator_category _IterCategory;
   _M_range_initialize(__first, __last, _IterCategory());
 }


      template<typename _InputIterator>
        void
        _M_range_initialize(_InputIterator __first,
       _InputIterator __last, std::input_iterator_tag)
        {
   for (; __first != __last; ++__first)
     push_back(*__first);
 }


      template<typename _ForwardIterator>
        void
        _M_range_initialize(_ForwardIterator __first,
       _ForwardIterator __last, std::forward_iterator_tag)
        {
   const size_type __n = std::distance(__first, __last);
   this->_M_impl._M_start = this->_M_allocate(__n);
   this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   this->_M_impl._M_finish =
     std::__uninitialized_copy_a(__first, __last,
     this->_M_impl._M_start,
     this->get_allocator());
 }






      template<typename _Integer>
        void
        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
        {
   _M_fill_assign(static_cast<size_type>(__n),
    static_cast<value_type>(__val));
 }


      template<typename _InputIterator>
        void
        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
      __false_type)
        {
   typedef typename std::iterator_traits<_InputIterator>::
     iterator_category _IterCategory;
   _M_assign_aux(__first, __last, _IterCategory());
 }


      template<typename _InputIterator>
        void
        _M_assign_aux(_InputIterator __first, _InputIterator __last,
        std::input_iterator_tag);


      template<typename _ForwardIterator>
        void
        _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
        std::forward_iterator_tag);



      void
      _M_fill_assign(size_type __n, const value_type& __val);





      template<typename _Integer>
        void
        _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
      __true_type)
        {
   _M_fill_insert(__pos, static_cast<size_type>(__n),
    static_cast<value_type>(__val));
 }


      template<typename _InputIterator>
        void
        _M_insert_dispatch(iterator __pos, _InputIterator __first,
      _InputIterator __last, __false_type)
        {
   typedef typename std::iterator_traits<_InputIterator>::
     iterator_category _IterCategory;
   _M_range_insert(__pos, __first, __last, _IterCategory());
 }


      template<typename _InputIterator>
        void
        _M_range_insert(iterator __pos, _InputIterator __first,
   _InputIterator __last, std::input_iterator_tag);


      template<typename _ForwardIterator>
        void
        _M_range_insert(iterator __pos, _ForwardIterator __first,
   _ForwardIterator __last, std::forward_iterator_tag);



      void
      _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);


      void
      _M_insert_aux(iterator __position, const value_type& __x);
    };
# 926 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
  template<typename _Tp, typename _Alloc>
    inline bool
    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    { return (__x.size() == __y.size()
       && std::equal(__x.begin(), __x.end(), __y.begin())); }
# 943 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_vector.h" 3
  template<typename _Tp, typename _Alloc>
    inline bool
    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    { return std::lexicographical_compare(__x.begin(), __x.end(),
       __y.begin(), __y.end()); }


  template<typename _Tp, typename _Alloc>
    inline bool
    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    { return !(__x == __y); }


  template<typename _Tp, typename _Alloc>
    inline bool
    operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    { return __y < __x; }


  template<typename _Tp, typename _Alloc>
    inline bool
    operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    { return !(__y < __x); }


  template<typename _Tp, typename _Alloc>
    inline bool
    operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
    { return !(__x < __y); }


  template<typename _Tp, typename _Alloc>
    inline void
    swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)
    { __x.swap(__y); }
}
# 71 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/vector" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_bvector.h" 1 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_bvector.h" 3
namespace std
{
  typedef unsigned long _Bit_type;
  enum { _S_word_bit = int(8 * sizeof(_Bit_type)) };

  struct _Bit_reference
  {
    _Bit_type * _M_p;
    _Bit_type _M_mask;

    _Bit_reference(_Bit_type * __x, _Bit_type __y)
    : _M_p(__x), _M_mask(__y) { }

    _Bit_reference() : _M_p(0), _M_mask(0) { }

    operator bool() const
    { return !!(*_M_p & _M_mask); }

    _Bit_reference&
    operator=(bool __x)
    {
      if (__x)
 *_M_p |= _M_mask;
      else
 *_M_p &= ~_M_mask;
      return *this;
    }

    _Bit_reference&
    operator=(const _Bit_reference& __x)
    { return *this = bool(__x); }

    bool
    operator==(const _Bit_reference& __x) const
    { return bool(*this) == bool(__x); }

    bool
    operator<(const _Bit_reference& __x) const
    { return !bool(*this) && bool(__x); }

    void
    flip()
    { *_M_p ^= _M_mask; }
  };

  struct _Bit_iterator_base
  : public std::iterator<std::random_access_iterator_tag, bool>
  {
    _Bit_type * _M_p;
    unsigned int _M_offset;

    _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
    : _M_p(__x), _M_offset(__y) { }

    void
    _M_bump_up()
    {
      if (_M_offset++ == int(_S_word_bit) - 1)
 {
   _M_offset = 0;
   ++_M_p;
 }
    }

    void
    _M_bump_down()
    {
      if (_M_offset-- == 0)
 {
   _M_offset = int(_S_word_bit) - 1;
   --_M_p;
 }
    }

    void
    _M_incr(ptrdiff_t __i)
    {
      difference_type __n = __i + _M_offset;
      _M_p += __n / int(_S_word_bit);
      __n = __n % int(_S_word_bit);
      if (__n < 0)
 {
   _M_offset = static_cast<unsigned int>(__n + int(_S_word_bit));
   --_M_p;
 }
      else
 _M_offset = static_cast<unsigned int>(__n);
    }

    bool
    operator==(const _Bit_iterator_base& __i) const
    { return _M_p == __i._M_p && _M_offset == __i._M_offset; }

    bool
    operator<(const _Bit_iterator_base& __i) const
    {
      return _M_p < __i._M_p
      || (_M_p == __i._M_p && _M_offset < __i._M_offset);
    }

    bool
    operator!=(const _Bit_iterator_base& __i) const
    { return !(*this == __i); }

    bool
    operator>(const _Bit_iterator_base& __i) const
    { return __i < *this; }

    bool
    operator<=(const _Bit_iterator_base& __i) const
    { return !(__i < *this); }

    bool
    operator>=(const _Bit_iterator_base& __i) const
    { return !(*this < __i); }
  };

  inline ptrdiff_t
  operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
  {
    return (int(_S_word_bit) * (__x._M_p - __y._M_p)
     + __x._M_offset - __y._M_offset);
  }

  struct _Bit_iterator : public _Bit_iterator_base
  {
    typedef _Bit_reference reference;
    typedef _Bit_reference* pointer;
    typedef _Bit_iterator iterator;

    _Bit_iterator() : _Bit_iterator_base(0, 0) { }

    _Bit_iterator(_Bit_type * __x, unsigned int __y)
    : _Bit_iterator_base(__x, __y) { }

    reference
    operator*() const
    { return reference(_M_p, 1UL << _M_offset); }

    iterator&
    operator++()
    {
      _M_bump_up();
      return *this;
    }

    iterator
    operator++(int)
    {
      iterator __tmp = *this;
      _M_bump_up();
      return __tmp;
    }

    iterator&
    operator--()
    {
      _M_bump_down();
      return *this;
    }

    iterator
    operator--(int)
    {
      iterator __tmp = *this;
      _M_bump_down();
      return __tmp;
    }

    iterator&
    operator+=(difference_type __i)
    {
      _M_incr(__i);
      return *this;
    }

    iterator&
    operator-=(difference_type __i)
    {
      *this += -__i;
      return *this;
    }

    iterator
    operator+(difference_type __i) const
    {
      iterator __tmp = *this;
      return __tmp += __i;
    }

    iterator
    operator-(difference_type __i) const
    {
      iterator __tmp = *this;
      return __tmp -= __i;
    }

    reference
    operator[](difference_type __i)
    { return *(*this + __i); }
  };

  inline _Bit_iterator
  operator+(ptrdiff_t __n, const _Bit_iterator& __x)
  { return __x + __n; }

  struct _Bit_const_iterator : public _Bit_iterator_base
  {
    typedef bool reference;
    typedef bool const_reference;
    typedef const bool* pointer;
    typedef _Bit_const_iterator const_iterator;

    _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }

    _Bit_const_iterator(_Bit_type * __x, unsigned int __y)
    : _Bit_iterator_base(__x, __y) { }

    _Bit_const_iterator(const _Bit_iterator& __x)
    : _Bit_iterator_base(__x._M_p, __x._M_offset) { }

    const_reference
    operator*() const
    { return _Bit_reference(_M_p, 1UL << _M_offset); }

    const_iterator&
    operator++()
    {
      _M_bump_up();
      return *this;
    }

    const_iterator
    operator++(int)
    {
      const_iterator __tmp = *this;
      _M_bump_up();
      return __tmp;
    }

    const_iterator&
    operator--()
    {
      _M_bump_down();
      return *this;
    }

    const_iterator
    operator--(int)
    {
      const_iterator __tmp = *this;
      _M_bump_down();
      return __tmp;
    }

    const_iterator&
    operator+=(difference_type __i)
    {
      _M_incr(__i);
      return *this;
    }

    const_iterator&
    operator-=(difference_type __i)
    {
      *this += -__i;
      return *this;
    }

    const_iterator
    operator+(difference_type __i) const
    {
      const_iterator __tmp = *this;
      return __tmp += __i;
    }

    const_iterator
    operator-(difference_type __i) const
    {
      const_iterator __tmp = *this;
      return __tmp -= __i;
    }

    const_reference
    operator[](difference_type __i)
    { return *(*this + __i); }
  };

  inline _Bit_const_iterator
  operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)
  { return __x + __n; }

  template<class _Alloc>
    class _Bvector_base
    {
      typedef typename _Alloc::template rebind<_Bit_type>::other
        _Bit_alloc_type;

      struct _Bvector_impl : public _Bit_alloc_type
      {
 _Bit_iterator _M_start;
 _Bit_iterator _M_finish;
 _Bit_type* _M_end_of_storage;
 _Bvector_impl(const _Bit_alloc_type& __a)
 : _Bit_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage(0)
 { }
      };

    public:
      typedef _Alloc allocator_type;

      allocator_type
      get_allocator() const
      { return *static_cast<const _Bit_alloc_type*>(&this->_M_impl); }

      _Bvector_base(const allocator_type& __a) : _M_impl(__a) { }

      ~_Bvector_base()
      { this->_M_deallocate(); }

    protected:
      _Bvector_impl _M_impl;

      _Bit_type*
      _M_allocate(size_t __n)
      { return _M_impl.allocate((__n + int(_S_word_bit) - 1)
    / int(_S_word_bit)); }

      void
      _M_deallocate()
      {
 if (_M_impl._M_start._M_p)
   _M_impl.deallocate(_M_impl._M_start._M_p,
        _M_impl._M_end_of_storage - _M_impl._M_start._M_p);
      }
    };
}




namespace std
{
# 425 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/stl_bvector.h" 3
template<typename _Alloc>
  class vector<bool, _Alloc> : public _Bvector_base<_Alloc>
  {
  public:
    typedef bool value_type;
    typedef size_t size_type;
    typedef ptrdiff_t difference_type;
    typedef _Bit_reference reference;
    typedef bool const_reference;
    typedef _Bit_reference* pointer;
    typedef const bool* const_pointer;

    typedef _Bit_iterator iterator;
    typedef _Bit_const_iterator const_iterator;

    typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
    typedef std::reverse_iterator<iterator> reverse_iterator;

    typedef typename _Bvector_base<_Alloc>::allocator_type allocator_type;

    allocator_type get_allocator() const
    { return _Bvector_base<_Alloc>::get_allocator(); }

  protected:
    using _Bvector_base<_Alloc>::_M_allocate;
    using _Bvector_base<_Alloc>::_M_deallocate;

  protected:
    void
    _M_initialize(size_type __n)
    {
      _Bit_type* __q = this->_M_allocate(__n);
      this->_M_impl._M_end_of_storage = (__q
      + ((__n + int(_S_word_bit) - 1)
         / int(_S_word_bit)));
      this->_M_impl._M_start = iterator(__q, 0);
      this->_M_impl._M_finish = this->_M_impl._M_start + difference_type(__n);
    }

    void
    _M_insert_aux(iterator __position, bool __x)
    {
      if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_of_storage)
 {
   std::copy_backward(__position, this->_M_impl._M_finish,
        this->_M_impl._M_finish + 1);
   *__position = __x;
   ++this->_M_impl._M_finish;
 }
      else
 {
   const size_type __len = size() ? 2 * size()
                                  : static_cast<size_type>(_S_word_bit);
   _Bit_type * __q = this->_M_allocate(__len);
   iterator __i = std::copy(begin(), __position, iterator(__q, 0));
   *__i++ = __x;
   this->_M_impl._M_finish = std::copy(__position, end(), __i);
   this->_M_deallocate();
   this->_M_impl._M_end_of_storage = (__q + ((__len
           + int(_S_word_bit) - 1)
          / int(_S_word_bit)));
   this->_M_impl._M_start = iterator(__q, 0);
 }
    }

    template<class _InputIterator>
      void
      _M_initialize_range(_InputIterator __first, _InputIterator __last,
     std::input_iterator_tag)
      {
 this->_M_impl._M_start = iterator();
 this->_M_impl._M_finish = iterator();
 this->_M_impl._M_end_of_storage = 0;
 for (; __first != __last; ++__first)
   push_back(*__first);
      }

    template<class _ForwardIterator>
      void
      _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,
     std::forward_iterator_tag)
      {
 const size_type __n = std::distance(__first, __last);
 _M_initialize(__n);
 std::copy(__first, __last, this->_M_impl._M_start);
      }

    template<class _InputIterator>
      void
      _M_insert_range(iterator __pos, _InputIterator __first,
        _InputIterator __last, std::input_iterator_tag)
      {
 for (; __first != __last; ++__first)
   {
     __pos = insert(__pos, *__first);
     ++__pos;
   }
      }

    template<class _ForwardIterator>
      void
      _M_insert_range(iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std::forward_iterator_tag)
      {
 if (__first != __last)
   {
     size_type __n = std::distance(__first, __last);
     if (capacity() - size() >= __n)
       {
  std::copy_backward(__position, end(),
       this->_M_impl._M_finish
       + difference_type(__n));
  std::copy(__first, __last, __position);
  this->_M_impl._M_finish += difference_type(__n);
       }
     else
       {
  const size_type __len = size() + std::max(size(), __n);
  _Bit_type * __q = this->_M_allocate(__len);
  iterator __i = std::copy(begin(), __position,
      iterator(__q, 0));
  __i = std::copy(__first, __last, __i);
  this->_M_impl._M_finish = std::copy(__position, end(), __i);
  this->_M_deallocate();
  this->_M_impl._M_end_of_storage = (__q
         + ((__len
             + int(_S_word_bit) - 1)
            / int(_S_word_bit)));
  this->_M_impl._M_start = iterator(__q, 0);
       }
   }
      }

  public:
    iterator
    begin()
    { return this->_M_impl._M_start; }

    const_iterator
    begin() const
    { return this->_M_impl._M_start; }

    iterator
    end()
    { return this->_M_impl._M_finish; }

    const_iterator
    end() const
    { return this->_M_impl._M_finish; }

    reverse_iterator
    rbegin()
    { return reverse_iterator(end()); }

    const_reverse_iterator
    rbegin() const
    { return const_reverse_iterator(end()); }

    reverse_iterator
    rend()
    { return reverse_iterator(begin()); }

    const_reverse_iterator
    rend() const
    { return const_reverse_iterator(begin()); }

    size_type
    size() const
    { return size_type(end() - begin()); }

    size_type
    max_size() const
    { return size_type(-1); }

    size_type
    capacity() const
    { return size_type(const_iterator(this->_M_impl._M_end_of_storage, 0)
         - begin()); }
    bool
    empty() const
    { return begin() == end(); }

    reference
    operator[](size_type __n)
    { return *(begin() + difference_type(__n)); }

    const_reference
    operator[](size_type __n) const
    { return *(begin() + difference_type(__n)); }

    void
    _M_range_check(size_type __n) const
    {
      if (__n >= this->size())
        __throw_out_of_range(("vector<bool>::_M_range_check"));
    }

    reference
    at(size_type __n)
    { _M_range_check(__n); return (*this)[__n]; }

    const_reference
    at(size_type __n) const
    { _M_range_check(__n); return (*this)[__n]; }

    explicit
    vector(const allocator_type& __a = allocator_type())
    : _Bvector_base<_Alloc>(__a) { }

    vector(size_type __n, bool __value,
    const allocator_type& __a = allocator_type())
    : _Bvector_base<_Alloc>(__a)
    {
      _M_initialize(__n);
      std::fill(this->_M_impl._M_start._M_p, this->_M_impl._M_end_of_storage,
  __value ? ~0 : 0);
    }

    explicit
    vector(size_type __n)
    : _Bvector_base<_Alloc>(allocator_type())
    {
      _M_initialize(__n);
      std::fill(this->_M_impl._M_start._M_p,
  this->_M_impl._M_end_of_storage, 0);
    }

    vector(const vector& __x)
    : _Bvector_base<_Alloc>(__x.get_allocator())
    {
      _M_initialize(__x.size());
      std::copy(__x.begin(), __x.end(), this->_M_impl._M_start);
    }


    template<class _Integer>
      void
      _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
      {
 _M_initialize(__n);
 std::fill(this->_M_impl._M_start._M_p,
    this->_M_impl._M_end_of_storage, __x ? ~0 : 0);
      }

    template<class _InputIterator>
      void
      _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
        __false_type)
      { _M_initialize_range(__first, __last,
       std::__iterator_category(__first)); }

    template<class _InputIterator>
      vector(_InputIterator __first, _InputIterator __last,
      const allocator_type& __a = allocator_type())
      : _Bvector_base<_Alloc>(__a)
      {
 typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 _M_initialize_dispatch(__first, __last, _Integral());
      }

    ~vector() { }

    vector&
    operator=(const vector& __x)
    {
      if (&__x == this)
 return *this;
      if (__x.size() > capacity())
 {
   this->_M_deallocate();
   _M_initialize(__x.size());
 }
      std::copy(__x.begin(), __x.end(), begin());
      this->_M_impl._M_finish = begin() + difference_type(__x.size());
      return *this;
    }






    void
    _M_fill_assign(size_t __n, bool __x)
    {
      if (__n > size())
 {
   std::fill(this->_M_impl._M_start._M_p,
      this->_M_impl._M_end_of_storage, __x ? ~0 : 0);
   insert(end(), __n - size(), __x);
 }
      else
 {
   erase(begin() + __n, end());
   std::fill(this->_M_impl._M_start._M_p,
      this->_M_impl._M_end_of_storage, __x ? ~0 : 0);
 }
    }

    void
    assign(size_t __n, bool __x)
    { _M_fill_assign(__n, __x); }

    template<class _InputIterator>
      void
      assign(_InputIterator __first, _InputIterator __last)
      {
 typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 _M_assign_dispatch(__first, __last, _Integral());
      }

    template<class _Integer>
      void
      _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
      { _M_fill_assign((size_t) __n, (bool) __val); }

    template<class _InputIterator>
      void
      _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
    __false_type)
      { _M_assign_aux(__first, __last, std::__iterator_category(__first)); }

    template<class _InputIterator>
      void
      _M_assign_aux(_InputIterator __first, _InputIterator __last,
      std::input_iterator_tag)
      {
 iterator __cur = begin();
 for (; __first != __last && __cur != end(); ++__cur, ++__first)
   *__cur = *__first;
 if (__first == __last)
   erase(__cur, end());
 else
   insert(end(), __first, __last);
      }

    template<class _ForwardIterator>
      void
      _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
      std::forward_iterator_tag)
      {
 const size_type __len = std::distance(__first, __last);
 if (__len < size())
   erase(std::copy(__first, __last, begin()), end());
 else
   {
     _ForwardIterator __mid = __first;
     std::advance(__mid, size());
     std::copy(__first, __mid, begin());
     insert(end(), __mid, __last);
   }
      }

    void
    reserve(size_type __n)
    {
      if (__n > this->max_size())
 __throw_length_error(("vector::reserve"));
      if (this->capacity() < __n)
 {
   _Bit_type* __q = this->_M_allocate(__n);
   this->_M_impl._M_finish = std::copy(begin(), end(),
           iterator(__q, 0));
   this->_M_deallocate();
   this->_M_impl._M_start = iterator(__q, 0);
   this->_M_impl._M_end_of_storage = (__q + (__n + int(_S_word_bit) - 1)
          / int(_S_word_bit));
 }
    }

    reference
    front()
    { return *begin(); }

    const_reference
    front() const
    { return *begin(); }

    reference
    back()
    { return *(end() - 1); }

    const_reference
    back() const
    { return *(end() - 1); }

    void
    push_back(bool __x)
    {
      if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_of_storage)
        *this->_M_impl._M_finish++ = __x;
      else
        _M_insert_aux(end(), __x);
    }

    void
    swap(vector<bool, _Alloc>& __x)
    {
      std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
      std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
      std::swap(this->_M_impl._M_end_of_storage,
  __x._M_impl._M_end_of_storage);
    }


    static void
    swap(reference __x, reference __y)
    {
      bool __tmp = __x;
      __x = __y;
      __y = __tmp;
    }

    iterator
    insert(iterator __position, bool __x = bool())
    {
      const difference_type __n = __position - begin();
      if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_of_storage
   && __position == end())
        *this->_M_impl._M_finish++ = __x;
      else
        _M_insert_aux(__position, __x);
      return begin() + __n;
    }



    template<class _Integer>
      void
      _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,
    __true_type)
      { _M_fill_insert(__pos, __n, __x); }

    template<class _InputIterator>
      void
      _M_insert_dispatch(iterator __pos,
    _InputIterator __first, _InputIterator __last,
    __false_type)
      { _M_insert_range(__pos, __first, __last,
   std::__iterator_category(__first)); }

    template<class _InputIterator>
      void
      insert(iterator __position,
      _InputIterator __first, _InputIterator __last)
      {
 typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 _M_insert_dispatch(__position, __first, __last, _Integral());
      }

    void
    _M_fill_insert(iterator __position, size_type __n, bool __x)
    {
      if (__n == 0)
 return;
      if (capacity() - size() >= __n)
 {
   std::copy_backward(__position, end(),
        this->_M_impl._M_finish + difference_type(__n));
   std::fill(__position, __position + difference_type(__n), __x);
   this->_M_impl._M_finish += difference_type(__n);
 }
      else
 {
   const size_type __len = size() + std::max(size(), __n);
   _Bit_type * __q = this->_M_allocate(__len);
   iterator __i = std::copy(begin(), __position, iterator(__q, 0));
   std::fill_n(__i, __n, __x);
   this->_M_impl._M_finish = std::copy(__position, end(),
           __i + difference_type(__n));
   this->_M_deallocate();
   this->_M_impl._M_end_of_storage = (__q + ((__len
           + int(_S_word_bit) - 1)
          / int(_S_word_bit)));
   this->_M_impl._M_start = iterator(__q, 0);
 }
    }

    void
    insert(iterator __position, size_type __n, bool __x)
    { _M_fill_insert(__position, __n, __x); }

    void
    pop_back()
    { --this->_M_impl._M_finish; }

    iterator
    erase(iterator __position)
    {
      if (__position + 1 != end())
        std::copy(__position + 1, end(), __position);
      --this->_M_impl._M_finish;
      return __position;
    }

    iterator
    erase(iterator __first, iterator __last)
    {
      this->_M_impl._M_finish = std::copy(__last, end(), __first);
      return __first;
    }

    void
    resize(size_type __new_size, bool __x = bool())
    {
      if (__new_size < size())
        erase(begin() + difference_type(__new_size), end());
      else
        insert(end(), __new_size - size(), __x);
    }

    void
    flip()
    {
      for (_Bit_type * __p = this->_M_impl._M_start._M_p;
    __p != this->_M_impl._M_end_of_storage; ++__p)
        *__p = ~*__p;
    }

    void
    clear()
    { erase(begin(), end()); }
  };
}
# 72 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/vector" 2 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/vector.tcc" 1 3
# 64 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/vector.tcc" 3
namespace std
{
  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
    reserve(size_type __n)
    {
      if (__n > this->max_size())
 __throw_length_error(("vector::reserve"));
      if (this->capacity() < __n)
 {
   const size_type __old_size = size();
   pointer __tmp = _M_allocate_and_copy(__n,
            this->_M_impl._M_start,
            this->_M_impl._M_finish);
   std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   this->get_allocator());
   _M_deallocate(this->_M_impl._M_start,
   this->_M_impl._M_end_of_storage
   - this->_M_impl._M_start);
   this->_M_impl._M_start = __tmp;
   this->_M_impl._M_finish = __tmp + __old_size;
   this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 }
    }

  template<typename _Tp, typename _Alloc>
    typename vector<_Tp, _Alloc>::iterator
    vector<_Tp, _Alloc>::
    insert(iterator __position, const value_type& __x)
    {
      const size_type __n = __position - begin();
      if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
   && __position == end())
 {
   this->_M_impl.construct(this->_M_impl._M_finish, __x);
   ++this->_M_impl._M_finish;
 }
      else
        _M_insert_aux(__position, __x);
      return begin() + __n;
    }

  template<typename _Tp, typename _Alloc>
    typename vector<_Tp, _Alloc>::iterator
    vector<_Tp, _Alloc>::
    erase(iterator __position)
    {
      if (__position + 1 != end())
        std::copy(__position + 1, end(), __position);
      --this->_M_impl._M_finish;
      this->_M_impl.destroy(this->_M_impl._M_finish);
      return __position;
    }

  template<typename _Tp, typename _Alloc>
    typename vector<_Tp, _Alloc>::iterator
    vector<_Tp, _Alloc>::
    erase(iterator __first, iterator __last)
    {
      iterator __i(std::copy(__last, end(), __first));
      std::_Destroy(__i, end(), this->get_allocator());
      this->_M_impl._M_finish = this->_M_impl._M_finish - (__last - __first);
      return __first;
    }

  template<typename _Tp, typename _Alloc>
    vector<_Tp, _Alloc>&
    vector<_Tp, _Alloc>::
    operator=(const vector<_Tp, _Alloc>& __x)
    {
      if (&__x != this)
 {
   const size_type __xlen = __x.size();
   if (__xlen > capacity())
     {
       pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
         __x.end());
       std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
       this->get_allocator());
       _M_deallocate(this->_M_impl._M_start,
       this->_M_impl._M_end_of_storage
       - this->_M_impl._M_start);
       this->_M_impl._M_start = __tmp;
       this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
     }
   else if (size() >= __xlen)
     {
       iterator __i(std::copy(__x.begin(), __x.end(), begin()));
       std::_Destroy(__i, end(), this->get_allocator());
     }
   else
     {
       std::copy(__x.begin(), __x.begin() + size(),
   this->_M_impl._M_start);
       std::__uninitialized_copy_a(__x.begin() + size(),
       __x.end(), this->_M_impl._M_finish,
       this->get_allocator());
     }
   this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 }
      return *this;
    }

  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
    _M_fill_assign(size_t __n, const value_type& __val)
    {
      if (__n > capacity())
 {
   vector __tmp(__n, __val, get_allocator());
   __tmp.swap(*this);
 }
      else if (__n > size())
 {
   std::fill(begin(), end(), __val);
   std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
     __n - size(), __val,
     this->get_allocator());
   this->_M_impl._M_finish += __n - size();
 }
      else
        erase(fill_n(begin(), __n, __val), end());
    }

  template<typename _Tp, typename _Alloc>
    template<typename _InputIterator>
      void
      vector<_Tp, _Alloc>::
      _M_assign_aux(_InputIterator __first, _InputIterator __last,
      std::input_iterator_tag)
      {
 iterator __cur(begin());
 for (; __first != __last && __cur != end(); ++__cur, ++__first)
   *__cur = *__first;
 if (__first == __last)
   erase(__cur, end());
 else
   insert(end(), __first, __last);
      }

  template<typename _Tp, typename _Alloc>
    template<typename _ForwardIterator>
      void
      vector<_Tp, _Alloc>::
      _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
      std::forward_iterator_tag)
      {
 const size_type __len = std::distance(__first, __last);

 if (__len > capacity())
   {
     pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
     std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
     this->get_allocator());
     _M_deallocate(this->_M_impl._M_start,
     this->_M_impl._M_end_of_storage
     - this->_M_impl._M_start);
     this->_M_impl._M_start = __tmp;
     this->_M_impl._M_finish = this->_M_impl._M_start + __len;
     this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
   }
 else if (size() >= __len)
   {
     iterator __new_finish(std::copy(__first, __last,
           this->_M_impl._M_start));
     std::_Destroy(__new_finish, end(), this->get_allocator());
     this->_M_impl._M_finish = __new_finish.base();
   }
 else
   {
     _ForwardIterator __mid = __first;
     std::advance(__mid, size());
     std::copy(__first, __mid, this->_M_impl._M_start);
     this->_M_impl._M_finish =
       std::__uninitialized_copy_a(__mid, __last,
       this->_M_impl._M_finish,
       this->get_allocator());
   }
      }

  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
    _M_insert_aux(iterator __position, const _Tp& __x)
    {
      if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 {
   this->_M_impl.construct(this->_M_impl._M_finish,
      *(this->_M_impl._M_finish - 1));
   ++this->_M_impl._M_finish;
   _Tp __x_copy = __x;
   std::copy_backward(__position,
        iterator(this->_M_impl._M_finish-2),
        iterator(this->_M_impl._M_finish-1));
   *__position = __x_copy;
 }
      else
 {
   const size_type __old_size = size();
   if (__old_size == this->max_size())
     __throw_length_error(("vector::_M_insert_aux"));




   size_type __len = __old_size != 0 ? 2 * __old_size : 1;
   if (__len < __old_size)
     __len = this->max_size();

   iterator __new_start(this->_M_allocate(__len));
   iterator __new_finish(__new_start);
   try
     {
       __new_finish =
  std::__uninitialized_copy_a(iterator(this->_M_impl._M_start),
         __position,
         __new_start,
         this->get_allocator());
       this->_M_impl.construct(__new_finish.base(), __x);
       ++__new_finish;
       __new_finish =
  std::__uninitialized_copy_a(__position,
         iterator(this->_M_impl._M_finish),
         __new_finish,
         this->get_allocator());
     }
   catch(...)
     {
       std::_Destroy(__new_start, __new_finish, this->get_allocator());
       _M_deallocate(__new_start.base(),__len);
       throw;
     }
   std::_Destroy(begin(), end(), this->get_allocator());
   _M_deallocate(this->_M_impl._M_start,
   this->_M_impl._M_end_of_storage
   - this->_M_impl._M_start);
   this->_M_impl._M_start = __new_start.base();
   this->_M_impl._M_finish = __new_finish.base();
   this->_M_impl._M_end_of_storage = __new_start.base() + __len;
 }
    }

  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
    _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
    {
      if (__n != 0)
 {
   if (size_type(this->_M_impl._M_end_of_storage
   - this->_M_impl._M_finish) >= __n)
     {
       value_type __x_copy = __x;
       const size_type __elems_after = end() - __position;
       iterator __old_finish(this->_M_impl._M_finish);
       if (__elems_after > __n)
  {
    std::__uninitialized_copy_a(this->_M_impl._M_finish - __n,
           this->_M_impl._M_finish,
           this->_M_impl._M_finish,
           this->get_allocator());
    this->_M_impl._M_finish += __n;
    std::copy_backward(__position, __old_finish - __n,
         __old_finish);
    std::fill(__position, __position + __n, __x_copy);
  }
       else
  {
    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
      __n - __elems_after,
      __x_copy,
      this->get_allocator());
    this->_M_impl._M_finish += __n - __elems_after;
    std::__uninitialized_copy_a(__position, __old_finish,
           this->_M_impl._M_finish,
           this->get_allocator());
    this->_M_impl._M_finish += __elems_after;
    std::fill(__position, __old_finish, __x_copy);
  }
     }
   else
     {
       const size_type __old_size = size();
       if (this->max_size() - __old_size < __n)
  __throw_length_error(("vector::_M_fill_insert"));


       size_type __len = __old_size + std::max(__old_size, __n);
       if (__len < __old_size)
  __len = this->max_size();

       iterator __new_start(this->_M_allocate(__len));
       iterator __new_finish(__new_start);
       try
  {
    __new_finish =
      std::__uninitialized_copy_a(begin(), __position,
      __new_start,
      this->get_allocator());
    std::__uninitialized_fill_n_a(__new_finish, __n, __x,
      this->get_allocator());
    __new_finish += __n;
    __new_finish =
      std::__uninitialized_copy_a(__position, end(), __new_finish,
      this->get_allocator());
  }
       catch(...)
  {
    std::_Destroy(__new_start, __new_finish,
    this->get_allocator());
    _M_deallocate(__new_start.base(), __len);
    throw;
  }
       std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
       this->get_allocator());
       _M_deallocate(this->_M_impl._M_start,
       this->_M_impl._M_end_of_storage
       - this->_M_impl._M_start);
       this->_M_impl._M_start = __new_start.base();
       this->_M_impl._M_finish = __new_finish.base();
       this->_M_impl._M_end_of_storage = __new_start.base() + __len;
     }
 }
    }

  template<typename _Tp, typename _Alloc> template<typename _InputIterator>
    void
    vector<_Tp, _Alloc>::
    _M_range_insert(iterator __pos, _InputIterator __first,
      _InputIterator __last, std::input_iterator_tag)
    {
      for (; __first != __last; ++__first)
 {
   __pos = insert(__pos, *__first);
   ++__pos;
 }
    }

  template<typename _Tp, typename _Alloc>
    template<typename _ForwardIterator>
      void
      vector<_Tp, _Alloc>::
      _M_range_insert(iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std::forward_iterator_tag)
      {
 if (__first != __last)
   {
     const size_type __n = std::distance(__first, __last);
     if (size_type(this->_M_impl._M_end_of_storage
     - this->_M_impl._M_finish) >= __n)
       {
  const size_type __elems_after = end() - __position;
  iterator __old_finish(this->_M_impl._M_finish);
  if (__elems_after > __n)
    {
      std::__uninitialized_copy_a(this->_M_impl._M_finish - __n,
      this->_M_impl._M_finish,
      this->_M_impl._M_finish,
      this->get_allocator());
      this->_M_impl._M_finish += __n;
      std::copy_backward(__position, __old_finish - __n,
           __old_finish);
      std::copy(__first, __last, __position);
    }
  else
    {
      _ForwardIterator __mid = __first;
      std::advance(__mid, __elems_after);
      std::__uninitialized_copy_a(__mid, __last,
      this->_M_impl._M_finish,
      this->get_allocator());
      this->_M_impl._M_finish += __n - __elems_after;
      std::__uninitialized_copy_a(__position, __old_finish,
      this->_M_impl._M_finish,
      this->get_allocator());
      this->_M_impl._M_finish += __elems_after;
      std::copy(__first, __mid, __position);
    }
       }
     else
       {
  const size_type __old_size = size();
  if (this->max_size() - __old_size < __n)
    __throw_length_error(("vector::_M_range_insert"));


  size_type __len = __old_size + std::max(__old_size, __n);
  if (__len < __old_size)
    __len = this->max_size();

  iterator __new_start(this->_M_allocate(__len));
  iterator __new_finish(__new_start);
  try
    {
      __new_finish =
        std::__uninitialized_copy_a(iterator(this->_M_impl._M_start),
        __position,
        __new_start,
        this->get_allocator());
      __new_finish =
        std::__uninitialized_copy_a(__first, __last, __new_finish,
        this->get_allocator());
      __new_finish =
        std::__uninitialized_copy_a(__position,
        iterator(this->_M_impl._M_finish),
        __new_finish,
        this->get_allocator());
    }
  catch(...)
    {
      std::_Destroy(__new_start,__new_finish,
      this->get_allocator());
      _M_deallocate(__new_start.base(), __len);
      throw;
    }
  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
         this->get_allocator());
  _M_deallocate(this->_M_impl._M_start,
         this->_M_impl._M_end_of_storage
         - this->_M_impl._M_start);
  this->_M_impl._M_start = __new_start.base();
  this->_M_impl._M_finish = __new_finish.base();
  this->_M_impl._M_end_of_storage = __new_start.base() + __len;
       }
   }
      }
}
# 75 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/vector" 2 3
# 8 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Text.h" 2

namespace HWICS
{
 class ListEntry;
    class Text:public Object
    {
    public:
        Text():
        m_bWrap(0),
        m_Size(32),
        m_Width(0),
        m_Height(0),
        m_Xoff(0),
        m_Yoff(0),
        m_Align(Left),
        m_bIsMText(0),
        m_MTimeMsecs(1000),
        m_MPace(0),
  m_Gap(32),
  m_DrawingCharIndex(0),
  m_DrawingOffset(0),
        m_bMoving(0)
        {
   ((&m_PreTimer)->tv_sec = (&m_PreTimer)->tv_usec = 0);
   m_ObjType = Object::ObjectType_Text;
  };
        Text(const Text &rTxt):
  Object(rTxt),
        m_bWrap(rTxt.m_bWrap),
  m_Color(rTxt.m_Color),
        m_Size(rTxt.m_Size),
        m_Width(rTxt.m_Width),
        m_Height(rTxt.m_Height),
        m_Xoff(rTxt.m_Xoff),
        m_Yoff(rTxt.m_Yoff),
        m_Align(rTxt.m_Align),
  m_Face(rTxt.m_Face),
        m_bIsMText(rTxt.m_bIsMText),
        m_MTimeMsecs(rTxt.m_MTimeMsecs),
        m_MPace(rTxt.m_MPace),
  m_Gap(rTxt.m_Gap),
  m_DrawingCharIndex(rTxt.m_DrawingCharIndex),
  m_DrawingOffset(rTxt.m_DrawingOffset),
  m_PreTimer(rTxt.m_PreTimer),
        m_bMoving(rTxt.m_bMoving)
        {

   std::vector<std::string>::const_iterator Iter;
   for(Iter = rTxt.m_StrIndexes.begin(); Iter != rTxt.m_StrIndexes.end(); Iter++)
   {
    m_StrIndexes.push_back(*Iter);
   }
  };
        Text(const IXML_Node *pNode);
        ~Text();

        Text & operator=(const Text &rTxt)
        {
   Object::operator=(rTxt);
            m_bWrap = rTxt.m_bWrap;
   m_Color = rTxt.m_Color;
            m_Size = rTxt.m_Size;
            m_Width = rTxt.m_Width;
            m_Height = rTxt.m_Height;
            m_Xoff = rTxt.m_Xoff;
            m_Yoff = rTxt.m_Yoff;
            m_Align = rTxt.m_Align;
   m_Face = rTxt.m_Face;
            m_bIsMText = rTxt.m_bIsMText;
            m_MTimeMsecs = rTxt.m_MTimeMsecs;
            m_MPace = rTxt.m_MPace;
   m_Gap = rTxt.m_Gap;
   m_DrawingCharIndex = rTxt.m_DrawingCharIndex;
   m_DrawingOffset = rTxt.m_DrawingOffset;
   m_PreTimer = rTxt.m_PreTimer;
            m_bMoving = rTxt.m_bMoving;
   m_StrIndexes.clear();
   std::copy(rTxt.m_StrIndexes.begin(), rTxt.m_StrIndexes.end(), back_inserter(m_StrIndexes));
            return *this;
        };

  virtual Object *clone()
  {
   return new Text(*this);
  };
        HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;
  virtual HYBool Draw(HYVoid *pData, const Language & rLang, const ListEntry *pEntry = __null) const;
        virtual HYVoid StopMoving() const {m_bMoving = 0;};
        virtual HYVoid StartMoving() const {m_bMoving = 1;};

        HYBool m_bWrap;
        Color m_Color;

        HYI32 m_Size;
        HYI32 m_Width;
        HYI32 m_Height;
        HYI32 m_Xoff;
        HYI32 m_Yoff;
        enum
        {
            Left,
            Center,
            Right
        }m_Align;
        std::string m_Face;
        std::vector<std::string> m_StrIndexes;

        HYBool m_bIsMText;


        HYI32 m_MTimeMsecs;
        HYI32 m_MPace;
  HYI32 m_Gap;
 private:

  mutable HYI32 m_DrawingCharIndex;
  mutable HYI32 m_DrawingOffset;
  mutable struct timeval m_PreTimer;
        mutable HYBool m_bMoving;
    };
}
# 6 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Image.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Image.h" 2


namespace HWICS
{
    class Image:public Object
    {
    public:
        Image():
        m_DisplayWidth(0),
        m_DisplayHeight(0),
        m_Xoff(0),
        m_Yoff(0),
  m_bBackGround(0)
        {
   m_ObjType = Object::ObjectType_Image;
  };
  Image(const Image & rImage):
  Object(rImage),
  m_URL(rImage.m_URL),
  m_MimeType(rImage.m_MimeType),
  m_CheckSum(rImage.m_CheckSum),
  m_DisplayWidth(rImage.m_DisplayWidth),
  m_DisplayHeight(rImage.m_DisplayHeight),
  m_Xoff(rImage.m_Xoff),
  m_Yoff(rImage.m_Yoff),
  m_bBackGround(rImage.m_bBackGround)
  {};
        Image(const IXML_Node *pNode);
        ~Image();
  Image & operator=(const Image &rImage)
  {
   Object::operator=(rImage);
   m_URL = rImage.m_URL;
   m_MimeType = rImage.m_MimeType;
   m_CheckSum = rImage.m_CheckSum;
   m_DisplayWidth = rImage.m_DisplayWidth;
   m_DisplayHeight = rImage.m_DisplayHeight;
   m_Xoff = rImage.m_Xoff;
   m_Yoff = rImage.m_Yoff;
   m_bBackGround = rImage.m_bBackGround;
   return *this;
  };

  virtual Object *clone()
  {
   return new Image(*this);
  };

        HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;
  virtual HYBool StretchDraw(HYVoid *pData,
           const HYI32 X, const HYI32 Y,
           const HYI32 W, const HYI32 H,
           const HYBool bKeepRatio = 0) const;

        std::string m_URL;
        std::string m_MimeType;
        std::string m_CheckSum;

        HYI32 m_DisplayWidth;
        HYI32 m_DisplayHeight;
        HYI32 m_Xoff;
        HYI32 m_Yoff;
  HYI32 m_bBackGround;
    };
}
# 7 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Video.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Video.h" 2


namespace HWICS
{
    class Video:public Object
    {
    public:
        Video():
        m_DisplayWidth(0),
        m_DisplayHeight(0),
        m_Xoff(0),
        m_Yoff(0)
        {
   m_ObjType = Object::ObjectType_Video;
  };
  Video(const Video & rVideo):
  Object(rVideo),
  m_URL(rVideo.m_URL),
  m_MimeType(rVideo.m_MimeType),
  m_DisplayWidth(rVideo.m_DisplayWidth),
  m_DisplayHeight(rVideo.m_DisplayHeight),
  m_Xoff(rVideo.m_Xoff),
  m_Yoff(rVideo.m_Yoff)
  {};
        Video(const IXML_Node *pNode);
        ~Video();

  Video & operator=(const Video &rVideo)
  {
   Object::operator=(rVideo);
   m_URL = rVideo.m_URL;
   m_MimeType = rVideo.m_MimeType;
   m_DisplayWidth = rVideo.m_DisplayWidth;
   m_DisplayHeight = rVideo.m_DisplayHeight;
   m_Xoff = rVideo.m_Xoff;
   m_Yoff = rVideo.m_Yoff;
   return *this;
  };
        HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;
  virtual Object *clone()
  {
   return new Video(*this);
  };

        std::string m_URL;
        std::string m_MimeType;

        HYI32 m_DisplayWidth;
        HYI32 m_DisplayHeight;
        HYI32 m_Xoff;
        HYI32 m_Yoff;
    };
}
# 8 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Line.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Line.h" 2


namespace HWICS
{
    class Line:public Object
    {
    public:
        Line():
        m_LineWidth(1),
        m_Xstart(0),
        m_Ystart(0),
        m_Xend(0),
        m_Yend(0)
        {
   m_ObjType = Object::ObjectType_Line;
  };
  Line(const Line & rLine):
  Object(rLine),
  m_LineWidth(rLine.m_LineWidth),
  m_Color(rLine.m_Color),
  m_Xstart(rLine.m_Xstart),
  m_Ystart(rLine.m_Ystart),
  m_Xend(rLine.m_Xend),
  m_Yend(rLine.m_Yend)
  {};
        Line(const IXML_Node *pNode);
        ~Line();

  Line & operator=(const Line &rLine)
  {
   Object::operator=(rLine);
   m_LineWidth = rLine.m_LineWidth;
   m_Color = rLine.m_Color;
   m_Xstart = rLine.m_Xstart;
   m_Ystart = rLine.m_Ystart;
   m_Xend = rLine.m_Xend;
   m_Yend = rLine.m_Yend;
   return *this;
  };
  virtual Object *clone()
  {
   return new Line(*this);
  };

  HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;

        HYI32 m_LineWidth;
        Color m_Color;

        HYI32 m_Xstart;
        HYI32 m_Ystart;
        HYI32 m_Xend;
        HYI32 m_Yend;
    };
}
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Circle.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Circle.h" 2


namespace HWICS
{
    class Circle:public Object
    {
    public:
        Circle():
        m_LineWidth(1),
        m_Radius(0),
        m_Xorg(0),
        m_Yorg(0)
        {
   m_ObjType = Object::ObjectType_Circle;
  };
  Circle(const Circle & rCircle):
  Object(rCircle),
  m_LineWidth(rCircle.m_LineWidth),
  m_FillColor(rCircle.m_FillColor),
  m_Color(rCircle.m_Color),
  m_Radius(rCircle.m_Radius),
  m_Xorg(rCircle.m_Xorg),
  m_Yorg(rCircle.m_Yorg)
  {};
        Circle(const IXML_Node *pNode);
        ~Circle();

        HYVoid Parse(const IXML_Node *pNode);
  virtual Object *clone()
  {
   Circle *pCircle = new Circle(*this);
   return pCircle;
  };
  Circle & operator =(const Circle & rCircle)
  {
   Object::operator=(rCircle);
   m_LineWidth = rCircle.m_LineWidth;
   m_FillColor = rCircle.m_FillColor;
   m_Color = rCircle.m_Color;
   m_Radius = rCircle.m_Radius;
   m_Xorg = rCircle.m_Xorg;
   m_Yorg = rCircle.m_Yorg;
   return *this;
  };
        virtual HYBool Draw(HYVoid *pData) const;

        HYI32 m_LineWidth;
        Color m_FillColor;
        Color m_Color;

        HYI32 m_Radius;
        HYI32 m_Xorg;
        HYI32 m_Yorg;
    };
}
# 10 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Rect.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Rect.h" 2


namespace HWICS
{
    class Rect:public Object
    {
    public:
        Rect():
        m_Width(0),
        m_Height(0)
        {
   m_ObjType = Object::ObjectType_Rect;
  };
  Rect(const Rect & rRect):
  Object(rRect),
  m_FillColor(rRect.m_FillColor),
  m_Color(rRect.m_Color),
  m_Width(rRect.m_Width),
  m_Height(rRect.m_Height)
  {};
        Rect(const IXML_Node *pNode);
        ~Rect();

  Rect & operator=(const Rect & rRect)
  {
   Object::operator=(rRect);
   m_FillColor = rRect.m_FillColor;
   m_Color = rRect.m_Color;
   m_Width = rRect.m_Width;
   m_Height = rRect.m_Height;
   return *this;
  };
  virtual Object *clone()
  {
   return new Rect(*this);
  };
        HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;

        Color m_FillColor;
        Color m_Color;

        HYI32 m_Width;
        HYI32 m_Height;
    };
}
# 11 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_RoundRect.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_RoundRect.h" 2


namespace HWICS
{
    class RoundRect:public Rect
    {
    public:
        RoundRect():
        m_Radius(0)
  {
   m_ObjType = Object::ObjectType_RoundRect;
  };
  RoundRect(const RoundRect & rRRect):
  Rect(rRRect),
  m_Radius(0)
  {};
        RoundRect(const IXML_Node *pNode);
        ~RoundRect();
  RoundRect & operator=(const RoundRect & rRRect)
  {
   Rect::operator=(rRRect);
   m_Radius = rRRect.m_Radius;
   return *this;
  };
  virtual Object * clone()
  {
   return new RoundRect(*this);
  };

        HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;

        HYI32 m_Radius;
    };
}
# 12 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_List.h" 1





# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 7 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_List.h" 2


namespace HWICS
{
    class Column
    {
    public:
        Column():
        m_Type(ICon),
  m_FontSize(32),
        m_Width(0)
        {};

        Column(const IXML_Node *pNode):
        m_Type(ICon),
  m_FontSize(32),
        m_Width(0)
        {
            Parse(pNode);
        };

        Column(const Column &Col):
        m_Type(Col.m_Type),
        m_Name(Col.m_Name),
  m_FontSize(Col.m_FontSize),
        m_Width(Col.m_Width),
        m_Color(Col.m_Color)
        {};
        ~Column(){};

        Column & operator=(const Column &Col)
        {
            m_Type = Col.m_Type;
   m_FontSize = Col.m_FontSize;
            m_Name = Col.m_Name;
            m_Width = Col.m_Width;
            m_Color = Col.m_Color;
            return *this;
        };
        HYVoid Parse(const IXML_Node *pNode);

        enum
        {
            ICon,
            String,
            MText
        } m_Type;
        std::string m_Name;
  HYI32 m_FontSize;
        HYI32 m_Width;
        Color m_Color;
    };

 class ListEntry;
    class SDF_PreviewInfo:public Text
    {
    public:
        SDF_PreviewInfo():m_Type(String){};
        SDF_PreviewInfo(const IXML_Node *pNode):m_Type(String)
        {
            Parse(pNode);
        };
        SDF_PreviewInfo(const SDF_PreviewInfo &PInfo):
        Text(PInfo),
        m_Type(PInfo.m_Type),
        m_Name(PInfo.m_Name)




        {};
        ~SDF_PreviewInfo(){};

        SDF_PreviewInfo & operator=(const SDF_PreviewInfo &PInfo)
        {
            m_Name = PInfo.m_Name;
            m_Type = PInfo.m_Type;




            Text::operator=(PInfo);
            return *this;
        };
        HYVoid Parse(const IXML_Node *pNode);
  virtual HYBool DrawImage(HYVoid *pData, const ListEntry *pEntry) const;

        enum
        {
            String,
            Image,
            MText,
            PreviewStream
        }m_Type;
        std::string m_Name;





    };

    class Preview
    {
    public:
        Preview():
        m_Type(General)
        {};
  Preview(const Preview &rPrev):
  m_Name(rPrev.m_Name),
  m_Type(rPrev.m_Type)
  {
   std::copy(rPrev.m_Infos.begin(), rPrev.m_Infos.end(), inserter(m_Infos, m_Infos.begin()));
  };
        ~Preview();
        HYVoid Parse(const IXML_Node *pNode);
  Preview & operator=(const Preview & rPrev)
  {
   m_Name = rPrev.m_Name;
   m_Type = rPrev.m_Type;
   m_Infos.clear();
   std::copy(rPrev.m_Infos.begin(), rPrev.m_Infos.end(), inserter(m_Infos, m_Infos.begin()));
   return *this;
  };
        std::string m_Name;
        std::map<std::string, SDF_PreviewInfo> m_Infos;

        enum
        {
            General,
            Video,
            Music,
            Photo,
            BT
        }m_Type;
    };

    class List:public Object
    {
    public:
        List():
        m_DisplayMode(ListMode),
        m_Width(0),
        m_Height(0),
  m_BorderSize(0),
  m_ColumnsPerPage(0),
        m_RowsPerPage(0),
        m_HeightOfRow(0),
        m_Xoff(0),
        m_Yoff(0),
  m_TitleSize(36),
  m_TitleHeight(40)
        {};
  List(const List &rList):
  Object(rList),
  m_Method(rList.m_Method),
  m_URL(rList.m_URL),
  m_DisplayMode(rList.m_DisplayMode),
  m_Width(rList.m_Width),
  m_Height(rList.m_Height),
  m_BorderSize(rList.m_BorderSize),
  m_ColumnsPerPage(rList.m_ColumnsPerPage),
  m_RowsPerPage(rList.m_RowsPerPage),
  m_HeightOfRow(rList.m_HeightOfRow),
  m_Xoff(rList.m_Xoff),
  m_Yoff(rList.m_Yoff),
  m_PrevIcon(rList.m_PrevIcon),
  m_NextIcon(rList.m_NextIcon),
  m_SelBGImage(rList.m_SelBGImage),
  m_TitleSize(rList.m_TitleSize),
  m_TitleHeight(rList.m_TitleHeight),
  m_InfoString(rList.m_InfoString),
  m_SelColor(rList.m_SelColor),
  m_SelBGColor(rList.m_SelBGColor)
  {
   std::map<std::string, Preview *>::const_iterator Iter = rList.m_PreviewThemes.begin();
   std::copy(rList.m_Cols.begin(), rList.m_Cols.end(), back_inserter(m_Cols));

   for(;Iter != rList.m_PreviewThemes.end();Iter++)
   {
    m_PreviewThemes[Iter->first] = new Preview(*(Iter->second));
   }
  };
        List(const IXML_Node *pNode);
        ~List();

  List & operator=(const List &rList)
  {
   Object::operator=(rList);
   m_Method = rList.m_Method;
   m_URL = rList.m_URL;
   m_DisplayMode = rList.m_DisplayMode;
   m_Width = rList.m_Width;
   m_Height = rList.m_Height;
   m_BorderSize = rList.m_BorderSize;
   m_ColumnsPerPage = rList.m_ColumnsPerPage;
   m_RowsPerPage = rList.m_RowsPerPage;
   m_HeightOfRow = rList.m_HeightOfRow;
   m_Xoff = rList.m_Xoff;
   m_Yoff = rList.m_Yoff;
   m_PrevIcon = rList.m_PrevIcon;
   m_NextIcon = rList.m_NextIcon;
   m_SelBGImage = rList.m_SelBGImage;
   m_TitleSize = rList.m_TitleSize;
   m_TitleHeight = rList.m_TitleHeight;
   m_InfoString = rList.m_InfoString;
   m_SelColor = rList.m_SelColor;
   m_SelBGColor = rList.m_SelBGColor;

   m_Cols.clear();
   std::map<std::string, Preview *>::const_iterator Iter = m_PreviewThemes.begin();
   std::copy(rList.m_Cols.begin(), rList.m_Cols.end(), back_inserter(m_Cols));

   for(;Iter != m_PreviewThemes.end();Iter++)
   {
    delete (Iter->second);
   }
   m_PreviewThemes.clear();

   for(Iter = rList.m_PreviewThemes.begin();Iter != rList.m_PreviewThemes.end();Iter++)
   {
    m_PreviewThemes[Iter->first] = new Preview(*(Iter->second));
   }
   return *this;
  };
  virtual Object * clone()
  {
   return new List(*this);
  };
  const Preview * GetPreviewTheme(const std::string ThemeName) const
  {
   std::map<std::string, Preview *>::const_iterator Iter;
   Iter = m_PreviewThemes.find(ThemeName);
   if (Iter != m_PreviewThemes.end())
   {
    return Iter->second;
   }
   return __null;
  };
        HYVoid Parse(const IXML_Node *pNode);
        virtual HYBool Draw(HYVoid *pData) const;

        std::string m_Method;
  std::string m_URL;
  enum
  {
   ListMode,
   ThumbnailMode
  }m_DisplayMode;

        HYI32 m_Width;
        HYI32 m_Height;
  HYI32 m_ThumbnailWidth;
  HYI32 m_ThumbnailHeight;
  HYI32 m_BorderSize;
  HYI32 m_ColumnsPerPage;
        HYI32 m_RowsPerPage;
        HYI32 m_HeightOfRow;
        HYI32 m_Xoff;
        HYI32 m_Yoff;

        Image m_PrevIcon;
        Image m_NextIcon;

        std::vector<Column> m_Cols;
  Image m_SelBGImage;
  HYI32 m_TitleSize;
  HYI32 m_TitleHeight;
        Text m_InfoString;
        Color m_SelColor;
        Color m_SelBGColor;

        std::map<std::string, Preview *> m_PreviewThemes;
    };
}
# 13 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Menu.h" 1


# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 4 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_Menu.h" 2





namespace HWICS
{
 class EntryProperty
 {
 public:
  EntryProperty();
  EntryProperty(const EntryProperty &rEP);
  EntryProperty(const IXML_Node *pNode);

  ~EntryProperty(){};

  EntryProperty &operator=(const EntryProperty &rEP);
  HYVoid Parse(const IXML_Node *pNode);

  HYI32 m_Xoff;
  HYI32 m_Yoff;
  HYI32 m_Width;
  HYI32 m_Height;
        HYI32 m_LightBarXoff;
        HYI32 m_LightBarYoff;
        HYI32 m_LightBarWidth;
        HYI32 m_LightBarHeight;
        HYI32 m_HasSubMenuIndicatoeXoff;
        HYI32 m_HasSubMenuIndicatoeYoff;
        enum
        {
            Left,
            Right
        }m_HasSubMenuIndicatorPos;
  Color m_SelectColor;
  Text m_Text;
 };
 class Menu
 {
 public:
  Menu():
  m_Type(None),
  m_ImageMode(BACKGROUND),
  m_Width(0),
  m_Height(0),
  m_FootXoff(0),
  m_FootYoff(0),
  m_FootWidth(0),
  m_FootHeight(0),
  m_pParent(__null),
  m_MemberSetFlags(0),
  m_pDisplayData(__null)
  {
  };
  Menu(const Menu & rMenu):
  m_Type(rMenu.m_Type),
  m_ImageMode(rMenu.m_ImageMode),
  m_ImageTitle(rMenu.m_ImageTitle),
  m_ImageRows(rMenu.m_ImageRows),
  m_ImageFoot(rMenu.m_ImageFoot),
  m_ImageUpArrow(rMenu.m_ImageUpArrow),
  m_ImageDownArrow(rMenu.m_ImageDownArrow),
  m_ImageHasSubMenu(rMenu.m_ImageHasSubMenu),
  m_ImageLightBar(rMenu.m_ImageLightBar),
  m_Width(rMenu.m_Width),
  m_Height(rMenu.m_Height),
  m_Title(rMenu.m_Title),
  m_FootXoff(rMenu.m_FootXoff),
  m_FootYoff(rMenu.m_FootYoff),
  m_FootWidth(rMenu.m_FootWidth),
  m_FootHeight(rMenu.m_FootHeight),
  m_EntryProperty(rMenu.m_EntryProperty),
  m_TitleText(rMenu.m_TitleText),
  m_Action(rMenu.m_Action),
  m_pParent(__null),
  m_MemberSetFlags(rMenu.m_MemberSetFlags),
  m_pDisplayData(__null)
  {
   std::copy(rMenu.m_SubItems.begin(), rMenu.m_SubItems.end(), back_inserter(m_SubItems));

   std::vector<Menu>::iterator Iter = m_SubItems.begin();
   while(Iter != m_SubItems.end())
   {
    Iter->m_pParent = this;
    Iter++;
   }
  };
  Menu(const IXML_Node *pNode);
  virtual ~Menu();

  Menu & operator=(const Menu & rMenu)
  {
   m_Type = rMenu.m_Type;
   m_ImageMode = rMenu.m_ImageMode;
   m_ImageTitle = rMenu.m_ImageTitle;
   m_ImageRows = rMenu.m_ImageRows;
   m_ImageFoot = rMenu.m_ImageFoot;
   m_ImageUpArrow = rMenu.m_ImageUpArrow;
   m_ImageDownArrow = rMenu.m_ImageDownArrow;
   m_ImageHasSubMenu = rMenu.m_ImageHasSubMenu;
   m_ImageLightBar = rMenu.m_ImageLightBar;
   m_Width = rMenu.m_Width;
   m_Height = rMenu.m_Height;
   m_Title = rMenu.m_Title;
   m_FootXoff = rMenu.m_FootXoff;
   m_FootYoff = rMenu.m_FootYoff;
   m_FootWidth = rMenu.m_FootWidth;
   m_FootHeight = rMenu.m_FootHeight;
   m_EntryProperty = rMenu.m_EntryProperty;
   m_TitleText = rMenu.m_TitleText;
   m_Action = rMenu.m_Action;
   m_MemberSetFlags = rMenu.m_MemberSetFlags;
   if (m_pDisplayData)
   {
    free(m_pDisplayData);
    m_pDisplayData = __null;
   }

   m_SubItems.clear();
   std::copy(rMenu.m_SubItems.begin(), rMenu.m_SubItems.end(), back_inserter(m_SubItems));

   std::vector<Menu>::iterator Iter = m_SubItems.begin();
   while(Iter != m_SubItems.end())
   {
    Iter->m_pParent = this;
    Iter++;
   }
   return *this;
  };
  virtual Menu *clone()
  {
   return new Menu(*this);
  };
  HYVoid Parse(const IXML_Node *pNode, Menu * pMenu = __null);


  virtual HYBool Draw(HYVoid *pData, const Language & rLang, const ListEntry *pEntry) const;
  HYBool Pop(void *pData, const HYI32 RefX, const HYI32 RefY, const HYI32 ScreenW, const HYI32 ScreenH) const;
  HYBool Close(void *pData) const;
  HYBool HandleKey(void *pData, HYU32 Key) const;
  HYBool IsEmpty() const;

 private:
  enum
  {
   None = 0,
   Item,
   SubMenu
  }m_Type;
  enum
  {
   JIGSAW,
   BACKGROUND
  }m_ImageMode;
  Image m_ImageTitle;
  Image m_ImageRows;
  Image m_ImageFoot;
  Image m_ImageUpArrow;
  Image m_ImageDownArrow;
  Image m_ImageHasSubMenu;
  Image m_ImageLightBar;
  HYI32 m_Width;
  HYI32 m_Height;
  Text m_Title;
  HYI32 m_FootXoff;
  HYI32 m_FootYoff;
  HYI32 m_FootWidth;
  HYI32 m_FootHeight;
  EntryProperty m_EntryProperty;
  std::string m_TitleText;
  std::string m_Action;
  std::vector <Menu> m_SubItems;
  Menu *m_pParent;

 private:
  HYVoid CopyMissingMember(const Menu & rMenu);
  HYU32 m_MemberSetFlags;
  mutable HYVoid *m_pDisplayData;
 };
}
# 14 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ListAccess.h" 1





# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 7 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ListAccess.h" 2



namespace HWICS
{
 class ListAccessMedia
 {
 public:
  ListAccessMedia():
  m_Type(DEFAULT_UNKNOWN),
  m_Width(0),
  m_Height(0)
  {};

  ListAccessMedia(const ListAccessMedia & rListAccMedia):
  m_Type(rListAccMedia.m_Type),
  m_Width(rListAccMedia.m_Width),
  m_Height(rListAccMedia.m_Height),
  m_URL(rListAccMedia.m_URL),
  m_CheckSum(rListAccMedia.m_CheckSum),
  m_MimeType(rListAccMedia.m_MimeType)
  {};
  ListAccessMedia(const IXML_Node *pNode):
  m_Type(DEFAULT_UNKNOWN)
  {
   Parse(pNode);
  };
  ~ListAccessMedia(){};
  HYBool SetURL(const char *pURL);
  HYVoid Parse(const IXML_Node *pNode);
  ListAccessMedia & operator=(const ListAccessMedia & rListAccMedia)
  {
   m_Type = rListAccMedia.m_Type;
   m_Width = rListAccMedia.m_Width;
   m_Height = rListAccMedia.m_Height;
   m_URL = rListAccMedia.m_URL;
   m_CheckSum = rListAccMedia.m_CheckSum;
   m_MimeType = rListAccMedia.m_MimeType;
   return *this;
  };

  enum
  {
   USER_DEFINED,
   DEFAULT_DIR,
   DEFAULT_VIDEO,
   DEFAULT_MUSIC,
   DEFAULT_PHOTO,
   DEFAULT_UNKNOWN
  } m_Type;
  HYI32 m_Width;
  HYI32 m_Height;
  std::string m_URL;
  std::string m_CheckSum;
  std::string m_MimeType;
 };

 class ListAccessColumn
 {
 public:
  ListAccessColumn(){};
  ListAccessColumn(const ListAccessColumn & rListAccCol):
  m_Name(rListAccCol.m_Name),
  m_Media(rListAccCol.m_Media),
  m_Value(rListAccCol.m_Value)
  {};
  ListAccessColumn(const IXML_Node *pNode)
  {
   Parse(pNode);
  };
  ~ListAccessColumn(){};
  HYVoid Parse(const IXML_Node *pNode);
  ListAccessColumn & operator=(const ListAccessColumn & rListAccCol)
  {
   m_Name = rListAccCol.m_Name;
   m_Media = rListAccCol.m_Media;
   m_Value = rListAccCol.m_Value;
   return *this;
  };

  std::string m_Name;
  ListAccessMedia m_Media;
  std::string m_Value;
 };

 class ListAction
 {
 public:
  ListAction():
  m_Type(OnPlay),
  m_Action(Play)
  {};
  ListAction(const ListAction & rListAct):
  m_Type(rListAct.m_Type),
  m_Action(rListAct.m_Action),
  m_Media(rListAct.m_Media),
  m_Value(rListAct.m_Value)
  {};
  ListAction(const IXML_Node *pNode):
  m_Type(OnPlay),
  m_Action(Play)
  {
   Parse(pNode);
  };
  ~ListAction(){};
  HYVoid Parse(const IXML_Node *pNode);
  ListAction & operator=(const ListAction & rListAct)
  {
   m_Type = rListAct.m_Type;
   m_Action = rListAct.m_Action;
   m_Media = rListAct.m_Media;
   m_Value = rListAct.m_Value;
   return *this;
  };

  enum
  {
   OnPlay,
   OnSelect
  }m_Type;

  enum
  {
   Play,
   Load
  }m_Action;

  ListAccessMedia m_Media;
  std::string m_Value;
 };

 class PreviewInfo:public ListAccessMedia
 {
 public:
  PreviewInfo()
  {};
  PreviewInfo(const PreviewInfo &PInfo):
  ListAccessMedia(PInfo),
  m_String(PInfo.m_String)
  {};
  PreviewInfo(const IXML_Node *pNode)
  {
   Parse(pNode);
  };
  ~PreviewInfo()
  {};
  HYVoid Parse(const IXML_Node *pNode);
  PreviewInfo & operator=(const PreviewInfo &PInfo)
  {
   m_String = PInfo.m_String;
   ListAccessMedia::operator=(PInfo);
   return *this;
  };

 public:
  std::string m_String;
 };

 class ListEntry
 {
 public:
  ListEntry():
  m_Index(0),
  m_Type(General)
  {
  };
  ListEntry(const ListEntry &rEntry):
  m_Index(rEntry.m_Index),
  m_Type(rEntry.m_Type),
  m_ObjectID(rEntry.m_ObjectID),
  m_PreviewInfo(rEntry.m_PreviewInfo),
  m_ThemeName(rEntry.m_ThemeName),
  m_Menu(rEntry.m_Menu)
  {
   std::vector<ListAccessColumn *>::const_iterator ColIter = rEntry.m_Columns.begin();
   std::vector<ListAction *>::const_iterator ActIter = rEntry.m_Actions.begin();
   for(;ColIter != rEntry.m_Columns.end(); ColIter++)
   {
    m_Columns.push_back(new ListAccessColumn(**ColIter));
   }
   for(;ActIter != rEntry.m_Actions.end(); ActIter++)
   {
    m_Actions.push_back(new ListAction(**ActIter));
   }
  };
  ListEntry(const IXML_Node *pNode):
  m_Index(0),
  m_Type(General)
  {
   Parse(pNode);
  };
  ~ListEntry();

  HYVoid Parse(const IXML_Node *pNode);
  ListEntry & operator=(const ListEntry rEntry)
  {
   std::vector<ListAccessColumn *>::iterator ColIter;
   std::vector<ListAction *>::iterator ActIter;
   std::vector<ListAccessColumn *>::const_iterator cColIter;
   std::vector<ListAction *>::const_iterator cActIter;

   m_Index = rEntry.m_Index;
   m_Type = rEntry.m_Type;
   m_ObjectID = rEntry.m_ObjectID;
   m_PreviewInfo = rEntry.m_PreviewInfo;
   m_ThemeName = rEntry.m_ThemeName;
   for(ColIter = m_Columns.begin();ColIter != m_Columns.end(); ColIter++)
   {
    delete *ColIter;
   };
   m_Columns.clear();

   for(cColIter = rEntry.m_Columns.begin(); cColIter != rEntry.m_Columns.end(); cColIter++)
   {
    m_Columns.push_back(new ListAccessColumn(**cColIter));
   }

   for(ActIter = m_Actions.begin(); ActIter != m_Actions.end(); ActIter++)
   {
    delete *ActIter;
   };
   m_Actions.clear();
   for(cActIter = rEntry.m_Actions.begin(); cActIter != rEntry.m_Actions.end(); cActIter++)
   {
    m_Actions.push_back(new ListAction(**cActIter));
   }
   m_Menu = rEntry.m_Menu;
   return *this;
  };
  std::string GetColumnString(const std::string & ColName) const
  {
   std::string RetString;
   std::vector<ListAccessColumn *>::const_iterator ColIter = m_Columns.begin();
   while(ColIter != m_Columns.end())
   {
    if ((*ColIter)->m_Name == ColName)
    {
     RetString = (*ColIter)->m_Value;
     break;
    }
    ColIter++;
   };
   return RetString;
  };

  std::string GetPreviewInfoString(const std::string & PVName) const
  {
   std::string RetString;
   std::map<std::string, PreviewInfo>::const_iterator PVIter;
   PVIter = m_PreviewInfo.find(PVName);
   if(PVIter != m_PreviewInfo.end())
   {
    RetString = PVIter->second.m_String;
   }
   else
   {
    printf("Can not find PreviewInfo [%s].\n", PVName.c_str());
    RetString = PVName;
   }
   return RetString;
  };
  const PreviewInfo GetPreviewInfo(const std::string & PVName) const
  {
   std::map<std::string, PreviewInfo>::const_iterator PVIter;
   PVIter = m_PreviewInfo.find(PVName);
   if(PVIter != m_PreviewInfo.end())
   {
    return PVIter->second;
   }
   else
   {
    printf("Can not find PreviewInfo [%s].\n", PVName.c_str());
    throw ErrorHandle(Object_NotFound, "Can not find PreviewInfo.!!");
   }
  };

 public:
  HYI32 m_Index;
  enum
  {
   General,
   DIR,
   Video,
   Music,
   Photo
  }m_Type;
  std::string m_ObjectID;
  std::vector<ListAccessColumn *> m_Columns;
  std::vector<ListAction *> m_Actions;
  std::map<std::string, PreviewInfo> m_PreviewInfo;
  std::string m_ThemeName;
  Menu m_Menu;
 };

 class ListAccess
 {
 public:
  ListAccess():
  m_nVersionMajor(1),
  m_nVersionMinor(0),
  m_nVersionRelease(0),
  m_nProviderVerMajor(1),
  m_nProviderVerMinor(0),
  m_nProviderVerRelease(0),
  m_nSupportVersionMajor(1),
  m_nSupportVersionMinor(0),
  m_nSupportVersionRelease(0)
  {};
  ListAccess(const IXML_Node *pNode):
  m_nVersionMajor(1),
  m_nVersionMinor(0),
  m_nVersionRelease(0),
  m_nProviderVerMajor(1),
  m_nProviderVerMinor(0),
  m_nProviderVerRelease(0),
  m_nSupportVersionMajor(1),
  m_nSupportVersionMinor(0),
  m_nSupportVersionRelease(0)
  {
   Parse(pNode);
  };
  ~ListAccess();

  HYVoid Parse(const IXML_Node *pNode);

 private:
  HYBool ParseStatus(const IXML_Node *pNode);

 public:

  HYI32 m_nVersionMajor;
  HYI32 m_nVersionMinor;
  HYI32 m_nVersionRelease;
  std::string m_ProviderName;
  HYI32 m_nProviderVerMajor;
  HYI32 m_nProviderVerMinor;
  HYI32 m_nProviderVerRelease;

  const HYI32 m_nSupportVersionMajor;
  const HYI32 m_nSupportVersionMinor;
  const HYI32 m_nSupportVersionRelease;


  HYI32 m_StatusIndex;
  HYI32 m_nRows;
  HYI32 m_TotalRows;
  HYI32 m_RestRows;

  std::vector<ListEntry *> m_Entries;
 };
}
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ResourceManager.h" 1


# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 4 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ResourceManager.h" 2




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 1 3
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 3
       
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 1 3
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 3
       
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 3





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/localefwd.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/localefwd.h" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/localefwd.h" 3






namespace std
{

  class locale;


  template<typename _CharT>
    inline bool
    isspace(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isprint(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    iscntrl(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isupper(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    islower(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isalpha(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isdigit(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    ispunct(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isxdigit(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isalnum(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isgraph(_CharT, const locale&);

  template<typename _CharT>
    inline _CharT
    toupper(_CharT, const locale&);

  template<typename _CharT>
    inline _CharT
    tolower(_CharT, const locale&);


  class ctype_base;
  template<typename _CharT>
    class ctype;
  template<> class ctype<char>;



  template<typename _CharT>
    class ctype_byname;


  class codecvt_base;
  class __enc_traits;
  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt;
  template<> class codecvt<char, char, mbstate_t>;



  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt_byname;


  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class num_get;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class num_put;
  template<typename _CharT> class numpunct;
  template<typename _CharT> class numpunct_byname;


  template<typename _CharT>
    class collate;
  template<typename _CharT> class
    collate_byname;


  class time_base;
  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class time_get;
  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class time_get_byname;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class time_put;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class time_put_byname;


  class money_base;
  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class money_get;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class money_put;
  template<typename _CharT, bool _Intl = false>
    class moneypunct;
  template<typename _CharT, bool _Intl = false>
    class moneypunct_byname;


  class messages_base;
  template<typename _CharT>
    class messages;
  template<typename _CharT>
    class messages_byname;

  template<typename _Facet>
    bool
    has_facet(const locale& __loc) throw();

  template<typename _Facet>
    const _Facet&
    use_facet(const locale& __loc);

  template<typename _Facet>
    inline const _Facet&
    __check_facet(const _Facet* __f)
    {
      if (!__f)
 __throw_bad_cast();
      return *__f;
    }
}
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3



# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3







namespace std
{
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
  class locale
  {
  public:


    typedef int category;


    class facet;
    class id;
    class _Impl;

    friend class facet;
    friend class _Impl;

    template<typename _Facet>
      friend bool
      has_facet(const locale&) throw();

    template<typename _Facet>
      friend const _Facet&
      use_facet(const locale&);

    template<typename _Cache>
      friend struct __use_cache;
# 105 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    static const category none = 0;
    static const category ctype = 1L << 0;
    static const category numeric = 1L << 1;
    static const category collate = 1L << 2;
    static const category time = 1L << 3;
    static const category monetary = 1L << 4;
    static const category messages = 1L << 5;
    static const category all = (ctype | numeric | collate |
        time | monetary | messages);
# 124 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    locale() throw();
# 133 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    locale(const locale& __other) throw();
# 143 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    explicit
    locale(const char* __s);
# 158 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    locale(const locale& __base, const char* __s, category __cat);
# 171 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    locale(const locale& __base, const locale& __add, category __cat);
# 183 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    template<typename _Facet>
      locale(const locale& __other, _Facet* __f);


    ~locale() throw();
# 197 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    const locale&
    operator=(const locale& __other) throw();
# 212 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    template<typename _Facet>
      locale
      combine(const locale& __other) const;






    string
    name() const;
# 231 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    bool
    operator==(const locale& __other) const throw ();







    inline bool
    operator!=(const locale& __other) const throw ()
    { return !(this->operator==(__other)); }
# 259 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    template<typename _Char, typename _Traits, typename _Alloc>
      bool
      operator()(const basic_string<_Char, _Traits, _Alloc>& __s1,
   const basic_string<_Char, _Traits, _Alloc>& __s2) const;
# 275 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    static locale
    global(const locale&);




    static const locale&
    classic();

  private:

    _Impl* _M_impl;


    static _Impl* _S_classic;


    static _Impl* _S_global;





    static const char* const* const _S_categories;
# 310 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    static const size_t _S_categories_size = 6 + 0;


    static __gthread_once_t _S_once;


    explicit
    locale(_Impl*) throw();

    static void
    _S_initialize();

    static void
    _S_initialize_once();

    static category
    _S_normalize_category(category);

    void
    _M_coalesce(const locale& __base, const locale& __add, category __cat);
  };
# 343 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
  class locale::facet
  {
  private:
    friend class locale;
    friend class locale::_Impl;

    mutable _Atomic_word _M_refcount;


    static __c_locale _S_c_locale;


    static const char _S_c_name[2];


    static __gthread_once_t _S_once;


    static void
    _S_initialize_once();

  protected:
# 374 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
    explicit
    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)
    { }


    virtual
    ~facet();

    static void
    _S_create_c_locale(__c_locale& __cloc, const char* __s,
         __c_locale __old = 0);

    static __c_locale
    _S_clone_c_locale(__c_locale& __cloc);

    static void
    _S_destroy_c_locale(__c_locale& __cloc);



    static __c_locale
    _S_get_c_locale();

    static const char*
    _S_get_c_name();

  private:
    inline void
    _M_add_reference() const throw()
    { __gnu_cxx::__atomic_add(&_M_refcount, 1); }

    inline void
    _M_remove_reference() const throw()
    {
      if (__gnu_cxx::__exchange_and_add(&_M_refcount, -1) == 1)
 {
   try
     { delete this; }
   catch (...)
     { }
 }
    }

    facet(const facet&);

    facet&
    operator=(const facet&);
  };
# 434 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_classes.h" 3
  class locale::id
  {
  private:
    friend class locale;
    friend class locale::_Impl;

    template<typename _Facet>
      friend const _Facet&
      use_facet(const locale&);

    template<typename _Facet>
      friend bool
      has_facet(const locale&) throw ();




    mutable size_t _M_index;


    static _Atomic_word _S_refcount;

    void
    operator=(const id&);

    id(const id&);

  public:



    id() { }

    size_t
    _M_id() const;
  };



  class locale::_Impl
  {
  public:

    friend class locale;
    friend class locale::facet;

    template<typename _Facet>
      friend bool
      has_facet(const locale&) throw();

    template<typename _Facet>
      friend const _Facet&
      use_facet(const locale&);

    template<typename _Cache>
      friend struct __use_cache;

  private:

    _Atomic_word _M_refcount;
    const facet** _M_facets;
    size_t _M_facets_size;
    const facet** _M_caches;
    char** _M_names;
    static const locale::id* const _S_id_ctype[];
    static const locale::id* const _S_id_numeric[];
    static const locale::id* const _S_id_collate[];
    static const locale::id* const _S_id_time[];
    static const locale::id* const _S_id_monetary[];
    static const locale::id* const _S_id_messages[];
    static const locale::id* const* const _S_facet_categories[];

    inline void
    _M_add_reference() throw()
    { __gnu_cxx::__atomic_add(&_M_refcount, 1); }

    inline void
    _M_remove_reference() throw()
    {
      if (__gnu_cxx::__exchange_and_add(&_M_refcount, -1) == 1)
 {
   try
     { delete this; }
   catch(...)
     { }
 }
    }

    _Impl(const _Impl&, size_t);
    _Impl(const char*, size_t);
    _Impl(size_t) throw();

   ~_Impl() throw();

    _Impl(const _Impl&);

    void
    operator=(const _Impl&);

    inline bool
    _M_check_same_name()
    {
      bool __ret = true;
      if (_M_names[1])

 for (size_t __i = 0; __ret && __i < _S_categories_size - 1; ++__i)
   __ret = std::strcmp(_M_names[__i], _M_names[__i + 1]) == 0;
      return __ret;
    }

    void
    _M_replace_categories(const _Impl*, category);

    void
    _M_replace_category(const _Impl*, const locale::id* const*);

    void
    _M_replace_facet(const _Impl*, const locale::id*);

    void
    _M_install_facet(const locale::id*, const facet*);

    template<typename _Facet>
      inline void
      _M_init_facet(_Facet* __facet)
      { _M_install_facet(&_Facet::id, __facet); }

    void
    _M_install_cache(const facet*, size_t);
  };

  template<typename _Facet>
    locale::locale(const locale& __other, _Facet* __f)
    {
      _M_impl = new _Impl(*__other._M_impl, 1);

      try
 { _M_impl->_M_install_facet(&_Facet::id, __f); }
      catch(...)
 {
   _M_impl->_M_remove_reference();
   throw;
 }
      delete [] _M_impl->_M_names[0];
      _M_impl->_M_names[0] = 0;
    }
}
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 2 3

namespace std
{




  enum _Ios_Fmtflags
    {
      _S_boolalpha = 1L << 0,
      _S_dec = 1L << 1,
      _S_fixed = 1L << 2,
      _S_hex = 1L << 3,
      _S_internal = 1L << 4,
      _S_left = 1L << 5,
      _S_oct = 1L << 6,
      _S_right = 1L << 7,
      _S_scientific = 1L << 8,
      _S_showbase = 1L << 9,
      _S_showpoint = 1L << 10,
      _S_showpos = 1L << 11,
      _S_skipws = 1L << 12,
      _S_unitbuf = 1L << 13,
      _S_uppercase = 1L << 14,
      _S_adjustfield = _S_left | _S_right | _S_internal,
      _S_basefield = _S_dec | _S_oct | _S_hex,
      _S_floatfield = _S_scientific | _S_fixed,
      _S_ios_fmtflags_end = 1L << 16
    };

  inline _Ios_Fmtflags
  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _Ios_Fmtflags
  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }

  inline _Ios_Fmtflags
  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _Ios_Fmtflags&
  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a | __b; }

  inline _Ios_Fmtflags&
  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a & __b; }

  inline _Ios_Fmtflags&
  operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a ^ __b; }

  inline _Ios_Fmtflags
  operator~(_Ios_Fmtflags __a)
  { return _Ios_Fmtflags(~static_cast<int>(__a)); }


  enum _Ios_Openmode
    {
      _S_app = 1L << 0,
      _S_ate = 1L << 1,
      _S_bin = 1L << 2,
      _S_in = 1L << 3,
      _S_out = 1L << 4,
      _S_trunc = 1L << 5,
      _S_ios_openmode_end = 1L << 16
    };

  inline _Ios_Openmode
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }

  inline _Ios_Openmode
  operator^(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _Ios_Openmode&
  operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)
  { return __a = __a | __b; }

  inline _Ios_Openmode&
  operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)
  { return __a = __a & __b; }

  inline _Ios_Openmode&
  operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)
  { return __a = __a ^ __b; }

  inline _Ios_Openmode
  operator~(_Ios_Openmode __a)
  { return _Ios_Openmode(~static_cast<int>(__a)); }


  enum _Ios_Iostate
    {
      _S_goodbit = 0,
      _S_badbit = 1L << 0,
      _S_eofbit = 1L << 1,
      _S_failbit = 1L << 2,
      _S_ios_iostate_end = 1L << 16
    };

  inline _Ios_Iostate
  operator&(_Ios_Iostate __a, _Ios_Iostate __b)
  { return _Ios_Iostate(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _Ios_Iostate
  operator|(_Ios_Iostate __a, _Ios_Iostate __b)
  { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }

  inline _Ios_Iostate
  operator^(_Ios_Iostate __a, _Ios_Iostate __b)
  { return _Ios_Iostate(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _Ios_Iostate&
  operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)
  { return __a = __a | __b; }

  inline _Ios_Iostate&
  operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)
  { return __a = __a & __b; }

  inline _Ios_Iostate&
  operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)
  { return __a = __a ^ __b; }

  inline _Ios_Iostate
  operator~(_Ios_Iostate __a)
  { return _Ios_Iostate(~static_cast<int>(__a)); }

  enum _Ios_Seekdir
    {
      _S_beg = 0,
      _S_cur = 1,
      _S_end = 2,
      _S_ios_seekdir_end = 1L << 16
    };
# 201 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
  class ios_base
  {
  public:



    class failure : public exception
    {
    public:


      explicit
      failure(const string& __str) throw();



      virtual
      ~failure() throw();

      virtual const char*
      what() const throw();

    private:
      string _M_msg;
    };
# 253 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    typedef _Ios_Fmtflags fmtflags;


    static const fmtflags boolalpha = fmtflags(__ios_flags::_S_boolalpha);


    static const fmtflags dec = fmtflags(__ios_flags::_S_dec);


    static const fmtflags fixed = fmtflags(__ios_flags::_S_fixed);


    static const fmtflags hex = fmtflags(__ios_flags::_S_hex);




    static const fmtflags internal = fmtflags(__ios_flags::_S_internal);



    static const fmtflags left = fmtflags(__ios_flags::_S_left);


    static const fmtflags oct = fmtflags(__ios_flags::_S_oct);



    static const fmtflags right = fmtflags(__ios_flags::_S_right);


    static const fmtflags scientific = fmtflags(__ios_flags::_S_scientific);



    static const fmtflags showbase = fmtflags(__ios_flags::_S_showbase);



    static const fmtflags showpoint = fmtflags(__ios_flags::_S_showpoint);


    static const fmtflags showpos = fmtflags(__ios_flags::_S_showpos);


    static const fmtflags skipws = fmtflags(__ios_flags::_S_skipws);


    static const fmtflags unitbuf = fmtflags(__ios_flags::_S_unitbuf);



    static const fmtflags uppercase = fmtflags(__ios_flags::_S_uppercase);


    static const fmtflags adjustfield = fmtflags(__ios_flags::_S_adjustfield);


    static const fmtflags basefield = fmtflags(__ios_flags::_S_basefield);


    static const fmtflags floatfield = fmtflags(__ios_flags::_S_floatfield);
# 328 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    typedef _Ios_Iostate iostate;



    static const iostate badbit = iostate(__ios_flags::_S_badbit);


    static const iostate eofbit = iostate(__ios_flags::_S_eofbit);




    static const iostate failbit = iostate(__ios_flags::_S_failbit);


    static const iostate goodbit = iostate(0);
# 359 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    typedef _Ios_Openmode openmode;


    static const openmode app = openmode(__ios_flags::_S_app);


    static const openmode ate = openmode(__ios_flags::_S_ate);





    static const openmode binary = openmode(__ios_flags::_S_bin);


    static const openmode in = openmode(__ios_flags::_S_in);


    static const openmode out = openmode(__ios_flags::_S_out);


    static const openmode trunc = openmode(__ios_flags::_S_trunc);
# 392 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    typedef _Ios_Seekdir seekdir;


    static const seekdir beg = seekdir(0);


    static const seekdir cur = seekdir(1);


    static const seekdir end = seekdir(2);


    typedef int io_state;
    typedef int open_mode;
    typedef int seek_dir;

    typedef std::streampos streampos;
    typedef std::streamoff streamoff;
# 418 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    enum event
    {
      erase_event,
      imbue_event,
      copyfmt_event
    };
# 435 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    typedef void (*event_callback) (event, ios_base&, int);
# 447 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    void
    register_callback(event_callback __fn, int __index);

  protected:






    streamsize _M_precision;
    streamsize _M_width;
    fmtflags _M_flags;
    iostate _M_exception;
    iostate _M_streambuf_state;




    struct _Callback_list
    {

      _Callback_list* _M_next;
      ios_base::event_callback _M_fn;
      int _M_index;
      _Atomic_word _M_refcount;

      _Callback_list(ios_base::event_callback __fn, int __index,
       _Callback_list* __cb)
      : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0) { }

      void
      _M_add_reference() { __gnu_cxx::__atomic_add(&_M_refcount, 1); }


      int
      _M_remove_reference()
      { return __gnu_cxx::__exchange_and_add(&_M_refcount, -1); }
    };

     _Callback_list* _M_callbacks;

    void
    _M_call_callbacks(event __ev) throw();

    void
    _M_dispose_callbacks(void);


    struct _Words
    {
      void* _M_pword;
      long _M_iword;
      _Words() : _M_pword(0), _M_iword(0) { }
    };


    _Words _M_word_zero;



    static const int _S_local_word_size = 8;
    _Words _M_local_word[_S_local_word_size];


    int _M_word_size;
    _Words* _M_word;

    _Words&
    _M_grow_words(int __index, bool __iword);


    locale _M_ios_locale;

    void
    _M_init();

  public:





    class Init
    {
      friend class ios_base;
    public:
      Init();
      ~Init();

    private:
      static _Atomic_word _S_refcount;
      static bool _S_synced_with_stdio;
    };






    inline fmtflags
    flags() const { return _M_flags; }
# 557 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline fmtflags
    flags(fmtflags __fmtfl)
    {
      fmtflags __old = _M_flags;
      _M_flags = __fmtfl;
      return __old;
    }
# 573 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline fmtflags
    setf(fmtflags __fmtfl)
    {
      fmtflags __old = _M_flags;
      _M_flags |= __fmtfl;
      return __old;
    }
# 590 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline fmtflags
    setf(fmtflags __fmtfl, fmtflags __mask)
    {
      fmtflags __old = _M_flags;
      _M_flags &= ~__mask;
      _M_flags |= (__fmtfl & __mask);
      return __old;
    }







    inline void
    unsetf(fmtflags __mask) { _M_flags &= ~__mask; }
# 617 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline streamsize
    precision() const { return _M_precision; }






    inline streamsize
    precision(streamsize __prec)
    {
      streamsize __old = _M_precision;
      _M_precision = __prec;
      return __old;
    }







    inline streamsize
    width() const { return _M_width; }






    inline streamsize
    width(streamsize __wide)
    {
      streamsize __old = _M_width;
      _M_width = __wide;
      return __old;
    }
# 666 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    static bool
    sync_with_stdio(bool __sync = true);
# 678 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    locale
    imbue(const locale& __loc);
# 689 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline locale
    getloc() const { return _M_ios_locale; }
# 699 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline const locale&
    _M_getloc() const { return _M_ios_locale; }
# 717 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    static int
    xalloc() throw();
# 733 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline long&
    iword(int __ix)
    {
      _Words& __word = (__ix < _M_word_size)
   ? _M_word[__ix] : _M_grow_words(__ix, true);
      return __word._M_iword;
    }
# 754 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    inline void*&
    pword(int __ix)
    {
      _Words& __word = (__ix < _M_word_size)
   ? _M_word[__ix] : _M_grow_words(__ix, false);
      return __word._M_pword;
    }
# 771 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ios_base.h" 3
    virtual ~ios_base();

  protected:
    ios_base();



  private:
    ios_base(const ios_base&);

    ios_base&
    operator=(const ios_base&);
  };



  inline ios_base&
  boolalpha(ios_base& __base)
  {
    __base.setf(ios_base::boolalpha);
    return __base;
  }


  inline ios_base&
  noboolalpha(ios_base& __base)
  {
    __base.unsetf(ios_base::boolalpha);
    return __base;
  }


  inline ios_base&
  showbase(ios_base& __base)
  {
    __base.setf(ios_base::showbase);
    return __base;
  }


  inline ios_base&
  noshowbase(ios_base& __base)
  {
    __base.unsetf(ios_base::showbase);
    return __base;
  }


  inline ios_base&
  showpoint(ios_base& __base)
  {
    __base.setf(ios_base::showpoint);
    return __base;
  }


  inline ios_base&
  noshowpoint(ios_base& __base)
  {
    __base.unsetf(ios_base::showpoint);
    return __base;
  }


  inline ios_base&
  showpos(ios_base& __base)
  {
    __base.setf(ios_base::showpos);
    return __base;
  }


  inline ios_base&
  noshowpos(ios_base& __base)
  {
    __base.unsetf(ios_base::showpos);
    return __base;
  }


  inline ios_base&
  skipws(ios_base& __base)
  {
    __base.setf(ios_base::skipws);
    return __base;
  }


  inline ios_base&
  noskipws(ios_base& __base)
  {
    __base.unsetf(ios_base::skipws);
    return __base;
  }


  inline ios_base&
  uppercase(ios_base& __base)
  {
    __base.setf(ios_base::uppercase);
    return __base;
  }


  inline ios_base&
  nouppercase(ios_base& __base)
  {
    __base.unsetf(ios_base::uppercase);
    return __base;
  }


  inline ios_base&
  unitbuf(ios_base& __base)
  {
     __base.setf(ios_base::unitbuf);
     return __base;
  }


  inline ios_base&
  nounitbuf(ios_base& __base)
  {
     __base.unsetf(ios_base::unitbuf);
     return __base;
  }



  inline ios_base&
  internal(ios_base& __base)
  {
     __base.setf(ios_base::internal, ios_base::adjustfield);
     return __base;
  }


  inline ios_base&
  left(ios_base& __base)
  {
    __base.setf(ios_base::left, ios_base::adjustfield);
    return __base;
  }


  inline ios_base&
  right(ios_base& __base)
  {
    __base.setf(ios_base::right, ios_base::adjustfield);
    return __base;
  }



  inline ios_base&
  dec(ios_base& __base)
  {
    __base.setf(ios_base::dec, ios_base::basefield);
    return __base;
  }


  inline ios_base&
  hex(ios_base& __base)
  {
    __base.setf(ios_base::hex, ios_base::basefield);
    return __base;
  }


  inline ios_base&
  oct(ios_base& __base)
  {
    __base.setf(ios_base::oct, ios_base::basefield);
    return __base;
  }



  inline ios_base&
  fixed(ios_base& __base)
  {
    __base.setf(ios_base::fixed, ios_base::floatfield);
    return __base;
  }


  inline ios_base&
  scientific(ios_base& __base)
  {
    __base.setf(ios_base::scientific, ios_base::floatfield);
    return __base;
  }
}
# 49 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3






namespace std
{





  template<typename _CharT, typename _Traits>
    streamsize
    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,
        basic_streambuf<_CharT, _Traits>* __sbout);
# 121 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
  template<typename _CharT, typename _Traits>
    class basic_streambuf
    {
    public:






      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type::int_type int_type;
      typedef typename traits_type::pos_type pos_type;
      typedef typename traits_type::off_type off_type;
# 144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      typedef basic_streambuf<char_type, traits_type> __streambuf_type;


      friend class basic_ios<char_type, traits_type>;
      friend class basic_istream<char_type, traits_type>;
      friend class basic_ostream<char_type, traits_type>;
      friend class istreambuf_iterator<char_type, traits_type>;
      friend class ostreambuf_iterator<char_type, traits_type>;

      friend streamsize
      __copy_streambufs<>(__streambuf_type* __sbin,
     __streambuf_type* __sbout);

      template<typename _CharT2, typename _Traits2, typename _Alloc>
        friend basic_istream<_CharT2, _Traits2>&
        getline(basic_istream<_CharT2, _Traits2>&,
  basic_string<_CharT2, _Traits2, _Alloc>&, _CharT2);

    protected:
# 173 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      char_type* _M_in_beg;
      char_type* _M_in_cur;
      char_type* _M_in_end;
      char_type* _M_out_beg;
      char_type* _M_out_cur;
      char_type* _M_out_end;






      locale _M_buf_locale;

  public:

      virtual
      ~basic_streambuf()
      { }
# 201 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      locale
      pubimbue(const locale &__loc)
      {
 locale __tmp(this->getloc());
 this->imbue(__loc);
 _M_buf_locale = __loc;
 return __tmp;
      }
# 218 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      locale
      getloc() const
      { return _M_buf_locale; }
# 231 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      __streambuf_type*
      pubsetbuf(char_type* __s, streamsize __n)
      { return this->setbuf(__s, __n); }

      pos_type
      pubseekoff(off_type __off, ios_base::seekdir __way,
   ios_base::openmode __mode = ios_base::in | ios_base::out)
      { return this->seekoff(__off, __way, __mode); }

      pos_type
      pubseekpos(pos_type __sp,
   ios_base::openmode __mode = ios_base::in | ios_base::out)
      { return this->seekpos(__sp, __mode); }

      int
      pubsync() { return this->sync(); }
# 258 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      streamsize
      in_avail()
      {
 const streamsize __ret = this->egptr() - this->gptr();
 return __ret ? __ret : this->showmanyc();
      }
# 272 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      int_type
      snextc()
      {
 int_type __ret = traits_type::eof();
 if (__builtin_expect(!traits_type::eq_int_type(this->sbumpc(),
             __ret), true))
   __ret = this->sgetc();
 return __ret;
      }
# 290 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      int_type
      sbumpc()
      {
 int_type __ret;
 if (__builtin_expect(this->gptr() < this->egptr(), true))
   {
     __ret = traits_type::to_int_type(*this->gptr());
     this->gbump(1);
   }
 else
   __ret = this->uflow();
 return __ret;
      }
# 312 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      int_type
      sgetc()
      {
 int_type __ret;
 if (__builtin_expect(this->gptr() < this->egptr(), true))
   __ret = traits_type::to_int_type(*this->gptr());
 else
   __ret = this->underflow();
 return __ret;
      }
# 331 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      streamsize
      sgetn(char_type* __s, streamsize __n)
      { return this->xsgetn(__s, __n); }
# 345 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      int_type
      sputbackc(char_type __c)
      {
 int_type __ret;
 const bool __testpos = this->eback() < this->gptr();
 if (__builtin_expect(!__testpos ||
        !traits_type::eq(__c, this->gptr()[-1]), false))
   __ret = this->pbackfail(traits_type::to_int_type(__c));
 else
   {
     this->gbump(-1);
     __ret = traits_type::to_int_type(*this->gptr());
   }
 return __ret;
      }
# 370 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      int_type
      sungetc()
      {
 int_type __ret;
 if (__builtin_expect(this->eback() < this->gptr(), true))
   {
     this->gbump(-1);
     __ret = traits_type::to_int_type(*this->gptr());
   }
 else
   __ret = this->pbackfail();
 return __ret;
      }
# 397 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      int_type
      sputc(char_type __c)
      {
 int_type __ret;
 if (__builtin_expect(this->pptr() < this->epptr(), true))
   {
     *this->pptr() = __c;
     this->pbump(1);
     __ret = traits_type::to_int_type(__c);
   }
 else
   __ret = this->overflow(traits_type::to_int_type(__c));
 return __ret;
      }
# 423 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      streamsize
      sputn(const char_type* __s, streamsize __n)
      { return this->xsputn(__s, __n); }

    protected:
# 437 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      basic_streambuf()
      : _M_in_beg(0), _M_in_cur(0), _M_in_end(0),
      _M_out_beg(0), _M_out_cur(0), _M_out_end(0),
      _M_buf_locale(locale())
      { }
# 455 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      char_type*
      eback() const { return _M_in_beg; }

      char_type*
      gptr() const { return _M_in_cur; }

      char_type*
      egptr() const { return _M_in_end; }
# 471 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      void
      gbump(int __n) { _M_in_cur += __n; }
# 482 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      void
      setg(char_type* __gbeg, char_type* __gnext, char_type* __gend)
      {
 _M_in_beg = __gbeg;
 _M_in_cur = __gnext;
 _M_in_end = __gend;
      }
# 502 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      char_type*
      pbase() const { return _M_out_beg; }

      char_type*
      pptr() const { return _M_out_cur; }

      char_type*
      epptr() const { return _M_out_end; }
# 518 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      void
      pbump(int __n) { _M_out_cur += __n; }
# 528 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      void
      setp(char_type* __pbeg, char_type* __pend)
      {
 _M_out_beg = _M_out_cur = __pbeg;
 _M_out_end = __pend;
      }
# 549 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual void
      imbue(const locale&)
      { }
# 564 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual basic_streambuf<char_type,_Traits>*
      setbuf(char_type*, streamsize)
      { return this; }
# 575 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual pos_type
      seekoff(off_type, ios_base::seekdir,
       ios_base::openmode = ios_base::in | ios_base::out)
      { return pos_type(off_type(-1)); }
# 587 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual pos_type
      seekpos(pos_type,
       ios_base::openmode = ios_base::in | ios_base::out)
      { return pos_type(off_type(-1)); }
# 600 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual int
      sync() { return 0; }
# 622 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual streamsize
      showmanyc() { return 0; }
# 638 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual streamsize
      xsgetn(char_type* __s, streamsize __n);
# 660 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual int_type
      underflow()
      { return traits_type::eof(); }
# 673 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual int_type
      uflow()
      {
 int_type __ret = traits_type::eof();
 const bool __testeof = traits_type::eq_int_type(this->underflow(),
       __ret);
 if (!__testeof)
   {
     __ret = traits_type::to_int_type(*this->gptr());
     this->gbump(1);
   }
 return __ret;
      }
# 697 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual int_type
      pbackfail(int_type = traits_type::eof())
      { return traits_type::eof(); }
# 715 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual streamsize
      xsputn(const char_type* __s, streamsize __n);
# 740 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
      virtual int_type
      overflow(int_type = traits_type::eof())
      { return traits_type::eof(); }
# 769 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 3
    private:


      basic_streambuf(const __streambuf_type& __sb)
      : _M_in_beg(__sb._M_in_beg), _M_in_cur(__sb._M_in_cur),
      _M_in_end(__sb._M_in_end), _M_out_beg(__sb._M_out_beg),
      _M_out_cur(__sb._M_out_cur), _M_out_end(__sb._M_out_cur),
      _M_buf_locale(__sb._M_buf_locale)
      { }

      __streambuf_type&
      operator=(const __streambuf_type&) { return *this; };
    };


  template<>
    streamsize
    __copy_streambufs(basic_streambuf<char>* __sbin,
        basic_streambuf<char>* __sbout);






}


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf.tcc" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf.tcc" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf.tcc" 3

namespace std
{
  template<typename _CharT, typename _Traits>
    streamsize
    basic_streambuf<_CharT, _Traits>::
    xsgetn(char_type* __s, streamsize __n)
    {
      streamsize __ret = 0;
      while (__ret < __n)
 {
   const size_t __buf_len = this->egptr() - this->gptr();
   if (__buf_len)
     {
       const size_t __remaining = __n - __ret;
       const size_t __len = std::min(__buf_len, __remaining);
       traits_type::copy(__s, this->gptr(), __len);
       __ret += __len;
       __s += __len;
       this->gbump(__len);
     }

   if (__ret < __n)
     {
       const int_type __c = this->uflow();
       if (!traits_type::eq_int_type(__c, traits_type::eof()))
  {
    traits_type::assign(*__s++, traits_type::to_char_type(__c));
    ++__ret;
  }
       else
  break;
     }
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    streamsize
    basic_streambuf<_CharT, _Traits>::
    xsputn(const char_type* __s, streamsize __n)
    {
      streamsize __ret = 0;
      while (__ret < __n)
 {
   const size_t __buf_len = this->epptr() - this->pptr();
   if (__buf_len)
     {
       const size_t __remaining = __n - __ret;
       const size_t __len = std::min(__buf_len, __remaining);
       traits_type::copy(this->pptr(), __s, __len);
       __ret += __len;
       __s += __len;
       this->pbump(__len);
     }

   if (__ret < __n)
     {
       int_type __c = this->overflow(traits_type::to_int_type(*__s));
       if (!traits_type::eq_int_type(__c, traits_type::eof()))
  {
    ++__ret;
    ++__s;
  }
       else
  break;
     }
 }
      return __ret;
    }




  template<typename _CharT, typename _Traits>
    streamsize
    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,
        basic_streambuf<_CharT, _Traits>* __sbout)
    {
      streamsize __ret = 0;
      typename _Traits::int_type __c = __sbin->sgetc();
      while (!_Traits::eq_int_type(__c, _Traits::eof()))
 {
   __c = __sbout->sputc(_Traits::to_char_type(__c));
   if (_Traits::eq_int_type(__c, _Traits::eof()))
     break;
   ++__ret;
   __c = __sbin->snextc();
 }
      return __ret;
    }





  extern template class basic_streambuf<char>;
  extern template
    streamsize
    __copy_streambufs(basic_streambuf<char>*, basic_streambuf<char>*);
# 152 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf.tcc" 3
}
# 798 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/streambuf" 2 3
# 50 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 1 3
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
       
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf_iterator.h" 1 3
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf_iterator.h" 3
       
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/streambuf_iterator.h" 3






namespace std
{


  template<typename _CharT, typename _Traits>
    class istreambuf_iterator
    : public iterator<input_iterator_tag, _CharT, typename _Traits::off_type,
        _CharT*, _CharT&>
    {
    public:



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename _Traits::int_type int_type;
      typedef basic_streambuf<_CharT, _Traits> streambuf_type;
      typedef basic_istream<_CharT, _Traits> istream_type;


    private:







      mutable streambuf_type* _M_sbuf;
      mutable int_type _M_c;

    public:

      istreambuf_iterator() throw()
      : _M_sbuf(0), _M_c(traits_type::eof()) { }


      istreambuf_iterator(istream_type& __s) throw()
      : _M_sbuf(__s.rdbuf()), _M_c(traits_type::eof()) { }


      istreambuf_iterator(streambuf_type* __s) throw()
      : _M_sbuf(__s), _M_c(traits_type::eof()) { }




      char_type
      operator*() const
      {







 return traits_type::to_char_type(_M_get());
      }


      istreambuf_iterator&
      operator++()
      {
 ;


 if (_M_sbuf)
   {
     _M_sbuf->sbumpc();
     _M_c = traits_type::eof();
   }
 return *this;
      }


      istreambuf_iterator
      operator++(int)
      {
 ;



 istreambuf_iterator __old = *this;
 if (_M_sbuf)
   {
     __old._M_c = _M_sbuf->sbumpc();
     _M_c = traits_type::eof();
   }
 return __old;
      }





      bool
      equal(const istreambuf_iterator& __b) const
      {
 const bool __thiseof = _M_at_eof();
 const bool __beof = __b._M_at_eof();
 return (__thiseof && __beof || (!__thiseof && !__beof));
      }

    private:
      int_type
      _M_get() const
      {
 const int_type __eof = traits_type::eof();
 int_type __ret = __eof;
 if (_M_sbuf)
   {
     if (!traits_type::eq_int_type(_M_c, __eof))
       __ret = _M_c;
     else if (!traits_type::eq_int_type((__ret = _M_sbuf->sgetc()),
            __eof))
       _M_c = __ret;
     else
       _M_sbuf = 0;
   }
 return __ret;
      }

      bool
      _M_at_eof() const
      {
 const int_type __eof = traits_type::eof();
 return traits_type::eq_int_type(_M_get(), __eof);
      }
    };

  template<typename _CharT, typename _Traits>
    inline bool
    operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
        const istreambuf_iterator<_CharT, _Traits>& __b)
    { return __a.equal(__b); }

  template<typename _CharT, typename _Traits>
    inline bool
    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
        const istreambuf_iterator<_CharT, _Traits>& __b)
    { return !__a.equal(__b); }


  template<typename _CharT, typename _Traits>
    class ostreambuf_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    public:



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_streambuf<_CharT, _Traits> streambuf_type;
      typedef basic_ostream<_CharT, _Traits> ostream_type;


    private:
      streambuf_type* _M_sbuf;
      bool _M_failed;

    public:

      ostreambuf_iterator(ostream_type& __s) throw ()
      : _M_sbuf(__s.rdbuf()), _M_failed(!_M_sbuf) { }


      ostreambuf_iterator(streambuf_type* __s) throw ()
      : _M_sbuf(__s), _M_failed(!_M_sbuf) { }


      ostreambuf_iterator&
      operator=(_CharT __c)
      {
 if (!_M_failed &&
     _Traits::eq_int_type(_M_sbuf->sputc(__c), _Traits::eof()))
   _M_failed = true;
 return *this;
      }


      ostreambuf_iterator&
      operator*()
      { return *this; }


      ostreambuf_iterator&
      operator++(int)
      { return *this; }


      ostreambuf_iterator&
      operator++()
      { return *this; }


      bool
      failed() const throw()
      { return _M_failed; }

      ostreambuf_iterator&
      _M_put(const _CharT* __ws, streamsize __len)
      {
 if (__builtin_expect(!_M_failed, true)
     && __builtin_expect(this->_M_sbuf->sputn(__ws, __len) != __len,
    false))
   _M_failed = true;
 return *this;
      }
    };
}
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 2 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwctype" 1 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwctype" 3
       
# 48 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwctype" 3




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 1 3 4
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/include/stddef.h" 1 3 4
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 2 3 4
# 49 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4



# 68 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4




typedef unsigned int wctype_t;





enum
{
  __ISwupper = 0,
  __ISwlower = 1,
  __ISwalpha = 2,
  __ISwdigit = 3,
  __ISwxdigit = 4,
  __ISwspace = 5,
  __ISwprint = 6,
  __ISwgraph = 7,
  __ISwblank = 8,
  __ISwcntrl = 9,
  __ISwpunct = 10,
  __ISwalnum = 11,

  _ISwupper = (1 << (__ISwupper)),
  _ISwlower = (1 << (__ISwlower)),
  _ISwalpha = (1 << (__ISwalpha)),
  _ISwdigit = (1 << (__ISwdigit)),
  _ISwxdigit = (1 << (__ISwxdigit)),
  _ISwspace = (1 << (__ISwspace)),
  _ISwprint = (1 << (__ISwprint)),
  _ISwgraph = (1 << (__ISwgraph)),
  _ISwblank = (1 << (__ISwblank)),
  _ISwcntrl = (1 << (__ISwcntrl)),
  _ISwpunct = (1 << (__ISwpunct)),
  _ISwalnum = (1 << (__ISwalnum))
};
# 114 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4
extern "C" {








extern int iswalnum (wint_t __wc) throw ();





extern int iswalpha (wint_t __wc) throw ();


extern int iswcntrl (wint_t __wc) throw ();



extern int iswdigit (wint_t __wc) throw ();



extern int iswgraph (wint_t __wc) throw ();




extern int iswlower (wint_t __wc) throw ();


extern int iswprint (wint_t __wc) throw ();




extern int iswpunct (wint_t __wc) throw ();




extern int iswspace (wint_t __wc) throw ();




extern int iswupper (wint_t __wc) throw ();




extern int iswxdigit (wint_t __wc) throw ();





extern int iswblank (wint_t __wc) throw ();
# 183 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4
extern wctype_t wctype (__const char *__property) throw ();



extern int iswctype (wint_t __wc, wctype_t __desc) throw ();











typedef unsigned int wctrans_t;







extern wint_t towlower (wint_t __wc) throw ();


extern wint_t towupper (wint_t __wc) throw ();


}
# 226 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4
extern "C" {




extern wctrans_t wctrans (__const char *__property) throw ();


extern wint_t towctrans (wint_t __wc, wctrans_t __desc) throw ();

# 344 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/wctype.h" 3 4
}
# 53 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/cwctype" 2 3
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 2 3




namespace std
{
# 63 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _Tv>
    void
    __convert_to_v(const char* __in, _Tv& __out, ios_base::iostate& __err,
     const __c_locale& __cloc);


  template<>
    void
    __convert_to_v(const char*, float&, ios_base::iostate&,
     const __c_locale&);

  template<>
    void
    __convert_to_v(const char*, double&, ios_base::iostate&,
     const __c_locale&);

  template<>
    void
    __convert_to_v(const char*, long double&, ios_base::iostate&,
     const __c_locale&);



  template<typename _CharT, typename _Traits>
    struct __pad
    {
      static void
      _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
      const _CharT* __olds, const streamsize __newlen,
      const streamsize __oldlen, const bool __num);
    };






  template<typename _CharT>
    _CharT*
    __add_grouping(_CharT* __s, _CharT __sep,
     const char* __gbeg, size_t __gsize,
     const _CharT* __first, const _CharT* __last);




  template<typename _CharT>
    inline
    ostreambuf_iterator<_CharT>
    __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
    {
      __s._M_put(__ws, __len);
      return __s;
    }


  template<typename _CharT, typename _OutIter>
    inline
    _OutIter
    __write(_OutIter __s, const _CharT* __ws, int __len)
    {
      for (int __j = 0; __j < __len; __j++, ++__s)
 *__s = __ws[__j];
      return __s;
    }




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/ctype_base.h" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/ctype_base.h" 3
  struct ctype_base
  {



    typedef const __ctype_touplow_t* __to_type;



    typedef __ctype_mask_t mask;
    static const mask upper = _ISupper;
    static const mask lower = _ISlower;
    static const mask alpha = _ISalpha;
    static const mask digit = _ISdigit;
    static const mask xdigit = _ISxdigit;
    static const mask space = _ISspace;
    static const mask print = _ISprint;
    static const mask graph = _ISalpha | _ISdigit | _ISpunct;
    static const mask cntrl = _IScntrl;
    static const mask punct = _ISpunct;
    static const mask alnum = _ISalpha | _ISdigit;
  };
# 133 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 2 3
# 144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class __ctype_abstract_base : public locale::facet, public ctype_base
    {
    public:


      typedef _CharT char_type;
# 162 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      bool
      is(mask __m, char_type __c) const
      { return this->do_is(__m, __c); }
# 179 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      is(const char_type *__lo, const char_type *__hi, mask *__vec) const
      { return this->do_is(__lo, __hi, __vec); }
# 195 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
      { return this->do_scan_is(__m, __lo, __hi); }
# 211 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
      { return this->do_scan_not(__m, __lo, __hi); }
# 225 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      toupper(char_type __c) const
      { return this->do_toupper(__c); }
# 240 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      toupper(char_type *__lo, const char_type* __hi) const
      { return this->do_toupper(__lo, __hi); }
# 254 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      tolower(char_type __c) const
      { return this->do_tolower(__c); }
# 269 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      tolower(char_type* __lo, const char_type* __hi) const
      { return this->do_tolower(__lo, __hi); }
# 286 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      widen(char __c) const
      { return this->do_widen(__c); }
# 305 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char*
      widen(const char* __lo, const char* __hi, char_type* __to) const
      { return this->do_widen(__lo, __hi, __to); }
# 324 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char
      narrow(char_type __c, char __dfault) const
      { return this->do_narrow(__c, __dfault); }
# 346 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      narrow(const char_type* __lo, const char_type* __hi,
       char __dfault, char *__to) const
      { return this->do_narrow(__lo, __hi, __dfault, __to); }

    protected:
      explicit
      __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }

      virtual
      ~__ctype_abstract_base() { }
# 371 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual bool
      do_is(mask __m, char_type __c) const = 0;
# 390 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_is(const char_type* __lo, const char_type* __hi,
     mask* __vec) const = 0;
# 409 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_scan_is(mask __m, const char_type* __lo,
   const char_type* __hi) const = 0;
# 428 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_scan_not(mask __m, const char_type* __lo,
    const char_type* __hi) const = 0;
# 446 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_toupper(char_type) const = 0;
# 463 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const = 0;
# 479 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_tolower(char_type) const = 0;
# 496 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const = 0;
# 515 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_widen(char) const = 0;
# 536 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char*
      do_widen(const char* __lo, const char* __hi,
        char_type* __dest) const = 0;
# 558 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char
      do_narrow(char_type, char __dfault) const = 0;
# 582 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char __dfault, char* __dest) const = 0;
    };
# 605 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class ctype : public __ctype_abstract_base<_CharT>
    {
    public:

      typedef _CharT char_type;
      typedef typename __ctype_abstract_base<_CharT>::mask mask;


      static locale::id id;

      explicit
      ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }

   protected:
      virtual
      ~ctype();

      virtual bool
      do_is(mask __m, char_type __c) const;

      virtual const char_type*
      do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;

      virtual const char_type*
      do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;

      virtual const char_type*
      do_scan_not(mask __m, const char_type* __lo,
    const char_type* __hi) const;

      virtual char_type
      do_toupper(char_type __c) const;

      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const;

      virtual char_type
      do_tolower(char_type __c) const;

      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const;

      virtual char_type
      do_widen(char __c) const;

      virtual const char*
      do_widen(const char* __lo, const char* __hi, char_type* __dest) const;

      virtual char
      do_narrow(char_type, char __dfault) const;

      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char __dfault, char* __dest) const;
    };

  template<typename _CharT>
    locale::id ctype<_CharT>::id;
# 674 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<>
    class ctype<char> : public locale::facet, public ctype_base
    {
    public:


      typedef char char_type;

    protected:

      __c_locale _M_c_locale_ctype;
      bool _M_del;
      __to_type _M_toupper;
      __to_type _M_tolower;
      const mask* _M_table;
      mutable char _M_widen_ok;
      mutable char _M_widen[1 + static_cast<unsigned char>(-1)];
      mutable char _M_narrow[1 + static_cast<unsigned char>(-1)];
      mutable char _M_narrow_ok;


    public:

      static locale::id id;

      static const size_t table_size = 1 + static_cast<unsigned char>(-1);
# 711 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
# 724 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
     size_t __refs = 0);
# 737 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      inline bool
      is(mask __m, char __c) const;
# 752 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      inline const char*
      is(const char* __lo, const char* __hi, mask* __vec) const;
# 766 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      inline const char*
      scan_is(mask __m, const char* __lo, const char* __hi) const;
# 780 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      inline const char*
      scan_not(mask __m, const char* __lo, const char* __hi) const;
# 795 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      toupper(char_type __c) const
      { return this->do_toupper(__c); }
# 812 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      toupper(char_type *__lo, const char_type* __hi) const
      { return this->do_toupper(__lo, __hi); }
# 828 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      tolower(char_type __c) const
      { return this->do_tolower(__c); }
# 845 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      tolower(char_type* __lo, const char_type* __hi) const
      { return this->do_tolower(__lo, __hi); }
# 865 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      widen(char __c) const
      {
 if (_M_widen_ok)
   return _M_widen[static_cast<unsigned char>(__c)];
 this->_M_widen_init();
 return this->do_widen(__c);
      }
# 892 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char*
      widen(const char* __lo, const char* __hi, char_type* __to) const
      {
 if (_M_widen_ok == 1)
   {
     memcpy(__to, __lo, __hi - __lo);
     return __hi;
   }
 if (!_M_widen_ok)
   _M_widen_init();
 return this->do_widen(__lo, __hi, __to);
      }
# 923 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char
      narrow(char_type __c, char __dfault) const
      {
 if (_M_narrow[static_cast<unsigned char>(__c)])
   return _M_narrow[static_cast<unsigned char>(__c)];
 const char __t = do_narrow(__c, __dfault);
 if (__t != __dfault)
   _M_narrow[static_cast<unsigned char>(__c)] = __t;
 return __t;
      }
# 956 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      const char_type*
      narrow(const char_type* __lo, const char_type* __hi,
      char __dfault, char *__to) const
      {
 if (__builtin_expect(_M_narrow_ok == 1, true))
   {
     memcpy(__to, __lo, __hi - __lo);
     return __hi;
   }
 if (!_M_narrow_ok)
   _M_narrow_init();
 return this->do_narrow(__lo, __hi, __dfault, __to);
      }

    protected:


      const mask*
      table() const throw()
      { return _M_table; }


      static const mask*
      classic_table() throw();







      virtual
      ~ctype();
# 1003 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_toupper(char_type) const;
# 1020 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const;
# 1036 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_tolower(char_type) const;
# 1053 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const;
# 1073 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_widen(char __c) const
      { return __c; }
# 1096 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char*
      do_widen(const char* __lo, const char* __hi, char_type* __dest) const
      {
 memcpy(__dest, __lo, __hi - __lo);
 return __hi;
      }
# 1122 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char
      do_narrow(char_type __c, char) const
      { return __c; }
# 1148 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char, char* __dest) const
      {
 memcpy(__dest, __lo, __hi - __lo);
 return __hi;
      }

    private:

      void _M_widen_init() const
      {
 char __tmp[sizeof(_M_widen)];
 for (size_t __i = 0; __i < sizeof(_M_widen); ++__i)
   __tmp[__i] = __i;
 do_widen(__tmp, __tmp + sizeof(__tmp), _M_widen);

 _M_widen_ok = 1;

 if (memcmp(__tmp, _M_widen, sizeof(_M_widen)))
   _M_widen_ok = 2;
      }




      void _M_narrow_init() const
      {
 char __tmp[sizeof(_M_narrow)];
 for (size_t __i = 0; __i < sizeof(_M_narrow); ++__i)
   __tmp[__i] = __i;
 do_narrow(__tmp, __tmp + sizeof(__tmp), 0, _M_narrow);

 _M_narrow_ok = 1;
 if (memcmp(__tmp, _M_narrow, sizeof(_M_narrow)))
   _M_narrow_ok = 2;
 else
   {


     char __c;
     do_narrow(__tmp, __tmp + 1, 1, &__c);
     if (__c == 1)
       _M_narrow_ok = 2;
   }
      }
    };

  template<>
    const ctype<char>&
    use_facet<ctype<char> >(const locale& __loc);
# 1508 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/ctype_inline.h" 1 3
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/ctype_inline.h" 3
  bool
  ctype<char>::
  is(mask __m, char __c) const
  { return _M_table[static_cast<unsigned char>(__c)] & __m; }

  const char*
  ctype<char>::
  is(const char* __low, const char* __high, mask* __vec) const
  {
    while (__low < __high)
      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];
    return __high;
  }

  const char*
  ctype<char>::
  scan_is(mask __m, const char* __low, const char* __high) const
  {
    while (__low < __high
    && !(_M_table[static_cast<unsigned char>(*__low)] & __m))
      ++__low;
    return __low;
  }

  const char*
  ctype<char>::
  scan_not(mask __m, const char* __low, const char* __high) const
  {
    while (__low < __high
    && (_M_table[static_cast<unsigned char>(*__low)] & __m) != 0)
      ++__low;
    return __low;
  }
# 1509 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 2 3


  template<typename _CharT>
    class ctype_byname : public ctype<_CharT>
    {
    public:
      typedef _CharT char_type;

      explicit
      ctype_byname(const char* __s, size_t __refs = 0);

    protected:
      virtual
      ~ctype_byname() { };
    };


  template<>
    ctype_byname<char>::ctype_byname(const char*, size_t refs);

  template<>
    ctype_byname<wchar_t>::ctype_byname(const char*, size_t refs);


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 1 3
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
       
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3


  class codecvt_base
  {
  public:
    enum result
    {
      ok,
      partial,
      error,
      noconv
    };
  };
# 69 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
  template<typename _InternT, typename _ExternT, typename _StateT>
    class __codecvt_abstract_base
    : public locale::facet, public codecvt_base
    {
    public:

      typedef codecvt_base::result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;
# 117 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
      result
      out(state_type& __state, const intern_type* __from,
   const intern_type* __from_end, const intern_type*& __from_next,
   extern_type* __to, extern_type* __to_end,
   extern_type*& __to_next) const
      {
 return this->do_out(__state, __from, __from_end, __from_next,
       __to, __to_end, __to_next);
      }
# 156 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
      result
      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,
       extern_type*& __to_next) const
      { return this->do_unshift(__state, __to,__to_end,__to_next); }
# 197 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
      result
      in(state_type& __state, const extern_type* __from,
  const extern_type* __from_end, const extern_type*& __from_next,
  intern_type* __to, intern_type* __to_end,
  intern_type*& __to_next) const
      {
 return this->do_in(__state, __from, __from_end, __from_next,
      __to, __to_end, __to_next);
      }

      int
      encoding() const throw()
      { return this->do_encoding(); }

      bool
      always_noconv() const throw()
      { return this->do_always_noconv(); }

      int
      length(state_type& __state, const extern_type* __from,
      const extern_type* __end, size_t __max) const
      { return this->do_length(__state, __from, __end, __max); }

      int
      max_length() const throw()
      { return this->do_max_length(); }

    protected:
      explicit
      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }

      virtual
      ~__codecvt_abstract_base() { }
# 238 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const = 0;

      virtual result
      do_unshift(state_type& __state, extern_type* __to,
   extern_type* __to_end, extern_type*& __to_next) const = 0;

      virtual result
      do_in(state_type& __state, const extern_type* __from,
     const extern_type* __from_end, const extern_type*& __from_next,
     intern_type* __to, intern_type* __to_end,
     intern_type*& __to_next) const = 0;

      virtual int
      do_encoding() const throw() = 0;

      virtual bool
      do_always_noconv() const throw() = 0;

      virtual int
      do_length(state_type&, const extern_type* __from,
  const extern_type* __end, size_t __max) const = 0;

      virtual int
      do_max_length() const throw() = 0;
    };



  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt
    : public __codecvt_abstract_base<_InternT, _ExternT, _StateT>
    {
    public:

      typedef codecvt_base::result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

    protected:
      __c_locale _M_c_locale_codecvt;

    public:
      static locale::id id;

      explicit
      codecvt(size_t __refs = 0)
      : __codecvt_abstract_base<_InternT, _ExternT, _StateT> (__refs) { }

      explicit
      codecvt(__c_locale __cloc, size_t __refs = 0);

    protected:
      virtual
      ~codecvt() { }

      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const;

      virtual result
      do_unshift(state_type& __state, extern_type* __to,
   extern_type* __to_end, extern_type*& __to_next) const;

      virtual result
      do_in(state_type& __state, const extern_type* __from,
     const extern_type* __from_end, const extern_type*& __from_next,
     intern_type* __to, intern_type* __to_end,
     intern_type*& __to_next) const;

      virtual int
      do_encoding() const throw();

      virtual bool
      do_always_noconv() const throw();

      virtual int
      do_length(state_type&, const extern_type* __from,
  const extern_type* __end, size_t __max) const;

      virtual int
      do_max_length() const throw();
    };

  template<typename _InternT, typename _ExternT, typename _StateT>
    locale::id codecvt<_InternT, _ExternT, _StateT>::id;


  template<>
    class codecvt<char, char, mbstate_t>
    : public __codecvt_abstract_base<char, char, mbstate_t>
    {
    public:

      typedef char intern_type;
      typedef char extern_type;
      typedef mbstate_t state_type;

    protected:
      __c_locale _M_c_locale_codecvt;

    public:
      static locale::id id;

      explicit
      codecvt(size_t __refs = 0);

      explicit
      codecvt(__c_locale __cloc, size_t __refs = 0);

    protected:
      virtual
      ~codecvt();

      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const;

      virtual result
      do_unshift(state_type& __state, extern_type* __to,
   extern_type* __to_end, extern_type*& __to_next) const;

      virtual result
      do_in(state_type& __state, const extern_type* __from,
     const extern_type* __from_end, const extern_type*& __from_next,
     intern_type* __to, intern_type* __to_end,
     intern_type*& __to_next) const;

      virtual int
      do_encoding() const throw();

      virtual bool
      do_always_noconv() const throw();

      virtual int
      do_length(state_type&, const extern_type* __from,
  const extern_type* __end, size_t __max) const;

      virtual int
      do_max_length() const throw();
  };
# 450 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/codecvt.h" 3
  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>
    {
    public:
      explicit
      codecvt_byname(const char* __s, size_t __refs = 0)
      : codecvt<_InternT, _ExternT, _StateT>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     this->_S_destroy_c_locale(this->_M_c_locale_codecvt);
     this->_S_create_c_locale(this->_M_c_locale_codecvt, __s);
   }
      }

    protected:
      virtual
      ~codecvt_byname() { }
    };
# 1534 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 2 3


  class __num_base
  {
  public:


    enum
      {
        _S_ominus,
        _S_oplus,
        _S_ox,
        _S_oX,
        _S_odigits,
        _S_odigits_end = _S_odigits + 16,
        _S_oudigits = _S_odigits_end,
        _S_oudigits_end = _S_oudigits + 16,
        _S_oe = _S_odigits + 14,
        _S_oE = _S_oudigits + 14,
 _S_oend = _S_oudigits_end
      };






    static const char* _S_atoms_out;



    static const char* _S_atoms_in;

    enum
    {
      _S_iminus,
      _S_iplus,
      _S_ix,
      _S_iX,
      _S_izero,
      _S_ie = _S_izero + 14,
      _S_iE = _S_izero + 20,
      _S_iend = 26
    };



    static void
    _S_format_float(const ios_base& __io, char* __fptr, char __mod);
  };

  template<typename _CharT>
    struct __numpunct_cache : public locale::facet
    {
      const char* _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      const _CharT* _M_truename;
      size_t _M_truename_size;
      const _CharT* _M_falsename;
      size_t _M_falsename_size;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;





      _CharT _M_atoms_out[__num_base::_S_oend];





      _CharT _M_atoms_in[__num_base::_S_iend];

      bool _M_allocated;

      __numpunct_cache(size_t __refs = 0) : facet(__refs),
      _M_grouping(__null), _M_grouping_size(0), _M_use_grouping(false),
      _M_truename(__null), _M_truename_size(0), _M_falsename(__null),
      _M_falsename_size(0), _M_decimal_point(_CharT()),
      _M_thousands_sep(_CharT()), _M_allocated(false)
      { }

      ~__numpunct_cache();

      void
      _M_cache(const locale& __loc);

    private:
      __numpunct_cache&
      operator=(const __numpunct_cache&);

      explicit
      __numpunct_cache(const __numpunct_cache&);
    };

  template<typename _CharT>
    __numpunct_cache<_CharT>::~__numpunct_cache()
    {
      if (_M_allocated)
 {
   delete [] _M_grouping;
   delete [] _M_truename;
   delete [] _M_falsename;
 }
    }
# 1656 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class numpunct : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      typedef __numpunct_cache<_CharT> __cache_type;

    protected:
      __cache_type* _M_data;

    public:

      static locale::id id;






      explicit
      numpunct(size_t __refs = 0) : facet(__refs), _M_data(__null)
      { _M_initialize_numpunct(); }
# 1693 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      numpunct(__cache_type* __cache, size_t __refs = 0)
      : facet(__refs), _M_data(__cache)
      { _M_initialize_numpunct(); }
# 1707 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      numpunct(__c_locale __cloc, size_t __refs = 0)
      : facet(__refs), _M_data(__null)
      { _M_initialize_numpunct(__cloc); }
# 1721 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      decimal_point() const
      { return this->do_decimal_point(); }
# 1734 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      thousands_sep() const
      { return this->do_thousands_sep(); }
# 1765 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string
      grouping() const
      { return this->do_grouping(); }
# 1778 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      truename() const
      { return this->do_truename(); }
# 1791 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      falsename() const
      { return this->do_falsename(); }

    protected:

      virtual
      ~numpunct();
# 1808 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_decimal_point() const
      { return _M_data->_M_decimal_point; }
# 1820 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_thousands_sep() const
      { return _M_data->_M_thousands_sep; }
# 1833 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string
      do_grouping() const
      { return _M_data->_M_grouping; }
# 1846 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_truename() const
      { return _M_data->_M_truename; }
# 1859 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_falsename() const
      { return _M_data->_M_falsename; }


      void
      _M_initialize_numpunct(__c_locale __cloc = __null);
    };

  template<typename _CharT>
    locale::id numpunct<_CharT>::id;

  template<>
    numpunct<char>::~numpunct();

  template<>
    void
    numpunct<char>::_M_initialize_numpunct(__c_locale __cloc);
# 1888 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class numpunct_byname : public numpunct<_CharT>
    {
    public:
      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      explicit
      numpunct_byname(const char* __s, size_t __refs = 0)
      : numpunct<_CharT>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     __c_locale __tmp;
     this->_S_create_c_locale(__tmp, __s);
     this->_M_initialize_numpunct(__tmp);
     this->_S_destroy_c_locale(__tmp);
   }
      }

    protected:
      virtual
      ~numpunct_byname() { }
    };
# 1925 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, typename _InIter>
    class num_get : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _InIter iter_type;



      static locale::id id;
# 1946 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      num_get(size_t __refs = 0) : facet(__refs) { }
# 1972 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, bool& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }
# 2008 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned short& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned int& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }


      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, long long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned long long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }
# 2067 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, float& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, double& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, long double& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }
# 2109 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, void*& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

    protected:

      virtual ~num_get() { }

      iter_type
      _M_extract_float(iter_type, iter_type, ios_base&, ios_base::iostate&,
         string& __xtrc) const;

      template<typename _ValueT>
        iter_type
        _M_extract_int(iter_type, iter_type, ios_base&, ios_base::iostate&,
         _ValueT& __v) const;
# 2142 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, bool&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, long&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
       unsigned short&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      unsigned int&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      unsigned long&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      long long&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      unsigned long long&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      float&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      double&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      long double&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      void*&) const;

    };

  template<typename _CharT, typename _InIter>
    locale::id num_get<_CharT, _InIter>::id;
# 2204 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, typename _OutIter>
    class num_put : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale::id id;
# 2225 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      num_put(size_t __refs = 0) : facet(__refs) { }
# 2243 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, bool __v) const
      { return this->do_put(__s, __f, __fill, __v); }
# 2285 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, long __v) const
      { return this->do_put(__s, __f, __fill, __v); }

      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   unsigned long __v) const
      { return this->do_put(__s, __f, __fill, __v); }


      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, long long __v) const
      { return this->do_put(__s, __f, __fill, __v); }

      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   unsigned long long __v) const
      { return this->do_put(__s, __f, __fill, __v); }
# 2348 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, double __v) const
      { return this->do_put(__s, __f, __fill, __v); }

      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   long double __v) const
      { return this->do_put(__s, __f, __fill, __v); }
# 2373 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   const void* __v) const
      { return this->do_put(__s, __f, __fill, __v); }

    protected:
      template<typename _ValueT>
        iter_type
        _M_insert_float(iter_type, ios_base& __io, char_type __fill,
   char __mod, _ValueT __v) const;

      void
      _M_group_float(const char* __grouping, size_t __grouping_size,
       char_type __sep, const char_type* __p, char_type* __new,
       char_type* __cs, int& __len) const;

      template<typename _ValueT>
        iter_type
        _M_insert_int(iter_type, ios_base& __io, char_type __fill,
        _ValueT __v) const;

      void
      _M_group_int(const char* __grouping, size_t __grouping_size,
     char_type __sep, ios_base& __io, char_type* __new,
     char_type* __cs, int& __len) const;

      void
      _M_pad(char_type __fill, streamsize __w, ios_base& __io,
      char_type* __new, const char_type* __cs, int& __len) const;


      virtual
      ~num_put() { };
# 2421 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, bool __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, long __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, unsigned long) const;


      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, long long __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, unsigned long long) const;


      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, double __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, long double __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, const void* __v) const;

    };

  template <typename _CharT, typename _OutIter>
    locale::id num_put<_CharT, _OutIter>::id;
# 2465 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class collate : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;


    protected:


      __c_locale _M_c_locale_collate;

    public:

      static locale::id id;
# 2492 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      collate(size_t __refs = 0)
      : facet(__refs), _M_c_locale_collate(_S_get_c_locale())
      { }
# 2506 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      collate(__c_locale __cloc, size_t __refs = 0)
      : facet(__refs), _M_c_locale_collate(_S_clone_c_locale(__cloc))
      { }
# 2523 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      int
      compare(const _CharT* __lo1, const _CharT* __hi1,
       const _CharT* __lo2, const _CharT* __hi2) const
      { return this->do_compare(__lo1, __hi1, __lo2, __hi2); }
# 2542 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      transform(const _CharT* __lo, const _CharT* __hi) const
      { return this->do_transform(__lo, __hi); }
# 2556 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      long
      hash(const _CharT* __lo, const _CharT* __hi) const
      { return this->do_hash(__lo, __hi); }


      int
      _M_compare(const _CharT*, const _CharT*) const;

      size_t
      _M_transform(_CharT*, const _CharT*, size_t) const;

  protected:

      virtual
      ~collate()
      { _S_destroy_c_locale(_M_c_locale_collate); }
# 2585 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual int
      do_compare(const _CharT* __lo1, const _CharT* __hi1,
   const _CharT* __lo2, const _CharT* __hi2) const;
# 2601 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_transform(const _CharT* __lo, const _CharT* __hi) const;
# 2614 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual long
      do_hash(const _CharT* __lo, const _CharT* __hi) const;
    };

  template<typename _CharT>
    locale::id collate<_CharT>::id;


  template<>
    int
    collate<char>::_M_compare(const char*, const char*) const;

  template<>
    size_t
    collate<char>::_M_transform(char*, const char*, size_t) const;
# 2641 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class collate_byname : public collate<_CharT>
    {
    public:


      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;


      explicit
      collate_byname(const char* __s, size_t __refs = 0)
      : collate<_CharT>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     this->_S_destroy_c_locale(this->_M_c_locale_collate);
     this->_S_create_c_locale(this->_M_c_locale_collate, __s);
   }
      }

    protected:
      virtual
      ~collate_byname() { }
    };
# 2674 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  class time_base
  {
  public:
    enum dateorder { no_order, dmy, mdy, ymd, ydm };
  };

  template<typename _CharT>
    struct __timepunct_cache : public locale::facet
    {

      static const _CharT* _S_timezones[14];

      const _CharT* _M_date_format;
      const _CharT* _M_date_era_format;
      const _CharT* _M_time_format;
      const _CharT* _M_time_era_format;
      const _CharT* _M_date_time_format;
      const _CharT* _M_date_time_era_format;
      const _CharT* _M_am;
      const _CharT* _M_pm;
      const _CharT* _M_am_pm_format;


      const _CharT* _M_day1;
      const _CharT* _M_day2;
      const _CharT* _M_day3;
      const _CharT* _M_day4;
      const _CharT* _M_day5;
      const _CharT* _M_day6;
      const _CharT* _M_day7;


      const _CharT* _M_aday1;
      const _CharT* _M_aday2;
      const _CharT* _M_aday3;
      const _CharT* _M_aday4;
      const _CharT* _M_aday5;
      const _CharT* _M_aday6;
      const _CharT* _M_aday7;


      const _CharT* _M_month01;
      const _CharT* _M_month02;
      const _CharT* _M_month03;
      const _CharT* _M_month04;
      const _CharT* _M_month05;
      const _CharT* _M_month06;
      const _CharT* _M_month07;
      const _CharT* _M_month08;
      const _CharT* _M_month09;
      const _CharT* _M_month10;
      const _CharT* _M_month11;
      const _CharT* _M_month12;


      const _CharT* _M_amonth01;
      const _CharT* _M_amonth02;
      const _CharT* _M_amonth03;
      const _CharT* _M_amonth04;
      const _CharT* _M_amonth05;
      const _CharT* _M_amonth06;
      const _CharT* _M_amonth07;
      const _CharT* _M_amonth08;
      const _CharT* _M_amonth09;
      const _CharT* _M_amonth10;
      const _CharT* _M_amonth11;
      const _CharT* _M_amonth12;

      bool _M_allocated;

      __timepunct_cache(size_t __refs = 0) : facet(__refs),
      _M_date_format(__null), _M_date_era_format(__null), _M_time_format(__null),
      _M_time_era_format(__null), _M_date_time_format(__null),
      _M_date_time_era_format(__null), _M_am(__null), _M_pm(__null),
      _M_am_pm_format(__null), _M_day1(__null), _M_day2(__null), _M_day3(__null),
      _M_day4(__null), _M_day5(__null), _M_day6(__null), _M_day7(__null),
      _M_aday1(__null), _M_aday2(__null), _M_aday3(__null), _M_aday4(__null),
      _M_aday5(__null), _M_aday6(__null), _M_aday7(__null), _M_month01(__null),
      _M_month02(__null), _M_month03(__null), _M_month04(__null), _M_month05(__null),
      _M_month06(__null), _M_month07(__null), _M_month08(__null), _M_month09(__null),
      _M_month10(__null), _M_month11(__null), _M_month12(__null), _M_amonth01(__null),
      _M_amonth02(__null), _M_amonth03(__null), _M_amonth04(__null),
      _M_amonth05(__null), _M_amonth06(__null), _M_amonth07(__null),
      _M_amonth08(__null), _M_amonth09(__null), _M_amonth10(__null),
      _M_amonth11(__null), _M_amonth12(__null), _M_allocated(false)
      { }

      ~__timepunct_cache();

      void
      _M_cache(const locale& __loc);

    private:
      __timepunct_cache&
      operator=(const __timepunct_cache&);

      explicit
      __timepunct_cache(const __timepunct_cache&);
    };

  template<typename _CharT>
    __timepunct_cache<_CharT>::~__timepunct_cache()
    {
      if (_M_allocated)
 {

 }
    }


  template<>
    const char*
    __timepunct_cache<char>::_S_timezones[14];
# 2795 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    const _CharT* __timepunct_cache<_CharT>::_S_timezones[14];

  template<typename _CharT>
    class __timepunct : public locale::facet
    {
    public:

      typedef _CharT __char_type;
      typedef basic_string<_CharT> __string_type;
      typedef __timepunct_cache<_CharT> __cache_type;

    protected:
      __cache_type* _M_data;
      __c_locale _M_c_locale_timepunct;
      const char* _M_name_timepunct;

    public:

      static locale::id id;

      explicit
      __timepunct(size_t __refs = 0);

      explicit
      __timepunct(__cache_type* __cache, size_t __refs = 0);
# 2832 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      __timepunct(__c_locale __cloc, const char* __s, size_t __refs = 0);



      void
      _M_put(_CharT* __s, size_t __maxlen, const _CharT* __format,
      const tm* __tm) const;

      void
      _M_date_formats(const _CharT** __date) const
      {

 __date[0] = _M_data->_M_date_format;
 __date[1] = _M_data->_M_date_era_format;
      }

      void
      _M_time_formats(const _CharT** __time) const
      {

 __time[0] = _M_data->_M_time_format;
 __time[1] = _M_data->_M_time_era_format;
      }

      void
      _M_date_time_formats(const _CharT** __dt) const
      {

 __dt[0] = _M_data->_M_date_time_format;
 __dt[1] = _M_data->_M_date_time_era_format;
      }

      void
      _M_am_pm_format(const _CharT* __ampm) const
      { __ampm = _M_data->_M_am_pm_format; }

      void
      _M_am_pm(const _CharT** __ampm) const
      {
 __ampm[0] = _M_data->_M_am;
 __ampm[1] = _M_data->_M_pm;
      }

      void
      _M_days(const _CharT** __days) const
      {
 __days[0] = _M_data->_M_day1;
 __days[1] = _M_data->_M_day2;
 __days[2] = _M_data->_M_day3;
 __days[3] = _M_data->_M_day4;
 __days[4] = _M_data->_M_day5;
 __days[5] = _M_data->_M_day6;
 __days[6] = _M_data->_M_day7;
      }

      void
      _M_days_abbreviated(const _CharT** __days) const
      {
 __days[0] = _M_data->_M_aday1;
 __days[1] = _M_data->_M_aday2;
 __days[2] = _M_data->_M_aday3;
 __days[3] = _M_data->_M_aday4;
 __days[4] = _M_data->_M_aday5;
 __days[5] = _M_data->_M_aday6;
 __days[6] = _M_data->_M_aday7;
      }

      void
      _M_months(const _CharT** __months) const
      {
 __months[0] = _M_data->_M_month01;
 __months[1] = _M_data->_M_month02;
 __months[2] = _M_data->_M_month03;
 __months[3] = _M_data->_M_month04;
 __months[4] = _M_data->_M_month05;
 __months[5] = _M_data->_M_month06;
 __months[6] = _M_data->_M_month07;
 __months[7] = _M_data->_M_month08;
 __months[8] = _M_data->_M_month09;
 __months[9] = _M_data->_M_month10;
 __months[10] = _M_data->_M_month11;
 __months[11] = _M_data->_M_month12;
      }

      void
      _M_months_abbreviated(const _CharT** __months) const
      {
 __months[0] = _M_data->_M_amonth01;
 __months[1] = _M_data->_M_amonth02;
 __months[2] = _M_data->_M_amonth03;
 __months[3] = _M_data->_M_amonth04;
 __months[4] = _M_data->_M_amonth05;
 __months[5] = _M_data->_M_amonth06;
 __months[6] = _M_data->_M_amonth07;
 __months[7] = _M_data->_M_amonth08;
 __months[8] = _M_data->_M_amonth09;
 __months[9] = _M_data->_M_amonth10;
 __months[10] = _M_data->_M_amonth11;
 __months[11] = _M_data->_M_amonth12;
      }

    protected:
      virtual
      ~__timepunct();


      void
      _M_initialize_timepunct(__c_locale __cloc = __null);
    };

  template<typename _CharT>
    locale::id __timepunct<_CharT>::id;


  template<>
    void
    __timepunct<char>::_M_initialize_timepunct(__c_locale __cloc);

  template<>
    void
    __timepunct<char>::_M_put(char*, size_t, const char*, const tm*) const;
# 2967 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/time_members.h" 1 3
# 37 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/time_members.h" 3
  template<typename _CharT>
    __timepunct<_CharT>::__timepunct(size_t __refs)
    : facet(__refs), _M_data(__null), _M_c_locale_timepunct(__null),
    _M_name_timepunct(_S_get_c_name())
    { _M_initialize_timepunct(); }

  template<typename _CharT>
    __timepunct<_CharT>::__timepunct(__cache_type* __cache, size_t __refs)
    : facet(__refs), _M_data(__cache), _M_c_locale_timepunct(__null),
    _M_name_timepunct(_S_get_c_name())
    { _M_initialize_timepunct(); }

  template<typename _CharT>
    __timepunct<_CharT>::__timepunct(__c_locale __cloc, const char* __s,
         size_t __refs)
    : facet(__refs), _M_data(__null), _M_c_locale_timepunct(__null),
    _M_name_timepunct(__s)
    {
      char* __tmp = new char[std::strlen(__s) + 1];
      std::strcpy(__tmp, __s);
      _M_name_timepunct = __tmp;
      _M_initialize_timepunct(__cloc);
    }

  template<typename _CharT>
    __timepunct<_CharT>::~__timepunct()
    {
      if (_M_name_timepunct != _S_get_c_name())
 delete [] _M_name_timepunct;
      delete _M_data;
      _S_destroy_c_locale(_M_c_locale_timepunct);
    }
# 2968 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 2 3
# 2981 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, typename _InIter>
    class time_get : public locale::facet, public time_base
    {
    public:



      typedef _CharT char_type;
      typedef _InIter iter_type;

      typedef basic_string<_CharT> __string_type;


      static locale::id id;
# 3003 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      time_get(size_t __refs = 0)
      : facet (__refs) { }
# 3020 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      dateorder
      date_order() const
      { return this->do_date_order(); }
# 3044 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get_time(iter_type __beg, iter_type __end, ios_base& __io,
        ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_time(__beg, __end, __io, __err, __tm); }
# 3069 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get_date(iter_type __beg, iter_type __end, ios_base& __io,
        ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_date(__beg, __end, __io, __err, __tm); }
# 3097 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_weekday(__beg, __end, __io, __err, __tm); }
# 3126 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,
      ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_monthname(__beg, __end, __io, __err, __tm); }
# 3152 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get_year(iter_type __beg, iter_type __end, ios_base& __io,
        ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_year(__beg, __end, __io, __err, __tm); }

    protected:

      virtual
      ~time_get() { }
# 3172 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual dateorder
      do_date_order() const;
# 3190 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get_time(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const;
# 3209 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get_date(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const;
# 3228 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get_weekday(iter_type __beg, iter_type __end, ios_base&,
       ios_base::iostate& __err, tm* __tm) const;
# 3247 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get_monthname(iter_type __beg, iter_type __end, ios_base&,
         ios_base::iostate& __err, tm* __tm) const;
# 3266 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get_year(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const;


      iter_type
      _M_extract_num(iter_type __beg, iter_type __end, int& __member,
       int __min, int __max, size_t __len,
       ios_base& __io, ios_base::iostate& __err) const;



      iter_type
      _M_extract_name(iter_type __beg, iter_type __end, int& __member,
        const _CharT** __names, size_t __indexlen,
        ios_base& __io, ios_base::iostate& __err) const;


      iter_type
      _M_extract_via_format(iter_type __beg, iter_type __end, ios_base& __io,
       ios_base::iostate& __err, tm* __tm,
       const _CharT* __format) const;
    };

  template<typename _CharT, typename _InIter>
    locale::id time_get<_CharT, _InIter>::id;


  template<typename _CharT, typename _InIter>
    class time_get_byname : public time_get<_CharT, _InIter>
    {
    public:

      typedef _CharT char_type;
      typedef _InIter iter_type;

      explicit
      time_get_byname(const char*, size_t __refs = 0)
      : time_get<_CharT, _InIter>(__refs) { }

    protected:
      virtual
      ~time_get_byname() { }
    };
# 3322 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, typename _OutIter>
    class time_put : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale::id id;
# 3343 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      time_put(size_t __refs = 0)
      : facet(__refs) { }
# 3362 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,
   const _CharT* __beg, const _CharT* __end) const;
# 3382 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __io, char_type __fill,
   const tm* __tm, char __format, char __mod = 0) const
      { return this->do_put(__s, __io, __fill, __tm, __format, __mod); }

    protected:

      virtual
      ~time_put()
      { }
# 3409 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,
      char __format, char __mod) const;
    };

  template<typename _CharT, typename _OutIter>
    locale::id time_put<_CharT, _OutIter>::id;


  template<typename _CharT, typename _OutIter>
    class time_put_byname : public time_put<_CharT, _OutIter>
    {
    public:

      typedef _CharT char_type;
      typedef _OutIter iter_type;

      explicit
      time_put_byname(const char*, size_t __refs = 0)
      : time_put<_CharT, _OutIter>(__refs)
      { };

    protected:
      virtual
      ~time_put_byname() { }
    };
# 3447 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  class money_base
  {
  public:
    enum part { none, space, symbol, sign, value };
    struct pattern { char field[4]; };

    static const pattern _S_default_pattern;

    enum
    {
      _S_minus,
      _S_zero,
      _S_end = 11
    };



    static const char* _S_atoms;



    static pattern
    _S_construct_pattern(char __precedes, char __space, char __posn);
  };

  template<typename _CharT, bool _Intl>
    struct __moneypunct_cache : public locale::facet
    {
      const char* _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;
      const _CharT* _M_curr_symbol;
      size_t _M_curr_symbol_size;
      const _CharT* _M_positive_sign;
      size_t _M_positive_sign_size;
      const _CharT* _M_negative_sign;
      size_t _M_negative_sign_size;
      int _M_frac_digits;
      money_base::pattern _M_pos_format;
      money_base::pattern _M_neg_format;




      _CharT _M_atoms[money_base::_S_end];

      bool _M_allocated;

      __moneypunct_cache(size_t __refs = 0) : facet(__refs),
      _M_grouping(__null), _M_grouping_size(0), _M_use_grouping(false),
      _M_decimal_point(_CharT()), _M_thousands_sep(_CharT()),
      _M_curr_symbol(__null), _M_curr_symbol_size(0),
      _M_positive_sign(__null), _M_positive_sign_size(0),
      _M_negative_sign(__null), _M_negative_sign_size(0),
      _M_frac_digits(0),
      _M_pos_format(money_base::pattern()),
      _M_neg_format(money_base::pattern()), _M_allocated(false)
      { }

      ~__moneypunct_cache();

      void
      _M_cache(const locale& __loc);

    private:
      __moneypunct_cache&
      operator=(const __moneypunct_cache&);

      explicit
      __moneypunct_cache(const __moneypunct_cache&);
    };

  template<typename _CharT, bool _Intl>
    __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache()
    {
      if (_M_allocated)
 {
   delete [] _M_grouping;
   delete [] _M_curr_symbol;
   delete [] _M_positive_sign;
   delete [] _M_negative_sign;
 }
    }







  template<typename _CharT, bool _Intl>
    class moneypunct : public locale::facet, public money_base
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      typedef __moneypunct_cache<_CharT, _Intl> __cache_type;

    private:
      __cache_type* _M_data;

    public:


      static const bool intl = _Intl;

      static locale::id id;
# 3568 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      moneypunct(size_t __refs = 0) : facet(__refs), _M_data(__null)
      { _M_initialize_moneypunct(); }
# 3580 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      moneypunct(__cache_type* __cache, size_t __refs = 0)
      : facet(__refs), _M_data(__cache)
      { _M_initialize_moneypunct(); }
# 3595 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)
      : facet(__refs), _M_data(__null)
      { _M_initialize_moneypunct(__cloc, __s); }
# 3609 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      decimal_point() const
      { return this->do_decimal_point(); }
# 3622 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      char_type
      thousands_sep() const
      { return this->do_thousands_sep(); }
# 3651 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string
      grouping() const
      { return this->do_grouping(); }
# 3664 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      curr_symbol() const
      { return this->do_curr_symbol(); }
# 3681 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      positive_sign() const
      { return this->do_positive_sign(); }
# 3698 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      negative_sign() const
      { return this->do_negative_sign(); }
# 3714 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      int
      frac_digits() const
      { return this->do_frac_digits(); }
# 3749 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      pattern
      pos_format() const
      { return this->do_pos_format(); }

      pattern
      neg_format() const
      { return this->do_neg_format(); }


    protected:

      virtual
      ~moneypunct();
# 3771 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_decimal_point() const
      { return _M_data->_M_decimal_point; }
# 3783 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual char_type
      do_thousands_sep() const
      { return _M_data->_M_thousands_sep; }
# 3796 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string
      do_grouping() const
      { return _M_data->_M_grouping; }
# 3809 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_curr_symbol() const
      { return _M_data->_M_curr_symbol; }
# 3822 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_positive_sign() const
      { return _M_data->_M_positive_sign; }
# 3835 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_negative_sign() const
      { return _M_data->_M_negative_sign; }
# 3849 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual int
      do_frac_digits() const
      { return _M_data->_M_frac_digits; }
# 3863 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual pattern
      do_pos_format() const
      { return _M_data->_M_pos_format; }
# 3877 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual pattern
      do_neg_format() const
      { return _M_data->_M_neg_format; }


       void
       _M_initialize_moneypunct(__c_locale __cloc = __null,
    const char* __name = __null);
    };

  template<typename _CharT, bool _Intl>
    locale::id moneypunct<_CharT, _Intl>::id;

  template<typename _CharT, bool _Intl>
    const bool moneypunct<_CharT, _Intl>::intl;

  template<>
    moneypunct<char, true>::~moneypunct();

  template<>
    moneypunct<char, false>::~moneypunct();

  template<>
    void
    moneypunct<char, true>::_M_initialize_moneypunct(__c_locale, const char*);

  template<>
    void
    moneypunct<char, false>::_M_initialize_moneypunct(__c_locale, const char*);
# 3926 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, bool _Intl>
    class moneypunct_byname : public moneypunct<_CharT, _Intl>
    {
    public:
      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      static const bool intl = _Intl;

      explicit
      moneypunct_byname(const char* __s, size_t __refs = 0)
      : moneypunct<_CharT, _Intl>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     __c_locale __tmp;
     this->_S_create_c_locale(__tmp, __s);
     this->_M_initialize_moneypunct(__tmp);
     this->_S_destroy_c_locale(__tmp);
   }
      }

    protected:
      virtual
      ~moneypunct_byname() { }
    };

  template<typename _CharT, bool _Intl>
    const bool moneypunct_byname<_CharT, _Intl>::intl;
# 3968 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, typename _InIter>
    class money_get : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _InIter iter_type;
      typedef basic_string<_CharT> string_type;



      static locale::id id;
# 3990 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      money_get(size_t __refs = 0) : facet(__refs) { }
# 4020 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
   ios_base::iostate& __err, long double& __units) const
      { return this->do_get(__s, __end, __intl, __io, __err, __units); }
# 4050 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
   ios_base::iostate& __err, string_type& __digits) const
      { return this->do_get(__s, __end, __intl, __io, __err, __digits); }

    protected:

      virtual
      ~money_get() { }
# 4067 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
      ios_base::iostate& __err, long double& __units) const;
# 4078 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
      ios_base::iostate& __err, string_type& __digits) const;

      template<bool _Intl>
        iter_type
        _M_extract(iter_type __s, iter_type __end, ios_base& __io,
     ios_base::iostate& __err, string& __digits) const;
    };

  template<typename _CharT, typename _InIter>
    locale::id money_get<_CharT, _InIter>::id;
# 4103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT, typename _OutIter>
    class money_put : public locale::facet
    {
    public:


      typedef _CharT char_type;
      typedef _OutIter iter_type;
      typedef basic_string<_CharT> string_type;



      static locale::id id;
# 4124 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      money_put(size_t __refs = 0) : facet(__refs) { }
# 4144 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, bool __intl, ios_base& __io,
   char_type __fill, long double __units) const
      { return this->do_put(__s, __intl, __io, __fill, __units); }
# 4166 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, bool __intl, ios_base& __io,
   char_type __fill, const string_type& __digits) const
      { return this->do_put(__s, __intl, __io, __fill, __digits); }

    protected:

      virtual
      ~money_put() { }
# 4194 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
      long double __units) const;
# 4216 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
      const string_type& __digits) const;

      template<bool _Intl>
        iter_type
        _M_insert(iter_type __s, ios_base& __io, char_type __fill,
    const string_type& __digits) const;
    };

  template<typename _CharT, typename _OutIter>
    locale::id money_put<_CharT, _OutIter>::id;




  struct messages_base
  {
    typedef int catalog;
  };
# 4257 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    class messages : public locale::facet, public messages_base
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;


    protected:


      __c_locale _M_c_locale_messages;
      const char* _M_name_messages;

    public:

      static locale::id id;
# 4285 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      messages(size_t __refs = 0);
# 4299 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      explicit
      messages(__c_locale __cloc, const char* __s, size_t __refs = 0);
# 4312 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      catalog
      open(const basic_string<char>& __s, const locale& __loc) const
      { return this->do_open(__s, __loc); }
# 4330 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      catalog
      open(const basic_string<char>&, const locale&, const char*) const;
# 4348 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      string_type
      get(catalog __c, int __set, int __msgid, const string_type& __s) const
      { return this->do_get(__c, __set, __msgid, __s); }
# 4359 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      void
      close(catalog __c) const
      { return this->do_close(__c); }

    protected:

      virtual
      ~messages();
# 4379 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual catalog
      do_open(const basic_string<char>&, const locale&) const;
# 4398 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
      virtual string_type
      do_get(catalog, int, int, const string_type& __dfault) const;






      virtual void
      do_close(catalog) const;


      char*
      _M_convert_to_char(const string_type& __msg) const
      {

 return reinterpret_cast<char*>(const_cast<_CharT*>(__msg.c_str()));
      }


      string_type
      _M_convert_from_char(char*) const
      {
# 4455 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
 return string_type();
      }
     };

  template<typename _CharT>
    locale::id messages<_CharT>::id;


  template<>
    string
    messages<char>::do_get(catalog, int, int, const string&) const;
# 4474 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
   template<typename _CharT>
    class messages_byname : public messages<_CharT>
    {
    public:
      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      explicit
      messages_byname(const char* __s, size_t __refs = 0);

    protected:
      virtual
      ~messages_byname()
      { }
    };


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/messages_members.h" 1 3
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/messages_members.h" 3
  template<typename _CharT>
     messages<_CharT>::messages(size_t __refs)
     : facet(__refs), _M_c_locale_messages(_S_get_c_locale()),
     _M_name_messages(_S_get_c_name())
     { }

  template<typename _CharT>
     messages<_CharT>::messages(__c_locale __cloc, const char* __s,
    size_t __refs)
     : facet(__refs), _M_c_locale_messages(_S_clone_c_locale(__cloc)),
     _M_name_messages(__s)
     {
       char* __tmp = new char[std::strlen(__s) + 1];
       std::strcpy(__tmp, __s);
       _M_name_messages = __tmp;
     }

  template<typename _CharT>
    typename messages<_CharT>::catalog
    messages<_CharT>::open(const basic_string<char>& __s, const locale& __loc,
      const char* __dir) const
    {
      ((void)0);
      return this->do_open(__s, __loc);
    }


  template<typename _CharT>
    messages<_CharT>::~messages()
    {
      if (_M_name_messages != _S_get_c_name())
 delete [] _M_name_messages;
      _S_destroy_c_locale(_M_c_locale_messages);
    }

  template<typename _CharT>
    typename messages<_CharT>::catalog
    messages<_CharT>::do_open(const basic_string<char>& __s,
         const locale&) const
    {


      ((void)0);
      return 0;
    }

  template<typename _CharT>
    void
    messages<_CharT>::do_close(catalog) const
    { }


   template<typename _CharT>
     messages_byname<_CharT>::messages_byname(const char* __s, size_t __refs)
     : messages<_CharT>(__refs)
     {
       if (this->_M_name_messages != locale::facet::_S_get_c_name())
  delete [] this->_M_name_messages;
       char* __tmp = new char[std::strlen(__s) + 1];
       std::strcpy(__tmp, __s);
       this->_M_name_messages = __tmp;

       if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
  {
    this->_S_destroy_c_locale(this->_M_c_locale_messages);
    this->_S_create_c_locale(this->_M_c_locale_messages, __s);
  }
     }
# 4492 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 2 3
# 4500 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.h" 3
  template<typename _CharT>
    inline bool
    isspace(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::space, __c); }


  template<typename _CharT>
    inline bool
    isprint(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::print, __c); }


  template<typename _CharT>
    inline bool
    iscntrl(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::cntrl, __c); }


  template<typename _CharT>
    inline bool
    isupper(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::upper, __c); }


  template<typename _CharT>
    inline bool
    islower(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::lower, __c); }


  template<typename _CharT>
    inline bool
    isalpha(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::alpha, __c); }


  template<typename _CharT>
    inline bool
    isdigit(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::digit, __c); }


  template<typename _CharT>
    inline bool
    ispunct(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::punct, __c); }


  template<typename _CharT>
    inline bool
    isxdigit(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::xdigit, __c); }


  template<typename _CharT>
    inline bool
    isalnum(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::alnum, __c); }


  template<typename _CharT>
    inline bool
    isgraph(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::graph, __c); }


  template<typename _CharT>
    inline _CharT
    toupper(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).toupper(__c); }


  template<typename _CharT>
    inline _CharT
    tolower(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).tolower(__c); }
}
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 2 3

namespace std
{







  template<typename _CharT, typename _Traits>
    class basic_ios : public ios_base
    {
    public:






      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;
# 78 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      typedef ctype<_CharT> __ctype_type;
      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
           __num_put_type;
      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
           __num_get_type;



    protected:
      basic_ostream<_CharT, _Traits>* _M_tie;
      mutable char_type _M_fill;
      mutable bool _M_fill_init;
      basic_streambuf<_CharT, _Traits>* _M_streambuf;


      const __ctype_type* _M_ctype;

      const __num_put_type* _M_num_put;

      const __num_get_type* _M_num_get;

    public:







      operator void*() const
      { return this->fail() ? 0 : const_cast<basic_ios*>(this); }

      bool
      operator!() const
      { return this->fail(); }
# 122 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      iostate
      rdstate() const
      { return _M_streambuf_state; }
# 133 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      void
      clear(iostate __state = goodbit);







      void
      setstate(iostate __state)
      { this->clear(this->rdstate() | __state); }




      void
      _M_setstate(iostate __state)
      {


 _M_streambuf_state |= __state;
 if (this->exceptions() & __state)
   throw;
      }







      bool
      good() const
      { return this->rdstate() == 0; }







      bool
      eof() const
      { return (this->rdstate() & eofbit) != 0; }
# 186 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      bool
      fail() const
      { return (this->rdstate() & (badbit | failbit)) != 0; }







      bool
      bad() const
      { return (this->rdstate() & badbit) != 0; }
# 207 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      iostate
      exceptions() const
      { return _M_exception; }
# 242 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      void
      exceptions(iostate __except)
      {
        _M_exception = __except;
        this->clear(_M_streambuf_state);
      }







      explicit
      basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
      : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
      _M_ctype(0), _M_num_put(0), _M_num_get(0)
      { this->init(__sb); }







      virtual
      ~basic_ios() { }
# 280 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      basic_ostream<_CharT, _Traits>*
      tie() const
      { return _M_tie; }
# 292 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      basic_ostream<_CharT, _Traits>*
      tie(basic_ostream<_CharT, _Traits>* __tiestr)
      {
        basic_ostream<_CharT, _Traits>* __old = _M_tie;
        _M_tie = __tiestr;
        return __old;
      }







      basic_streambuf<_CharT, _Traits>*
      rdbuf() const
      { return _M_streambuf; }
# 332 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      basic_streambuf<_CharT, _Traits>*
      rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
# 346 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      basic_ios&
      copyfmt(const basic_ios& __rhs);







      char_type
      fill() const
      {
 if (!_M_fill_init)
   {
     _M_fill = this->widen(' ');
     _M_fill_init = true;
   }
 return _M_fill;
      }
# 375 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      char_type
      fill(char_type __ch)
      {
 char_type __old = this->fill();
 _M_fill = __ch;
 return __old;
      }
# 395 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      locale
      imbue(const locale& __loc);
# 415 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      char
      narrow(char_type __c, char __dfault) const;
# 433 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 3
      char_type
      widen(char __c) const;

    protected:







      basic_ios()
      : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false),
      _M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)
      { }







      void
      init(basic_streambuf<_CharT, _Traits>* __sb);

      void
      _M_cache_locale(const locale& __loc);
    };
}


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.tcc" 1 3
# 38 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.tcc" 3
       
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.tcc" 3

namespace std
{
  template<typename _CharT, typename _Traits>
    void
    basic_ios<_CharT, _Traits>::clear(iostate __state)
    {
      if (this->rdbuf())
 _M_streambuf_state = __state;
      else
   _M_streambuf_state = __state | badbit;
      if (this->exceptions() & this->rdstate())
 __throw_ios_failure(("basic_ios::clear"));
    }

  template<typename _CharT, typename _Traits>
    basic_streambuf<_CharT, _Traits>*
    basic_ios<_CharT, _Traits>::rdbuf(basic_streambuf<_CharT, _Traits>* __sb)
    {
      basic_streambuf<_CharT, _Traits>* __old = _M_streambuf;
      _M_streambuf = __sb;
      this->clear();
      return __old;
    }

  template<typename _CharT, typename _Traits>
    basic_ios<_CharT, _Traits>&
    basic_ios<_CharT, _Traits>::copyfmt(const basic_ios& __rhs)
    {


      if (this != &__rhs)
 {




   _Words* __words = (__rhs._M_word_size <= _S_local_word_size) ?
                      _M_local_word : new _Words[__rhs._M_word_size];


   _Callback_list* __cb = __rhs._M_callbacks;
   if (__cb)
     __cb->_M_add_reference();
   _M_call_callbacks(erase_event);
   if (_M_word != _M_local_word)
     {
       delete [] _M_word;
       _M_word = 0;
     }
   _M_dispose_callbacks();


   _M_callbacks = __cb;
   for (int __i = 0; __i < __rhs._M_word_size; ++__i)
     __words[__i] = __rhs._M_word[__i];
   _M_word = __words;
   _M_word_size = __rhs._M_word_size;

   this->flags(__rhs.flags());
   this->width(__rhs.width());
   this->precision(__rhs.precision());
   this->tie(__rhs.tie());
   this->fill(__rhs.fill());
   _M_ios_locale = __rhs.getloc();
   _M_cache_locale(_M_ios_locale);

   _M_call_callbacks(copyfmt_event);


   this->exceptions(__rhs.exceptions());
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    char
    basic_ios<_CharT, _Traits>::narrow(char_type __c, char __dfault) const
    { return __check_facet(_M_ctype).narrow(__c, __dfault); }

  template<typename _CharT, typename _Traits>
    _CharT
    basic_ios<_CharT, _Traits>::widen(char __c) const
    { return __check_facet(_M_ctype).widen(__c); }


  template<typename _CharT, typename _Traits>
    locale
    basic_ios<_CharT, _Traits>::imbue(const locale& __loc)
    {
      locale __old(this->getloc());
      ios_base::imbue(__loc);
      _M_cache_locale(__loc);
      if (this->rdbuf() != 0)
 this->rdbuf()->pubimbue(__loc);
      return __old;
    }

  template<typename _CharT, typename _Traits>
    void
    basic_ios<_CharT, _Traits>::init(basic_streambuf<_CharT, _Traits>* __sb)
    {

      ios_base::_M_init();


      _M_cache_locale(_M_ios_locale);
# 159 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.tcc" 3
      _M_fill = _CharT();
      _M_fill_init = false;

      _M_tie = 0;
      _M_exception = goodbit;
      _M_streambuf = __sb;
      _M_streambuf_state = __sb ? goodbit : badbit;
    }

  template<typename _CharT, typename _Traits>
    void
    basic_ios<_CharT, _Traits>::_M_cache_locale(const locale& __loc)
    {
      if (__builtin_expect(has_facet<__ctype_type>(__loc), true))
 _M_ctype = &use_facet<__ctype_type>(__loc);
      else
 _M_ctype = 0;

      if (__builtin_expect(has_facet<__num_put_type>(__loc), true))
 _M_num_put = &use_facet<__num_put_type>(__loc);
      else
 _M_num_put = 0;

      if (__builtin_expect(has_facet<__num_get_type>(__loc), true))
 _M_num_get = &use_facet<__num_get_type>(__loc);
      else
 _M_num_get = 0;
    }





  extern template class basic_ios<char>;





}
# 465 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/basic_ios.h" 2 3
# 51 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ios" 2 3
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 2 3

namespace std
{
# 56 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
  template<typename _CharT, typename _Traits>
    class basic_ostream : virtual public basic_ios<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
      typedef basic_ios<_CharT, _Traits> __ios_type;
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
             __num_put_type;
      typedef ctype<_CharT> __ctype_type;

      template<typename _CharT2, typename _Traits2>
        friend basic_ostream<_CharT2, _Traits2>&
        operator<<(basic_ostream<_CharT2, _Traits2>&, _CharT2);

      template<typename _Traits2>
        friend basic_ostream<char, _Traits2>&
        operator<<(basic_ostream<char, _Traits2>&, char);

      template<typename _CharT2, typename _Traits2>
        friend basic_ostream<_CharT2, _Traits2>&
        operator<<(basic_ostream<_CharT2, _Traits2>&, const _CharT2*);

      template<typename _Traits2>
        friend basic_ostream<char, _Traits2>&
        operator<<(basic_ostream<char, _Traits2>&, const char*);

      template<typename _CharT2, typename _Traits2>
        friend basic_ostream<_CharT2, _Traits2>&
        operator<<(basic_ostream<_CharT2, _Traits2>&, const char*);
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      explicit
      basic_ostream(__streambuf_type* __sb)
      { this->init(__sb); }






      virtual
      ~basic_ostream() { }


      class sentry;
      friend class sentry;
# 129 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      inline __ostream_type&
      operator<<(__ostream_type& (*__pf)(__ostream_type&));

      inline __ostream_type&
      operator<<(__ios_type& (*__pf)(__ios_type&));

      inline __ostream_type&
      operator<<(ios_base& (*__pf) (ios_base&));
# 166 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      __ostream_type&
      operator<<(long __n);

      __ostream_type&
      operator<<(unsigned long __n);

      __ostream_type&
      operator<<(bool __n);

      __ostream_type&
      operator<<(short __n)
      {
 const ios_base::fmtflags __fmt = this->flags() & ios_base::basefield;
 if (__fmt == ios_base::oct || __fmt == ios_base::hex)
   return this->operator<<(static_cast<long>
      (static_cast<unsigned short>(__n)));
 else
   return this->operator<<(static_cast<long>(__n));
      }

      __ostream_type&
      operator<<(unsigned short __n)
      { return this->operator<<(static_cast<unsigned long>(__n)); }

      __ostream_type&
      operator<<(int __n)
      {
 const ios_base::fmtflags __fmt = this->flags() & ios_base::basefield;
 if (__fmt == ios_base::oct || __fmt == ios_base::hex)
   return this->operator<<(static_cast<long>
      (static_cast<unsigned int>(__n)));
 else
   return this->operator<<(static_cast<long>(__n));
      }

      __ostream_type&
      operator<<(unsigned int __n)
      { return this->operator<<(static_cast<unsigned long>(__n)); }


      __ostream_type&
      operator<<(long long __n);

      __ostream_type&
      operator<<(unsigned long long __n);


      __ostream_type&
      operator<<(double __f);

      __ostream_type&
      operator<<(float __f)
      { return this->operator<<(static_cast<double>(__f)); }

      __ostream_type&
      operator<<(long double __f);

      __ostream_type&
      operator<<(const void* __p);
# 247 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      __ostream_type&
      operator<<(__streambuf_type* __sb);
# 280 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      __ostream_type&
      put(char_type __c);


      void
      _M_write(const char_type* __s, streamsize __n)
      {
 streamsize __put = this->rdbuf()->sputn(__s, __n);
 if (__put != __n)
   this->setstate(ios_base::badbit);
      }
# 308 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      __ostream_type&
      write(const char_type* __s, streamsize __n);
# 321 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      __ostream_type&
      flush();
# 332 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      pos_type
      tellp();
# 343 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      __ostream_type&
      seekp(pos_type);
# 355 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
       __ostream_type&
      seekp(off_type, ios_base::seekdir);

    protected:
      explicit
      basic_ostream() { }
    };
# 373 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
  template <typename _CharT, typename _Traits>
    class basic_ostream<_CharT, _Traits>::sentry
    {

      bool _M_ok;
      basic_ostream<_CharT,_Traits>& _M_os;

    public:
# 392 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      explicit
      sentry(basic_ostream<_CharT,_Traits>& __os);
# 402 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      ~sentry()
      {

 if (_M_os.flags() & ios_base::unitbuf && !uncaught_exception())
   {

     if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
       _M_os.setstate(ios_base::badbit);
   }
      }
# 420 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
      operator bool() const
      { return _M_ok; }
    };
# 441 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c);

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
    { return (__out << __out.widen(__c)); }


  template <class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, char __c);


  template<class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
    { return (__out << static_cast<char>(__c)); }

  template<class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
    { return (__out << static_cast<char>(__c)); }
# 481 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s);

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits> &
    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);


  template<class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s);


  template<class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
    { return (__out << reinterpret_cast<const char*>(__s)); }

  template<class _Traits>
    basic_ostream<char, _Traits> &
    operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
    { return (__out << reinterpret_cast<const char*>(__s)); }
# 515 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 3
  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    endl(basic_ostream<_CharT, _Traits>& __os)
    { return flush(__os.put(__os.widen('\n'))); }







  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    ends(basic_ostream<_CharT, _Traits>& __os)
    { return __os.put(_CharT()); }






  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    flush(basic_ostream<_CharT, _Traits>& __os)
    { return __os.flush(); }

}


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ostream.tcc" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ostream.tcc" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ostream.tcc" 3

# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/locale" 1 3
# 41 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/locale" 3
       
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/locale" 3




# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 1 3
# 39 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
       
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/typeinfo" 1 3
# 40 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/typeinfo" 3
#pragma GCC visibility push(default)

extern "C++" {

namespace __cxxabiv1
{
  class __class_type_info;
}
# 59 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/typeinfo" 3
namespace std
{






  class type_info
  {
  public:




    virtual ~type_info();

  private:

    type_info& operator=(const type_info&);
    type_info(const type_info&);

  protected:
    const char *__name;

  protected:
    explicit type_info(const char *__n): __name(__n) { }

  public:



    const char* name() const
    { return __name; }
# 105 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/typeinfo" 3
    bool before(const type_info& __arg) const
    { return __name < __arg.__name; }
    bool operator==(const type_info& __arg) const
    { return __name == __arg.__name; }

    bool operator!=(const type_info& __arg) const
    { return !operator==(__arg); }


  public:

    virtual bool __is_pointer_p() const;

    virtual bool __is_function_p() const;







    virtual bool __do_catch(const type_info *__thr_type, void **__thr_obj,
       unsigned __outer) const;


    virtual bool __do_upcast(const __cxxabiv1::__class_type_info *__target,
        void **__obj_ptr) const;
  };






  class bad_cast : public exception
  {
  public:
    bad_cast() throw() { }


    virtual ~bad_cast() throw();
  };


  class bad_typeid : public exception
  {
  public:
    bad_typeid () throw() { }


    virtual ~bad_typeid() throw();
  };
}

#pragma GCC visibility pop

}
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 2 3


namespace std
{
  template<typename _Facet>
    locale
    locale::combine(const locale& __other) const
    {
      _Impl* __tmp = new _Impl(*_M_impl, 1);
      try
 {
   __tmp->_M_replace_facet(__other._M_impl, &_Facet::id);
 }
      catch(...)
 {
   __tmp->_M_remove_reference();
   throw;
 }
      return locale(__tmp);
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    bool
    locale::operator()(const basic_string<_CharT, _Traits, _Alloc>& __s1,
                       const basic_string<_CharT, _Traits, _Alloc>& __s2) const
    {
      typedef std::collate<_CharT> __collate_type;
      const __collate_type& __collate = use_facet<__collate_type>(*this);
      return (__collate.compare(__s1.data(), __s1.data() + __s1.length(),
    __s2.data(), __s2.data() + __s2.length()) < 0);
    }
# 86 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
  template<typename _Facet>
    inline bool
    has_facet(const locale& __loc) throw()
    {
      const size_t __i = _Facet::id._M_id();
      const locale::facet** __facets = __loc._M_impl->_M_facets;
      return (__i < __loc._M_impl->_M_facets_size && __facets[__i]);
    }
# 108 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
  template<typename _Facet>
    inline const _Facet&
    use_facet(const locale& __loc)
    {
      const size_t __i = _Facet::id._M_id();
      const locale::facet** __facets = __loc._M_impl->_M_facets;
      if (!(__i < __loc._M_impl->_M_facets_size && __facets[__i]))
        __throw_bad_cast();
      return static_cast<const _Facet&>(*__facets[__i]);
    }



  template<typename _Facet>
    struct __use_cache
    {
      const _Facet*
      operator() (const locale& __loc) const;
    };


  template<typename _CharT>
    struct __use_cache<__numpunct_cache<_CharT> >
    {
      const __numpunct_cache<_CharT>*
      operator() (const locale& __loc) const
      {
 const size_t __i = numpunct<_CharT>::id._M_id();
 const locale::facet** __caches = __loc._M_impl->_M_caches;
 if (!__caches[__i])
   {
     __numpunct_cache<_CharT>* __tmp = __null;
     try
       {
  __tmp = new __numpunct_cache<_CharT>;
  __tmp->_M_cache(__loc);
       }
     catch(...)
       {
  delete __tmp;
  throw;
       }
     __loc._M_impl->_M_install_cache(__tmp, __i);
   }
 return static_cast<const __numpunct_cache<_CharT>*>(__caches[__i]);
      }
    };

  template<typename _CharT, bool _Intl>
    struct __use_cache<__moneypunct_cache<_CharT, _Intl> >
    {
      const __moneypunct_cache<_CharT, _Intl>*
      operator() (const locale& __loc) const
      {
 const size_t __i = moneypunct<_CharT, _Intl>::id._M_id();
 const locale::facet** __caches = __loc._M_impl->_M_caches;
 if (!__caches[__i])
   {
     __moneypunct_cache<_CharT, _Intl>* __tmp = __null;
     try
       {
  __tmp = new __moneypunct_cache<_CharT, _Intl>;
  __tmp->_M_cache(__loc);
       }
     catch(...)
       {
  delete __tmp;
  throw;
       }
     __loc._M_impl->_M_install_cache(__tmp, __i);
   }
 return static_cast<
   const __moneypunct_cache<_CharT, _Intl>*>(__caches[__i]);
      }
    };

  template<typename _CharT>
    void
    __numpunct_cache<_CharT>::_M_cache(const locale& __loc)
    {
      _M_allocated = true;

      const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);

      _M_grouping_size = __np.grouping().size();
      char* __grouping = new char[_M_grouping_size];
      __np.grouping().copy(__grouping, _M_grouping_size);
      _M_grouping = __grouping;
      _M_use_grouping = (_M_grouping_size
    && static_cast<signed char>(__np.grouping()[0]) > 0);

      _M_truename_size = __np.truename().size();
      _CharT* __truename = new _CharT[_M_truename_size];
      __np.truename().copy(__truename, _M_truename_size);
      _M_truename = __truename;

      _M_falsename_size = __np.falsename().size();
      _CharT* __falsename = new _CharT[_M_falsename_size];
      __np.falsename().copy(__falsename, _M_falsename_size);
      _M_falsename = __falsename;

      _M_decimal_point = __np.decimal_point();
      _M_thousands_sep = __np.thousands_sep();

      const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);
      __ct.widen(__num_base::_S_atoms_out,
   __num_base::_S_atoms_out + __num_base::_S_oend, _M_atoms_out);
      __ct.widen(__num_base::_S_atoms_in,
   __num_base::_S_atoms_in + __num_base::_S_iend, _M_atoms_in);
    }

  template<typename _CharT, bool _Intl>
    void
    __moneypunct_cache<_CharT, _Intl>::_M_cache(const locale& __loc)
    {
      _M_allocated = true;

      const moneypunct<_CharT, _Intl>& __mp =
 use_facet<moneypunct<_CharT, _Intl> >(__loc);

      _M_grouping_size = __mp.grouping().size();
      char* __grouping = new char[_M_grouping_size];
      __mp.grouping().copy(__grouping, _M_grouping_size);
      _M_grouping = __grouping;
      _M_use_grouping = (_M_grouping_size
    && static_cast<signed char>(__mp.grouping()[0]) > 0);

      _M_decimal_point = __mp.decimal_point();
      _M_thousands_sep = __mp.thousands_sep();
      _M_frac_digits = __mp.frac_digits();

      _M_curr_symbol_size = __mp.curr_symbol().size();
      _CharT* __curr_symbol = new _CharT[_M_curr_symbol_size];
      __mp.curr_symbol().copy(__curr_symbol, _M_curr_symbol_size);
      _M_curr_symbol = __curr_symbol;

      _M_positive_sign_size = __mp.positive_sign().size();
      _CharT* __positive_sign = new _CharT[_M_positive_sign_size];
      __mp.positive_sign().copy(__positive_sign, _M_positive_sign_size);
      _M_positive_sign = __positive_sign;

      _M_negative_sign_size = __mp.negative_sign().size();
      _CharT* __negative_sign = new _CharT[_M_negative_sign_size];
      __mp.negative_sign().copy(__negative_sign, _M_negative_sign_size);
      _M_negative_sign = __negative_sign;

      _M_pos_format = __mp.pos_format();
      _M_neg_format = __mp.neg_format();

      const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);
      __ct.widen(money_base::_S_atoms,
   money_base::_S_atoms + money_base::_S_end, _M_atoms);
    }
# 271 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
  static bool
  __verify_grouping(const char* __grouping, size_t __grouping_size,
      const string& __grouping_tmp);

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    _M_extract_float(_InIter __beg, _InIter __end, ios_base& __io,
       ios_base::iostate& __err, string& __xtrc) const
    {
      typedef char_traits<_CharT> __traits_type;
      typedef __numpunct_cache<_CharT> __cache_type;
      __use_cache<__cache_type> __uc;
      const locale& __loc = __io._M_getloc();
      const __cache_type* __lc = __uc(__loc);
      const _CharT* __lit = __lc->_M_atoms_in;
      char_type __c = char_type();


      bool __testeof = __beg == __end;


      if (!__testeof)
 {
   __c = *__beg;
   const bool __plus = __c == __lit[__num_base::_S_iplus];
   if ((__plus || __c == __lit[__num_base::_S_iminus])
       && !(__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
       && !(__c == __lc->_M_decimal_point))
     {
       __xtrc += __plus ? '+' : '-';
       if (++__beg != __end)
  __c = *__beg;
       else
  __testeof = true;
     }
 }


      bool __found_mantissa = false;
      while (!__testeof)
 {
   if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep
       || __c == __lc->_M_decimal_point)
     break;
   else if (__c == __lit[__num_base::_S_izero])
     {
       if (!__found_mantissa)
  {
    __xtrc += '0';
    __found_mantissa = true;
  }
       if (++__beg != __end)
  __c = *__beg;
       else
  __testeof = true;
     }
   else
     break;
 }


      bool __found_dec = false;
      bool __found_sci = false;
      string __found_grouping;
      if (__lc->_M_use_grouping)
 __found_grouping.reserve(32);
      int __sep_pos = 0;
      const char_type* __q;
      const char_type* __lit_zero = __lit + __num_base::_S_izero;
      while (!__testeof)
        {


          if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
     {
       if (!__found_dec && !__found_sci)
  {


    if (__sep_pos)
      {
        __found_grouping += static_cast<char>(__sep_pos);
        __sep_pos = 0;
      }
    else
      {
        __err |= ios_base::failbit;
        break;
      }
  }
       else
  break;
            }
   else if (__c == __lc->_M_decimal_point)
     {
       if (!__found_dec && !__found_sci)
  {



    if (__found_grouping.size())
      __found_grouping += static_cast<char>(__sep_pos);
    __xtrc += '.';
    __found_dec = true;
  }
       else
  break;
     }
          else if ((__q = __traits_type::find(__lit_zero, 10, __c)))
     {
       __xtrc += __num_base::_S_atoms_in[__q - __lit];
       __found_mantissa = true;
       ++__sep_pos;
     }
   else if ((__c == __lit[__num_base::_S_ie]
      || __c == __lit[__num_base::_S_iE])
     && __found_mantissa && !__found_sci)
     {

       if (__found_grouping.size() && !__found_dec)
  __found_grouping += static_cast<char>(__sep_pos);
       __xtrc += 'e';
       __found_sci = true;


       if (++__beg != __end)
  {
    __c = *__beg;
    const bool __plus = __c == __lit[__num_base::_S_iplus];
    if ((__plus || __c == __lit[__num_base::_S_iminus])
        && !(__lc->_M_use_grouping
      && __c == __lc->_M_thousands_sep)
        && !(__c == __lc->_M_decimal_point))
      __xtrc += __plus ? '+' : '-';
    else
      continue;
  }
       else
  {
    __testeof = true;
    break;
  }
     }
   else

     break;

   if (++__beg != __end)
     __c = *__beg;
   else
     __testeof = true;
        }



      if (__found_grouping.size())
        {

   if (!__found_dec && !__found_sci)
     __found_grouping += static_cast<char>(__sep_pos);

          if (!std::__verify_grouping(__lc->_M_grouping,
          __lc->_M_grouping_size,
          __found_grouping))
     __err |= ios_base::failbit;
        }


      if (__testeof)
        __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _ValueT>
    struct __to_unsigned_type
    { typedef _ValueT __type; };

  template<>
    struct __to_unsigned_type<long>
    { typedef unsigned long __type; };


  template<>
    struct __to_unsigned_type<long long>
    { typedef unsigned long long __type; };


  template<typename _CharT, typename _InIter>
    template<typename _ValueT>
      _InIter
      num_get<_CharT, _InIter>::
      _M_extract_int(_InIter __beg, _InIter __end, ios_base& __io,
       ios_base::iostate& __err, _ValueT& __v) const
      {
        typedef char_traits<_CharT> __traits_type;
 typedef typename __to_unsigned_type<_ValueT>::__type __unsigned_type;
 typedef __numpunct_cache<_CharT> __cache_type;
 __use_cache<__cache_type> __uc;
 const locale& __loc = __io._M_getloc();
 const __cache_type* __lc = __uc(__loc);
 const _CharT* __lit = __lc->_M_atoms_in;
 char_type __c = char_type();


 const ios_base::fmtflags __basefield = __io.flags()
                                        & ios_base::basefield;
 const bool __oct = __basefield == ios_base::oct;
 int __base = __oct ? 8 : (__basefield == ios_base::hex ? 16 : 10);


 bool __testeof = __beg == __end;


 bool __negative = false;
 if (!__testeof)
   {
     __c = *__beg;
     if (numeric_limits<_ValueT>::is_signed)
       __negative = __c == __lit[__num_base::_S_iminus];
     if ((__negative || __c == __lit[__num_base::_S_iplus])
  && !(__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
  && !(__c == __lc->_M_decimal_point))
       {
  if (++__beg != __end)
    __c = *__beg;
  else
    __testeof = true;
       }
   }



 bool __found_zero = false;
 while (!__testeof)
   {
     if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep
  || __c == __lc->_M_decimal_point)
       break;
     else if (__c == __lit[__num_base::_S_izero]
       && (!__found_zero || __base == 10))
       __found_zero = true;
     else if (__found_zero)
       {
  if (__c == __lit[__num_base::_S_ix]
      || __c == __lit[__num_base::_S_iX])
    {
      if (__basefield == 0)
        __base = 16;
      if (__base == 16)
        __found_zero = false;
      else
        break;
    }
  else
    {
      if (__basefield == 0)
        __base = 8;
      break;
    }
       }
     else
       break;

     if (++__beg != __end)
       {
  __c = *__beg;
  if (!__found_zero)
    break;
       }
     else
       __testeof = true;
   }



 const size_t __len = (__base == 16 ? __num_base::_S_iend
         - __num_base::_S_izero : __base);


 string __found_grouping;
 if (__lc->_M_use_grouping)
   __found_grouping.reserve(32);
 int __sep_pos = 0;
 bool __overflow = false;
 const __unsigned_type __max = __negative ?
   -numeric_limits<_ValueT>::min() : numeric_limits<_ValueT>::max();
 const __unsigned_type __smax = __max / __base;
 __unsigned_type __result = 0;
 const char_type* __q;
 const char_type* __lit_zero = __lit + __num_base::_S_izero;
 while (!__testeof)
   {


     if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
       {


  if (__sep_pos)
    {
      __found_grouping += static_cast<char>(__sep_pos);
      __sep_pos = 0;
    }
  else
    {
      __err |= ios_base::failbit;
      break;
    }
       }
     else if (__c == __lc->_M_decimal_point)
       break;
     else if ((__q = __traits_type::find(__lit_zero, __len, __c)))
       {
  int __digit = __q - __lit_zero;
  if (__digit > 15)
    __digit -= 6;
  if (__result > __smax)
    __overflow = true;
  else
    {
      __result *= __base;
      __overflow |= __result > __max - __digit;
      __result += __digit;
      ++__sep_pos;
    }
       }
     else

       break;

     if (++__beg != __end)
       __c = *__beg;
     else
       __testeof = true;
   }



 if (__found_grouping.size())
   {

     __found_grouping += static_cast<char>(__sep_pos);

     if (!std::__verify_grouping(__lc->_M_grouping,
     __lc->_M_grouping_size,
     __found_grouping))
       __err |= ios_base::failbit;
   }

 if (!(__err & ios_base::failbit) && !__overflow
     && (__sep_pos || __found_zero || __found_grouping.size()))
   __v = __negative ? -__result : __result;
 else
   __err |= ios_base::failbit;

 if (__testeof)
   __err |= ios_base::eofbit;
 return __beg;
      }



  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, bool& __v) const
    {
      if (!(__io.flags() & ios_base::boolalpha))
        {



   long __l = -1;
          __beg = _M_extract_int(__beg, __end, __io, __err, __l);
   if (__l == 0 || __l == 1)
     __v = __l;
   else
            __err |= ios_base::failbit;
        }
      else
        {

   typedef __numpunct_cache<_CharT> __cache_type;
   __use_cache<__cache_type> __uc;
   const locale& __loc = __io._M_getloc();
   const __cache_type* __lc = __uc(__loc);

   bool __testf = true;
   bool __testt = true;
   size_t __n;
   bool __testeof = __beg == __end;
          for (__n = 0; !__testeof; ++__n)
            {
       const char_type __c = *__beg;

       if (__testf)
  if (__n < __lc->_M_falsename_size)
    __testf = __c == __lc->_M_falsename[__n];
  else
    break;

       if (__testt)
  if (__n < __lc->_M_truename_size)
    __testt = __c == __lc->_M_truename[__n];
  else
    break;

       if (!__testf && !__testt)
  break;

       if (++__beg == __end)
  __testeof = true;
            }
   if (__testf && __n == __lc->_M_falsename_size)
     __v = 0;
   else if (__testt && __n == __lc->_M_truename_size)
     __v = 1;
   else
     __err |= ios_base::failbit;

          if (__testeof)
            __err |= ios_base::eofbit;
        }
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned short& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned int& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }


  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, long long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned long long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }


  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, float& __v) const
    {
      string __xtrc;
      __xtrc.reserve(32);
      __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
      std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, double& __v) const
    {
      string __xtrc;
      __xtrc.reserve(32);
      __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
      std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, long double& __v) const
    {
      string __xtrc;
      __xtrc.reserve(32);
      __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
      std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, void*& __v) const
    {

      typedef ios_base::fmtflags fmtflags;
      const fmtflags __fmt = __io.flags();
      __io.flags(__fmt & ~ios_base::basefield | ios_base::hex);

      unsigned long __ul;
      __beg = _M_extract_int(__beg, __end, __io, __err, __ul);


      __io.flags(__fmt);

      if (!(__err & ios_base::failbit))
 __v = reinterpret_cast<void*>(__ul);
      return __beg;
    }



  template<typename _CharT, typename _OutIter>
    void
    num_put<_CharT, _OutIter>::
    _M_pad(_CharT __fill, streamsize __w, ios_base& __io,
    _CharT* __new, const _CharT* __cs, int& __len) const
    {


      __pad<_CharT, char_traits<_CharT> >::_S_pad(__io, __fill, __new, __cs,
        __w, __len, true);
      __len = static_cast<int>(__w);
    }


  template<typename _CharT>
    inline int
    __int_to_char(_CharT* __bufend, long __v, const _CharT* __lit,
    ios_base::fmtflags __flags)
    {
      unsigned long __ul = static_cast<unsigned long>(__v);
      if (__v < 0)
 __ul = -__ul;
      return __int_to_char(__bufend, __ul, __lit, __flags, false);
    }

  template<typename _CharT>
    inline int
    __int_to_char(_CharT* __bufend, unsigned long __v, const _CharT* __lit,
    ios_base::fmtflags __flags)
    { return __int_to_char(__bufend, __v, __lit, __flags, false); }


  template<typename _CharT>
    inline int
    __int_to_char(_CharT* __bufend, long long __v, const _CharT* __lit,
    ios_base::fmtflags __flags)
    {
      unsigned long long __ull = static_cast<unsigned long long>(__v);
      if (__v < 0)
 __ull = -__ull;
      return __int_to_char(__bufend, __ull, __lit, __flags, false);
    }

  template<typename _CharT>
    inline int
    __int_to_char(_CharT* __bufend, unsigned long long __v,
    const _CharT* __lit, ios_base::fmtflags __flags)
    { return __int_to_char(__bufend, __v, __lit, __flags, false); }



  template<typename _CharT, typename _ValueT>
    int
    __int_to_char(_CharT* __bufend, _ValueT __v, const _CharT* __lit,
    ios_base::fmtflags __flags, bool)
    {
      const ios_base::fmtflags __basefield = __flags & ios_base::basefield;
      _CharT* __buf = __bufend;

      if (__builtin_expect(__basefield != ios_base::oct
      && __basefield != ios_base::hex, true))
 {

   do
     {
       *--__buf = __lit[(__v % 10) + __num_base::_S_odigits];
       __v /= 10;
     }
   while (__v != 0);
 }
      else if (__basefield == ios_base::oct)
 {

   do
     {
       *--__buf = __lit[(__v & 0x7) + __num_base::_S_odigits];
       __v >>= 3;
     }
   while (__v != 0);
 }
      else
 {

   const bool __uppercase = __flags & ios_base::uppercase;
   const int __case_offset = __uppercase ? __num_base::_S_oudigits
                                         : __num_base::_S_odigits;
   do
     {
       *--__buf = __lit[(__v & 0xf) + __case_offset];
       __v >>= 4;
     }
   while (__v != 0);
 }
      return __bufend - __buf;
    }

  template<typename _CharT, typename _OutIter>
    void
    num_put<_CharT, _OutIter>::
    _M_group_int(const char* __grouping, size_t __grouping_size, _CharT __sep,
   ios_base&, _CharT* __new, _CharT* __cs, int& __len) const
    {
      _CharT* __p = std::__add_grouping(__new, __sep, __grouping,
     __grouping_size, __cs, __cs + __len);
      __len = __p - __new;
    }

  template<typename _CharT, typename _OutIter>
    template<typename _ValueT>
      _OutIter
      num_put<_CharT, _OutIter>::
      _M_insert_int(_OutIter __s, ios_base& __io, _CharT __fill,
      _ValueT __v) const
      {
 typedef __numpunct_cache<_CharT> __cache_type;
 __use_cache<__cache_type> __uc;
 const locale& __loc = __io._M_getloc();
 const __cache_type* __lc = __uc(__loc);
 const _CharT* __lit = __lc->_M_atoms_out;
 const ios_base::fmtflags __flags = __io.flags();


 const int __ilen = 5 * sizeof(_ValueT);
 _CharT* __cs = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
            * __ilen));



 int __len = __int_to_char(__cs + __ilen, __v, __lit, __flags);
 __cs += __ilen - __len;


 if (__lc->_M_use_grouping)
   {


     _CharT* __cs2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * (__len + 1)
          * 2));
     _M_group_int(__lc->_M_grouping, __lc->_M_grouping_size,
    __lc->_M_thousands_sep, __io, __cs2 + 2, __cs, __len);
     __cs = __cs2 + 2;
   }


 const ios_base::fmtflags __basefield = __flags & ios_base::basefield;
 if (__builtin_expect(__basefield != ios_base::oct
        && __basefield != ios_base::hex, true))
   {

     if (__v > 0)
       {
  if (__flags & ios_base::showpos
      && numeric_limits<_ValueT>::is_signed)
    *--__cs = __lit[__num_base::_S_oplus], ++__len;
       }
     else if (__v)
       *--__cs = __lit[__num_base::_S_ominus], ++__len;
   }
 else if (__basefield == ios_base::oct)
   {

     if (__flags & ios_base::showbase && __v)
       *--__cs = __lit[__num_base::_S_odigits], ++__len;
   }
 else
   {

     if (__flags & ios_base::showbase && __v)
       {

  const bool __uppercase = __flags & ios_base::uppercase;
  *--__cs = __lit[__num_base::_S_ox + __uppercase];

  *--__cs = __lit[__num_base::_S_odigits];
  __len += 2;
       }
   }


 const streamsize __w = __io.width();
 if (__w > static_cast<streamsize>(__len))
   {
     _CharT* __cs3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __w));
     _M_pad(__fill, __w, __io, __cs3, __cs, __len);
     __cs = __cs3;
   }
 __io.width(0);



 return std::__write(__s, __cs, __len);
      }

  template<typename _CharT, typename _OutIter>
    void
    num_put<_CharT, _OutIter>::
    _M_group_float(const char* __grouping, size_t __grouping_size,
     _CharT __sep, const _CharT* __p, _CharT* __new,
     _CharT* __cs, int& __len) const
    {



      const int __declen = __p ? __p - __cs : __len;
      _CharT* __p2 = std::__add_grouping(__new, __sep, __grouping,
      __grouping_size,
      __cs, __cs + __declen);


      int __newlen = __p2 - __new;
      if (__p)
 {
   char_traits<_CharT>::copy(__p2, __p, __len - __declen);
   __newlen += __len - __declen;
 }
      __len = __newlen;
    }
# 1036 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _OutIter>
    template<typename _ValueT>
      _OutIter
      num_put<_CharT, _OutIter>::
      _M_insert_float(_OutIter __s, ios_base& __io, _CharT __fill, char __mod,
         _ValueT __v) const
      {
 typedef __numpunct_cache<_CharT> __cache_type;
 __use_cache<__cache_type> __uc;
 const locale& __loc = __io._M_getloc();
 const __cache_type* __lc = __uc(__loc);


 streamsize __prec = __io.precision();
 if (__prec < static_cast<streamsize>(0))
   __prec = static_cast<streamsize>(6);

 const int __max_digits = numeric_limits<_ValueT>::digits10;


 int __len;

 char __fbuf[16];
# 1080 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
 const bool __fixed = __io.flags() & ios_base::fixed;
 const int __max_exp = numeric_limits<_ValueT>::max_exponent10;







 const int __cs_size = __fixed ? __max_exp + __prec + 4
                               : __max_digits * 2 + __prec;
 char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));

 __num_base::_S_format_float(__io, __fbuf, __mod);
 __len = std::__convert_from_v(__cs, 0, __fbuf, __v,
          _S_get_c_locale(), __prec);




 const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

 _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
            * __len));
 __ctype.widen(__cs, __cs + __len, __ws);


 const _CharT __cdec = __ctype.widen('.');
 const _CharT __dec = __lc->_M_decimal_point;
 const _CharT* __p = char_traits<_CharT>::find(__ws, __len, __cdec);
 if (__p)
   __ws[__p - __ws] = __dec;




 if (__lc->_M_use_grouping
     && (__p || __len < 3 || (__cs[1] <= '9' && __cs[2] <= '9'
         && __cs[1] >= '0' && __cs[2] >= '0')))
   {


     _CharT* __ws2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __len * 2));

     streamsize __off = 0;
     if (__cs[0] == '-' || __cs[0] == '+')
       {
  __off = 1;
  __ws2[0] = __ws[0];
  __len -= 1;
       }

     _M_group_float(__lc->_M_grouping, __lc->_M_grouping_size,
      __lc->_M_thousands_sep, __p, __ws2 + __off,
      __ws + __off, __len);
     __len += __off;

     __ws = __ws2;
   }


 const streamsize __w = __io.width();
 if (__w > static_cast<streamsize>(__len))
   {
     _CharT* __ws3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __w));
     _M_pad(__fill, __w, __io, __ws3, __ws, __len);
     __ws = __ws3;
   }
 __io.width(0);



 return std::__write(__s, __ws, __len);
      }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, bool __v) const
    {
      const ios_base::fmtflags __flags = __io.flags();
      if ((__flags & ios_base::boolalpha) == 0)
        {
          const long __l = __v;
          __s = _M_insert_int(__s, __io, __fill, __l);
        }
      else
        {
   typedef __numpunct_cache<_CharT> __cache_type;
   __use_cache<__cache_type> __uc;
   const locale& __loc = __io._M_getloc();
   const __cache_type* __lc = __uc(__loc);

   const _CharT* __name = __v ? __lc->_M_truename
                              : __lc->_M_falsename;
   int __len = __v ? __lc->_M_truename_size
                   : __lc->_M_falsename_size;

   const streamsize __w = __io.width();
   if (__w > static_cast<streamsize>(__len))
     {
       _CharT* __cs
  = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
       * __w));
       _M_pad(__fill, __w, __io, __cs, __name, __len);
       __name = __cs;
     }
   __io.width(0);
   __s = std::__write(__s, __name, __len);
 }
      return __s;
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
           unsigned long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }


  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __b, char_type __fill, long long __v) const
    { return _M_insert_int(__s, __b, __fill, __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
           unsigned long long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }


  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, double __v) const
    { return _M_insert_float(__s, __io, __fill, char(), __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
    long double __v) const
    { return _M_insert_float(__s, __io, __fill, 'L', __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
           const void* __v) const
    {
      const ios_base::fmtflags __flags = __io.flags();
      const ios_base::fmtflags __fmt = ~(ios_base::basefield
      | ios_base::uppercase
      | ios_base::internal);
      __io.flags(__flags & __fmt | (ios_base::hex | ios_base::showbase));

      __s = _M_insert_int(__s, __io, __fill,
     reinterpret_cast<unsigned long>(__v));
      __io.flags(__flags);
      return __s;
    }

  template<typename _CharT, typename _InIter>
    template<bool _Intl>
      _InIter
      money_get<_CharT, _InIter>::
      _M_extract(iter_type __beg, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, string& __units) const
      {
 typedef char_traits<_CharT> __traits_type;
 typedef typename string_type::size_type size_type;
 typedef money_base::part part;
 typedef __moneypunct_cache<_CharT, _Intl> __cache_type;

 const locale& __loc = __io._M_getloc();
 const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

 __use_cache<__cache_type> __uc;
 const __cache_type* __lc = __uc(__loc);
 const char_type* __lit = __lc->_M_atoms;


 bool __negative = false;

 size_type __sign_size = 0;

 const bool __mandatory_sign = (__lc->_M_positive_sign_size
           && __lc->_M_negative_sign_size);

 string __grouping_tmp;
 if (__lc->_M_use_grouping)
   __grouping_tmp.reserve(32);

 int __last_pos = 0;

 int __n = 0;

 bool __testvalid = true;

 bool __testdecfound = false;


 string __res;
 __res.reserve(32);

 const char_type* __lit_zero = __lit + money_base::_S_zero;
 const money_base::pattern __p = __lc->_M_neg_format;
 for (int __i = 0; __i < 4 && __testvalid; ++__i)
   {
     const part __which = static_cast<part>(__p.field[__i]);
     switch (__which)
       {
       case money_base::symbol:




  if (__io.flags() & ios_base::showbase || __sign_size > 1
      || __i == 0
      || (__i == 1 && (__mandatory_sign
         || (static_cast<part>(__p.field[0])
      == money_base::sign)
         || (static_cast<part>(__p.field[2])
      == money_base::space)))
      || (__i == 2 && ((static_cast<part>(__p.field[3])
          == money_base::value)
         || __mandatory_sign
         && (static_cast<part>(__p.field[3])
      == money_base::sign))))
    {
      const size_type __len = __lc->_M_curr_symbol_size;
      size_type __j = 0;
      for (; __beg != __end && __j < __len
      && *__beg == __lc->_M_curr_symbol[__j];
    ++__beg, ++__j);
      if (__j != __len
   && (__j || __io.flags() & ios_base::showbase))
        __testvalid = false;
    }
  break;
       case money_base::sign:

  if (__lc->_M_positive_sign_size && __beg != __end
      && *__beg == __lc->_M_positive_sign[0])
    {
      __sign_size = __lc->_M_positive_sign_size;
      ++__beg;
    }
  else if (__lc->_M_negative_sign_size && __beg != __end
    && *__beg == __lc->_M_negative_sign[0])
    {
      __negative = true;
      __sign_size = __lc->_M_negative_sign_size;
      ++__beg;
    }
  else if (__lc->_M_positive_sign_size
    && !__lc->_M_negative_sign_size)


    __negative = true;
  else if (__mandatory_sign)
    __testvalid = false;
  break;
       case money_base::value:


  for (; __beg != __end; ++__beg)
    {
      const char_type __c = *__beg;
      const char_type* __q = __traits_type::find(__lit_zero,
              10, __c);
      if (__q != 0)
        {
   __res += money_base::_S_atoms[__q - __lit];
   ++__n;
        }
      else if (__c == __lc->_M_decimal_point
        && !__testdecfound)
        {
   __last_pos = __n;
   __n = 0;
   __testdecfound = true;
        }
      else if (__lc->_M_use_grouping
        && __c == __lc->_M_thousands_sep
        && !__testdecfound)
        {
   if (__n)
     {

       __grouping_tmp += static_cast<char>(__n);
       __n = 0;
     }
   else
     {
       __testvalid = false;
       break;
     }
        }
      else
        break;
    }
  if (__res.empty())
    __testvalid = false;
  break;
       case money_base::space:

  if (__beg != __end && __ctype.is(ctype_base::space, *__beg))
    ++__beg;
  else
    __testvalid = false;
       case money_base::none:

  if (__i != 3)
    for (; __beg != __end
    && __ctype.is(ctype_base::space, *__beg); ++__beg);
  break;
       }
   }


 if (__sign_size > 1 && __testvalid)
   {
     const char_type* __sign = __negative ? __lc->_M_negative_sign
                                          : __lc->_M_positive_sign;
     size_type __i = 1;
     for (; __beg != __end && __i < __sign_size
     && *__beg == __sign[__i]; ++__beg, ++__i);

     if (__i != __sign_size)
       __testvalid = false;
   }

 if (__testvalid)
   {

     if (__res.size() > 1)
       {
  const size_type __first = __res.find_first_not_of('0');
  const bool __only_zeros = __first == string::npos;
  if (__first)
    __res.erase(0, __only_zeros ? __res.size() - 1 : __first);
       }


     if (__negative && __res[0] != '0')
       __res.insert(__res.begin(), '-');


     if (__grouping_tmp.size())
       {

  __grouping_tmp += static_cast<char>(__testdecfound ? __last_pos
                         : __n);
  if (!std::__verify_grouping(__lc->_M_grouping,
         __lc->_M_grouping_size,
         __grouping_tmp))
    __testvalid = false;
       }


     if (__testdecfound && __lc->_M_frac_digits > 0
  && __n != __lc->_M_frac_digits)
       __testvalid = false;
   }


 if (!__testvalid)
   __err |= ios_base::failbit;
 else
   __units.swap(__res);


 if (__beg == __end)
   __err |= ios_base::eofbit;
 return __beg;
      }

  template<typename _CharT, typename _InIter>
    _InIter
    money_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, bool __intl, ios_base& __io,
    ios_base::iostate& __err, long double& __units) const
    {
      string __str;
      if (__intl)
 __beg = _M_extract<true>(__beg, __end, __io, __err, __str);
      else
 __beg = _M_extract<false>(__beg, __end, __io, __err, __str);
      std::__convert_to_v(__str.c_str(), __units, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    money_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, bool __intl, ios_base& __io,
    ios_base::iostate& __err, string_type& __units) const
    {
      typedef typename string::size_type size_type;

      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

      string __str;
      const iter_type __ret = __intl ? _M_extract<true>(__beg, __end, __io,
       __err, __str)
                              : _M_extract<false>(__beg, __end, __io,
        __err, __str);
      const size_type __len = __str.size();
      if (__len)
 {
   _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
              * __len));
   __ctype.widen(__str.data(), __str.data() + __len, __ws);
   __units.assign(__ws, __len);
 }

      return __ret;
    }

  template<typename _CharT, typename _OutIter>
    template<bool _Intl>
      _OutIter
      money_put<_CharT, _OutIter>::
      _M_insert(iter_type __s, ios_base& __io, char_type __fill,
  const string_type& __digits) const
      {
 typedef typename string_type::size_type size_type;
 typedef money_base::part part;
 typedef __moneypunct_cache<_CharT, _Intl> __cache_type;

 const locale& __loc = __io._M_getloc();
 const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

 __use_cache<__cache_type> __uc;
 const __cache_type* __lc = __uc(__loc);
 const char_type* __lit = __lc->_M_atoms;



 const char_type* __beg = __digits.data();

 money_base::pattern __p;
 const char_type* __sign;
 size_type __sign_size;
 if (!(*__beg == __lit[money_base::_S_minus]))
   {
     __p = __lc->_M_pos_format;
     __sign = __lc->_M_positive_sign;
     __sign_size = __lc->_M_positive_sign_size;
   }
 else
   {
     __p = __lc->_M_neg_format;
     __sign = __lc->_M_negative_sign;
     __sign_size = __lc->_M_negative_sign_size;
     if (__digits.size())
       ++__beg;
   }


 size_type __len = __ctype.scan_not(ctype_base::digit, __beg,
        __beg + __digits.size()) - __beg;
 if (__len)
   {



     string_type __value;
     __value.reserve(2 * __len);



     int __paddec = __len - __lc->_M_frac_digits;
     if (__paddec > 0)
         {
  if (__lc->_M_frac_digits < 0)
    __paddec = __len;
    if (__lc->_M_grouping_size)
      {
      _CharT* __ws =
          static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
             * 2 * __len));
        _CharT* __ws_end =
        std::__add_grouping(__ws, __lc->_M_thousands_sep,
       __lc->_M_grouping,
       __lc->_M_grouping_size,
       __beg, __beg + __paddec);
      __value.assign(__ws, __ws_end - __ws);
      }
    else
    __value.assign(__beg, __paddec);
       }


     if (__lc->_M_frac_digits > 0)
       {
  __value += __lc->_M_decimal_point;
  if (__paddec >= 0)
    __value.append(__beg + __paddec, __lc->_M_frac_digits);
  else
    {

      __value.append(-__paddec, __lit[money_base::_S_zero]);
      __value.append(__beg, __len);
    }
         }


     const ios_base::fmtflags __f = __io.flags()
                                    & ios_base::adjustfield;
     __len = __value.size() + __sign_size;
     __len += ((__io.flags() & ios_base::showbase)
        ? __lc->_M_curr_symbol_size : 0);

     string_type __res;
     __res.reserve(2 * __len);

     const size_type __width = static_cast<size_type>(__io.width());
     const bool __testipad = (__f == ios_base::internal
         && __len < __width);

     for (int __i = 0; __i < 4; ++__i)
       {
  const part __which = static_cast<part>(__p.field[__i]);
  switch (__which)
    {
    case money_base::symbol:
      if (__io.flags() & ios_base::showbase)
        __res.append(__lc->_M_curr_symbol,
       __lc->_M_curr_symbol_size);
      break;
    case money_base::sign:



      if (__sign_size)
        __res += __sign[0];
      break;
    case money_base::value:
      __res += __value;
      break;
    case money_base::space:



      if (__testipad)
        __res.append(__width - __len, __fill);
      else
        __res += __fill;
      break;
    case money_base::none:
      if (__testipad)
        __res.append(__width - __len, __fill);
      break;
    }
       }


     if (__sign_size > 1)
       __res.append(__sign + 1, __sign_size - 1);


     __len = __res.size();
     if (__width > __len)
       {
  if (__f == ios_base::left)

    __res.append(__width - __len, __fill);
  else

    __res.insert(0, __width - __len, __fill);
  __len = __width;
       }


     __s = std::__write(__s, __res.data(), __len);
   }
 __io.width(0);
 return __s;
      }

  template<typename _CharT, typename _OutIter>
    _OutIter
    money_put<_CharT, _OutIter>::
    do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
    long double __units) const
    {
      const locale __loc = __io.getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
# 1701 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
      const int __cs_size = numeric_limits<long double>::max_exponent10 + 3;
      char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));
      int __len = std::__convert_from_v(__cs, 0, "%.*Lf", __units,
     _S_get_c_locale(), 0);

      _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __cs_size));
      __ctype.widen(__cs, __cs + __len, __ws);
      const string_type __digits(__ws, __len);
      return __intl ? _M_insert<true>(__s, __io, __fill, __digits)
             : _M_insert<false>(__s, __io, __fill, __digits);
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    money_put<_CharT, _OutIter>::
    do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
    const string_type& __digits) const
    { return __intl ? _M_insert<true>(__s, __io, __fill, __digits)
             : _M_insert<false>(__s, __io, __fill, __digits); }





  template<typename _CharT, typename _InIter>
    time_base::dateorder
    time_get<_CharT, _InIter>::do_date_order() const
    { return time_base::no_order; }



  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    _M_extract_via_format(iter_type __beg, iter_type __end, ios_base& __io,
     ios_base::iostate& __err, tm* __tm,
     const _CharT* __format) const
    {
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
      const size_t __len = char_traits<_CharT>::length(__format);

      for (size_t __i = 0; __beg != __end && __i < __len && !__err; ++__i)
 {
   if (__ctype.narrow(__format[__i], 0) == '%')
     {

       char __c = __ctype.narrow(__format[++__i], 0);
       int __mem = 0;
       if (__c == 'E' || __c == 'O')
  __c = __ctype.narrow(__format[++__i], 0);
       switch (__c)
  {
    const char* __cs;
    _CharT __wcs[10];
  case 'a':

    const char_type* __days1[7];
    __tp._M_days_abbreviated(__days1);
    __beg = _M_extract_name(__beg, __end, __tm->tm_wday, __days1,
       7, __io, __err);
    break;
  case 'A':

    const char_type* __days2[7];
    __tp._M_days(__days2);
    __beg = _M_extract_name(__beg, __end, __tm->tm_wday, __days2,
       7, __io, __err);
    break;
  case 'h':
  case 'b':

    const char_type* __months1[12];
    __tp._M_months_abbreviated(__months1);
    __beg = _M_extract_name(__beg, __end, __tm->tm_mon,
       __months1, 12, __io, __err);
    break;
  case 'B':

    const char_type* __months2[12];
    __tp._M_months(__months2);
    __beg = _M_extract_name(__beg, __end, __tm->tm_mon,
       __months2, 12, __io, __err);
    break;
  case 'c':

    const char_type* __dt[2];
    __tp._M_date_time_formats(__dt);
    __beg = _M_extract_via_format(__beg, __end, __io, __err,
      __tm, __dt[0]);
    break;
  case 'd':

    __beg = _M_extract_num(__beg, __end, __tm->tm_mday, 1, 31, 2,
      __io, __err);
    break;
  case 'e':


    if (__ctype.is(ctype_base::space, *__beg))
      __beg = _M_extract_num(++__beg, __end, __tm->tm_mday, 1, 9,
        1, __io, __err);
    else
      __beg = _M_extract_num(__beg, __end, __tm->tm_mday, 10, 31,
        2, __io, __err);
    break;
  case 'D':

    __cs = "%m/%d/%y";
    __ctype.widen(__cs, __cs + 9, __wcs);
    __beg = _M_extract_via_format(__beg, __end, __io, __err,
      __tm, __wcs);
    break;
  case 'H':

    __beg = _M_extract_num(__beg, __end, __tm->tm_hour, 0, 23, 2,
      __io, __err);
    break;
  case 'I':

    __beg = _M_extract_num(__beg, __end, __tm->tm_hour, 1, 12, 2,
      __io, __err);
    break;
  case 'm':

    __beg = _M_extract_num(__beg, __end, __mem, 1, 12, 2,
      __io, __err);
    if (!__err)
      __tm->tm_mon = __mem - 1;
    break;
  case 'M':

    __beg = _M_extract_num(__beg, __end, __tm->tm_min, 0, 59, 2,
      __io, __err);
    break;
  case 'n':
    if (__ctype.narrow(*__beg, 0) == '\n')
      ++__beg;
    else
      __err |= ios_base::failbit;
    break;
  case 'R':

    __cs = "%H:%M";
    __ctype.widen(__cs, __cs + 6, __wcs);
    __beg = _M_extract_via_format(__beg, __end, __io, __err,
      __tm, __wcs);
    break;
  case 'S':





    __beg = _M_extract_num(__beg, __end, __tm->tm_sec, 0, 61, 2,

      __io, __err);
    break;
  case 't':
    if (__ctype.narrow(*__beg, 0) == '\t')
      ++__beg;
    else
      __err |= ios_base::failbit;
    break;
  case 'T':

    __cs = "%H:%M:%S";
    __ctype.widen(__cs, __cs + 9, __wcs);
    __beg = _M_extract_via_format(__beg, __end, __io, __err,
      __tm, __wcs);
    break;
  case 'x':

    const char_type* __dates[2];
    __tp._M_date_formats(__dates);
    __beg = _M_extract_via_format(__beg, __end, __io, __err,
      __tm, __dates[0]);
    break;
  case 'X':

    const char_type* __times[2];
    __tp._M_time_formats(__times);
    __beg = _M_extract_via_format(__beg, __end, __io, __err,
      __tm, __times[0]);
    break;
  case 'y':
  case 'C':

    __beg = _M_extract_num(__beg, __end, __tm->tm_year, 0, 99, 2,
      __io, __err);
    break;
  case 'Y':

    __beg = _M_extract_num(__beg, __end, __mem, 0, 9999, 4,
      __io, __err);
    if (!__err)
      __tm->tm_year = __mem - 1900;
    break;
  case 'Z':

    if (__ctype.is(ctype_base::upper, *__beg))
      {
        int __tmp;
        __beg = _M_extract_name(__beg, __end, __tmp,
           __timepunct_cache<_CharT>::_S_timezones,
           14, __io, __err);


        if (__beg != __end && !__err && __tmp == 0
     && (*__beg == __ctype.widen('-')
         || *__beg == __ctype.widen('+')))
   {
     __beg = _M_extract_num(__beg, __end, __tmp, 0, 23, 2,
       __io, __err);
     __beg = _M_extract_num(__beg, __end, __tmp, 0, 59, 2,
       __io, __err);
   }
      }
    else
      __err |= ios_base::failbit;
    break;
  default:

    __err |= ios_base::failbit;
  }
     }
   else
     {

       if (__format[__i] == *__beg)
  ++__beg;
       else
  __err |= ios_base::failbit;
     }
 }
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    _M_extract_num(iter_type __beg, iter_type __end, int& __member,
     int __min, int __max, size_t __len,
     ios_base& __io, ios_base::iostate& __err) const
    {
      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);


      int __mult = __len == 2 ? 10 : (__len == 4 ? 1000 : 1);

      ++__min;
      size_t __i = 0;
      int __value = 0;
      for (; __beg != __end && __i < __len; ++__beg, ++__i)
 {
   const char __c = __ctype.narrow(*__beg, '*');
   if (__c >= '0' && __c <= '9')
     {
       __value = __value * 10 + (__c - '0');
       const int __valuec = __value * __mult;
       if (__valuec > __max || __valuec + __mult < __min)
  break;
       __mult /= 10;
     }
   else
     break;
 }
      if (__i == __len)
 __member = __value;
      else
 __err |= ios_base::failbit;
      return __beg;
    }



  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    _M_extract_name(iter_type __beg, iter_type __end, int& __member,
      const _CharT** __names, size_t __indexlen,
      ios_base& __io, ios_base::iostate& __err) const
    {
      typedef char_traits<_CharT> __traits_type;
      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

      int* __matches = static_cast<int*>(__builtin_alloca(sizeof(int)
         * __indexlen));
      size_t __nmatches = 0;
      size_t __pos = 0;
      bool __testvalid = true;
      const char_type* __name;





      if (__beg != __end)
 {
   const char_type __c = *__beg;
   for (size_t __i1 = 0; __i1 < __indexlen; ++__i1)
     if (__c == __names[__i1][0]
  || __c == __ctype.toupper(__names[__i1][0]))
       __matches[__nmatches++] = __i1;
 }

      while (__nmatches > 1)
 {

   size_t __minlen = __traits_type::length(__names[__matches[0]]);
   for (size_t __i2 = 1; __i2 < __nmatches; ++__i2)
     __minlen = std::min(__minlen,
         __traits_type::length(__names[__matches[__i2]]));
   ++__beg, ++__pos;
   if (__pos < __minlen && __beg != __end)
     for (size_t __i3 = 0; __i3 < __nmatches;)
       {
  __name = __names[__matches[__i3]];
  if (!(__name[__pos] == *__beg))
    __matches[__i3] = __matches[--__nmatches];
  else
    ++__i3;
       }
   else
     break;
 }

      if (__nmatches == 1)
 {

   ++__beg, ++__pos;
   __name = __names[__matches[0]];
   const size_t __len = __traits_type::length(__name);
   while (__pos < __len && __beg != __end && __name[__pos] == *__beg)
     ++__beg, ++__pos;

   if (__len == __pos)
     __member = __matches[0];
   else
     __testvalid = false;
 }
      else
 __testvalid = false;
      if (!__testvalid)
 __err |= ios_base::failbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_time(iter_type __beg, iter_type __end, ios_base& __io,
  ios_base::iostate& __err, tm* __tm) const
    {
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const char_type* __times[2];
      __tp._M_time_formats(__times);
      __beg = _M_extract_via_format(__beg, __end, __io, __err,
        __tm, __times[0]);
      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_date(iter_type __beg, iter_type __end, ios_base& __io,
  ios_base::iostate& __err, tm* __tm) const
    {
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const char_type* __dates[2];
      __tp._M_date_formats(__dates);
      __beg = _M_extract_via_format(__beg, __end, __io, __err,
        __tm, __dates[0]);
      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_weekday(iter_type __beg, iter_type __end, ios_base& __io,
     ios_base::iostate& __err, tm* __tm) const
    {
      typedef char_traits<_CharT> __traits_type;
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
      const char_type* __days[7];
      __tp._M_days_abbreviated(__days);
      int __tmpwday;
      __beg = _M_extract_name(__beg, __end, __tmpwday, __days, 7, __io, __err);







      if (!__err && __beg != __end)
 {
   size_t __pos = __traits_type::length(__days[__tmpwday]);
   __tp._M_days(__days);
   const char_type* __name = __days[__tmpwday];
   if (__name[__pos] == *__beg)
     {

       const size_t __len = __traits_type::length(__name);
       while (__pos < __len && __beg != __end
       && __name[__pos] == *__beg)
  ++__beg, ++__pos;
       if (__len != __pos)
  __err |= ios_base::failbit;
     }
 }
      if (!__err)
 __tm->tm_wday = __tmpwday;

      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
     }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_monthname(iter_type __beg, iter_type __end,
                     ios_base& __io, ios_base::iostate& __err, tm* __tm) const
    {
      typedef char_traits<_CharT> __traits_type;
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
      const char_type* __months[12];
      __tp._M_months_abbreviated(__months);
      int __tmpmon;
      __beg = _M_extract_name(__beg, __end, __tmpmon, __months, 12,
         __io, __err);







      if (!__err && __beg != __end)
 {
   size_t __pos = __traits_type::length(__months[__tmpmon]);
   __tp._M_months(__months);
   const char_type* __name = __months[__tmpmon];
   if (__name[__pos] == *__beg)
     {

       const size_t __len = __traits_type::length(__name);
       while (__pos < __len && __beg != __end
       && __name[__pos] == *__beg)
  ++__beg, ++__pos;
       if (__len != __pos)
  __err |= ios_base::failbit;
     }
 }
      if (!__err)
 __tm->tm_mon = __tmpmon;

      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_year(iter_type __beg, iter_type __end, ios_base& __io,
  ios_base::iostate& __err, tm* __tm) const
    {
      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

      size_t __i = 0;
      int __value = 0;
      for (; __beg != __end && __i < 4; ++__beg, ++__i)
 {
   const char __c = __ctype.narrow(*__beg, '*');
   if (__c >= '0' && __c <= '9')
     __value = __value * 10 + (__c - '0');
   else
     break;
 }
      if (__i == 2 || __i == 4)
 __tm->tm_year = __i == 2 ? __value : __value - 1900;
      else
 __err |= ios_base::failbit;
      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    time_put<_CharT, _OutIter>::
    put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,
 const _CharT* __beg, const _CharT* __end) const
    {
      const locale& __loc = __io._M_getloc();
      ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);
      for (; __beg != __end; ++__beg)
 if (__ctype.narrow(*__beg, 0) != '%')
   {
     *__s = *__beg;
     ++__s;
   }
 else if (++__beg != __end)
   {
     char __format;
     char __mod = 0;
     const char __c = __ctype.narrow(*__beg, 0);
     if (__c != 'E' && __c != 'O')
       __format = __c;
     else if (++__beg != __end)
       {
  __mod = __c;
  __format = __ctype.narrow(*__beg, 0);
       }
     else
       break;
     __s = this->do_put(__s, __io, __fill, __tm, __format, __mod);
   }
 else
   break;
      return __s;
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    time_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type, const tm* __tm,
    char __format, char __mod) const
    {
      const locale& __loc = __io._M_getloc();
      ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);
      __timepunct<_CharT> const& __tp = use_facet<__timepunct<_CharT> >(__loc);



      const size_t __maxlen = 128;
      char_type* __res =
       static_cast<char_type*>(__builtin_alloca(sizeof(char_type) * __maxlen));






      char_type __fmt[4];
      __fmt[0] = __ctype.widen('%');
      if (!__mod)
 {
   __fmt[1] = __format;
   __fmt[2] = char_type();
 }
      else
 {
   __fmt[1] = __mod;
   __fmt[2] = __format;
   __fmt[3] = char_type();
 }

      __tp._M_put(__res, __maxlen, __fmt, __tm);


      return std::__write(__s, __res, char_traits<char_type>::length(__res));
    }


  template<typename _CharT>
    int
    collate<_CharT>::_M_compare(const _CharT*, const _CharT*) const
    { return 0; }


  template<typename _CharT>
    size_t
    collate<_CharT>::_M_transform(_CharT*, const _CharT*, size_t) const
    { return 0; }

  template<typename _CharT>
    int
    collate<_CharT>::
    do_compare(const _CharT* __lo1, const _CharT* __hi1,
        const _CharT* __lo2, const _CharT* __hi2) const
    {


      const string_type __one(__lo1, __hi1);
      const string_type __two(__lo2, __hi2);

      const _CharT* __p = __one.c_str();
      const _CharT* __pend = __one.data() + __one.length();
      const _CharT* __q = __two.c_str();
      const _CharT* __qend = __two.data() + __two.length();




      for (;;)
 {
   const int __res = _M_compare(__p, __q);
   if (__res)
     return __res;

   __p += char_traits<_CharT>::length(__p);
   __q += char_traits<_CharT>::length(__q);
   if (__p == __pend && __q == __qend)
     return 0;
   else if (__p == __pend)
     return -1;
   else if (__q == __qend)
     return 1;

   __p++;
   __q++;
 }
    }

  template<typename _CharT>
    typename collate<_CharT>::string_type
    collate<_CharT>::
    do_transform(const _CharT* __lo, const _CharT* __hi) const
    {

      string_type __str(__lo, __hi);

      const _CharT* __p = __str.c_str();
      const _CharT* __pend = __str.data() + __str.length();

      size_t __len = (__hi - __lo) * 2;

      string_type __ret;




      for (;;)
 {

   _CharT* __c =
     static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __len));
   size_t __res = _M_transform(__c, __p, __len);


   if (__res >= __len)
     {
       __len = __res + 1;
       __c = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
         * __len));
       __res = _M_transform(__c, __p, __len);
     }

   __ret.append(__c, __res);
   __p += char_traits<_CharT>::length(__p);
   if (__p == __pend)
     return __ret;

   __p++;
   __ret.push_back(_CharT());
 }
    }

  template<typename _CharT>
    long
    collate<_CharT>::
    do_hash(const _CharT* __lo, const _CharT* __hi) const
    {
      unsigned long __val = 0;
      for (; __lo < __hi; ++__lo)
 __val = *__lo + ((__val << 7) |
         (__val >> (numeric_limits<unsigned long>::digits - 7)));
      return static_cast<long>(__val);
    }
# 2400 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _Traits>
    void
    __pad<_CharT, _Traits>::_S_pad(ios_base& __io, _CharT __fill,
       _CharT* __news, const _CharT* __olds,
       const streamsize __newlen,
       const streamsize __oldlen, const bool __num)
    {
      const size_t __plen = static_cast<size_t>(__newlen - __oldlen);
      const ios_base::fmtflags __adjust = __io.flags() & ios_base::adjustfield;


      if (__adjust == ios_base::left)
 {
   _Traits::copy(__news, const_cast<_CharT*>(__olds), __oldlen);
   _Traits::assign(__news + __oldlen, __plen, __fill);
   return;
 }

      size_t __mod = 0;
      if (__adjust == ios_base::internal && __num)
 {



          const locale& __loc = __io._M_getloc();
   const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

   const bool __testsign = (__ctype.widen('-') == __olds[0]
       || __ctype.widen('+') == __olds[0]);
   const bool __testhex = (__ctype.widen('0') == __olds[0]
      && __oldlen > 1
      && (__ctype.widen('x') == __olds[1]
          || __ctype.widen('X') == __olds[1]));
   if (__testhex)
     {
       __news[0] = __olds[0];
       __news[1] = __olds[1];
       __mod = 2;
       __news += 2;
     }
   else if (__testsign)
     {
       __news[0] = __olds[0];
       __mod = 1;
       ++__news;
     }

 }
      _Traits::assign(__news, __plen, __fill);
      _Traits::copy(__news + __plen, const_cast<_CharT*>(__olds + __mod),
      __oldlen - __mod);
    }

  bool
  __verify_grouping(const char* __grouping, size_t __grouping_size,
      const string& __grouping_tmp)
  {
    const size_t __n = __grouping_tmp.size() - 1;
    const size_t __min = std::min(__n, size_t(__grouping_size - 1));
    size_t __i = __n;
    bool __test = true;




    for (size_t __j = 0; __j < __min && __test; --__i, ++__j)
      __test = __grouping_tmp[__i] == __grouping[__j];
    for (; __i && __test; --__i)
      __test = __grouping_tmp[__i] == __grouping[__min];



    if (static_cast<signed char>(__grouping[__min]) > 0)
      __test &= __grouping_tmp[0] <= __grouping[__min];
    return __test;
  }

  template<typename _CharT>
    _CharT*
    __add_grouping(_CharT* __s, _CharT __sep,
     const char* __gbeg, size_t __gsize,
     const _CharT* __first, const _CharT* __last)
    {
      if (__last - __first > *__gbeg
   && static_cast<signed char>(*__gbeg) > 0)
 {
   const bool __bump = __gsize != 1;
   __s = std::__add_grouping(__s, __sep, __gbeg + __bump,
        __gsize - __bump, __first,
        __last - *__gbeg);
   __first = __last - *__gbeg;
   *__s++ = __sep;
 }
      do
 *__s++ = *__first++;
      while (__first != __last);
      return __s;
    }





  extern template class moneypunct<char, false>;
  extern template class moneypunct<char, true>;
  extern template class moneypunct_byname<char, false>;
  extern template class moneypunct_byname<char, true>;
  extern template class money_get<char>;
  extern template class money_put<char>;
  extern template class numpunct<char>;
  extern template class numpunct_byname<char>;
  extern template class num_get<char>;
  extern template class num_put<char>;
  extern template class __timepunct<char>;
  extern template class time_put<char>;
  extern template class time_put_byname<char>;
  extern template class time_get<char>;
  extern template class time_get_byname<char>;
  extern template class messages<char>;
  extern template class messages_byname<char>;
  extern template class ctype_byname<char>;
  extern template class codecvt_byname<char, char, mbstate_t>;
  extern template class collate<char>;
  extern template class collate_byname<char>;

  extern template
    const codecvt<char, char, mbstate_t>&
    use_facet<codecvt<char, char, mbstate_t> >(const locale&);

  extern template
    const collate<char>&
    use_facet<collate<char> >(const locale&);

  extern template
    const numpunct<char>&
    use_facet<numpunct<char> >(const locale&);

  extern template
    const num_put<char>&
    use_facet<num_put<char> >(const locale&);

  extern template
    const num_get<char>&
    use_facet<num_get<char> >(const locale&);

  extern template
    const moneypunct<char, true>&
    use_facet<moneypunct<char, true> >(const locale&);

  extern template
    const moneypunct<char, false>&
    use_facet<moneypunct<char, false> >(const locale&);

  extern template
    const money_put<char>&
    use_facet<money_put<char> >(const locale&);

  extern template
    const money_get<char>&
    use_facet<money_get<char> >(const locale&);

  extern template
    const __timepunct<char>&
    use_facet<__timepunct<char> >(const locale&);

  extern template
    const time_put<char>&
    use_facet<time_put<char> >(const locale&);

  extern template
    const time_get<char>&
    use_facet<time_get<char> >(const locale&);

  extern template
    const messages<char>&
    use_facet<messages<char> >(const locale&);

  extern template
    bool
    has_facet<ctype<char> >(const locale&);

  extern template
    bool
    has_facet<codecvt<char, char, mbstate_t> >(const locale&);

  extern template
    bool
    has_facet<collate<char> >(const locale&);

  extern template
    bool
    has_facet<numpunct<char> >(const locale&);

  extern template
    bool
    has_facet<num_put<char> >(const locale&);

  extern template
    bool
    has_facet<num_get<char> >(const locale&);

  extern template
    bool
    has_facet<moneypunct<char> >(const locale&);

  extern template
    bool
    has_facet<money_put<char> >(const locale&);

  extern template
    bool
    has_facet<money_get<char> >(const locale&);

  extern template
    bool
    has_facet<__timepunct<char> >(const locale&);

  extern template
    bool
    has_facet<time_put<char> >(const locale&);

  extern template
    bool
    has_facet<time_get<char> >(const locale&);

  extern template
    bool
    has_facet<messages<char> >(const locale&);
# 2757 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/locale_facets.tcc" 3
}
# 47 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/locale" 2 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ostream.tcc" 2 3

namespace std
{
  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>::sentry::
    sentry(basic_ostream<_CharT, _Traits>& __os)
    : _M_ok(false), _M_os(__os)
    {

      if (__os.tie() && __os.good())
 __os.tie()->flush();

      if (__os.good())
 _M_ok = true;
      else
 __os.setstate(ios_base::failbit);
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(__ostream_type& (*__pf)(__ostream_type&))
    {



      return __pf(*this);
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(__ios_type& (*__pf)(__ios_type&))
    {



      __pf(*this);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(ios_base& (*__pf)(ios_base&))
    {



      __pf(*this);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(bool __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if (__np.put(*this, *this, this->fill(), __n).failed())
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(long __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       bool __b = false;
       const char_type __c = this->fill();
       const ios_base::fmtflags __fmt = (this->flags()
      & ios_base::basefield);
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if ((__fmt == ios_base::oct) || (__fmt == ios_base::hex))
  {
    const unsigned long __l = static_cast<unsigned long>(__n);
    __b = __np.put(*this, *this, __c, __l).failed();
  }
       else
  __b = __np.put(*this, *this, __c, __n).failed();
       if (__b)
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(unsigned long __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if (__np.put(*this, *this, this->fill(), __n).failed())
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(long long __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       bool __b = false;
       const char_type __c = this->fill();
       const ios_base::fmtflags __fmt = (this->flags()
      & ios_base::basefield);
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if ((__fmt == ios_base::oct) || (__fmt == ios_base::hex))
  {
    const unsigned long long __l = (static_cast<
        unsigned long long>(__n));
    __b = __np.put(*this, *this, __c, __l).failed();
  }
       else
  __b = __np.put(*this, *this, __c, __n).failed();
       if (__b)
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(unsigned long long __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if (__np.put(*this, *this, this->fill(), __n).failed())
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(double __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if (__np.put(*this, *this, this->fill(), __n).failed())
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(long double __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if (__np.put(*this, *this, this->fill(), __n).failed())
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(const void* __n)
    {
      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_put_type& __np = __check_facet(this->_M_num_put);
       if (__np.put(*this, *this, this->fill(), __n).failed())
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(__streambuf_type* __sbin)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this);
      if (__cerb && __sbin)
 {
   try
     {
       if (!__copy_streambufs(__sbin, this->rdbuf()))
  __err |= ios_base::failbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::failbit); }
 }
      else if (!__sbin)
 __err |= ios_base::badbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    put(char_type __c)
    {






      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __put = this->rdbuf()->sputc(__c);
       if (traits_type::eq_int_type(__put, traits_type::eof()))
  __err |= ios_base::badbit;
     }
   catch (...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    write(const _CharT* __s, streamsize __n)
    {







      sentry __cerb(*this);
      if (__cerb)
 {
   try
     { _M_write(__s, __n); }
   catch (...)
     { this->_M_setstate(ios_base::badbit); }
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    flush()
    {



      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (this->rdbuf() && this->rdbuf()->pubsync() == -1)
     __err |= ios_base::badbit;
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    typename basic_ostream<_CharT, _Traits>::pos_type
    basic_ostream<_CharT, _Traits>::
    tellp()
    {
      pos_type __ret = pos_type(-1);
      try
 {
   if (!this->fail())
     __ret = this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::out);
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    seekp(pos_type __pos)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {


       const pos_type __p = this->rdbuf()->pubseekpos(__pos,
            ios_base::out);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    seekp(off_type __off, ios_base::seekdir __dir)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {


       const pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,
            ios_base::out);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typename __ostream_type::sentry __cerb(__out);
      if (__cerb)
 {
   try
     {
       const streamsize __w = __out.width();
       streamsize __len = 1;
       _CharT* __cs = &__c;
       if (__w > __len)
  {
    __cs = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
              * __w));
    __pad<_CharT, _Traits>::_S_pad(__out, __out.fill(), __cs,
       &__c, __w, __len, false);
    __len = __w;
  }
       __out._M_write(__cs, __len);
       __out.width(0);
     }
   catch(...)
     { __out._M_setstate(ios_base::badbit); }
 }
      return __out;
    }


  template <class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    {
      typedef basic_ostream<char, _Traits> __ostream_type;
      typename __ostream_type::sentry __cerb(__out);
      if (__cerb)
 {
   try
     {
       const streamsize __w = __out.width();
       streamsize __len = 1;
       char* __cs = &__c;
       if (__w > __len)
  {
    __cs = static_cast<char*>(__builtin_alloca(__w));
    __pad<char, _Traits>::_S_pad(__out, __out.fill(), __cs,
            &__c, __w, __len, false);
    __len = __w;
  }
       __out._M_write(__cs, __len);
       __out.width(0);
     }
   catch(...)
     { __out._M_setstate(ios_base::badbit); }
 }
      return __out;
     }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typename __ostream_type::sentry __cerb(__out);
      if (__cerb && __s)
 {
   try
     {
       const streamsize __w = __out.width();
       streamsize __len = static_cast<streamsize>(_Traits::length(__s));
       if (__w > __len)
  {
    _CharT* __cs = (static_cast<
      _CharT*>(__builtin_alloca(sizeof(_CharT)
           * __w)));
    __pad<_CharT, _Traits>::_S_pad(__out, __out.fill(), __cs,
       __s, __w, __len, false);
    __s = __cs;
    __len = __w;
  }
       __out._M_write(__s, __len);
       __out.width(0);
     }
   catch(...)
     { __out._M_setstate(ios_base::badbit); }
 }
      else if (!__s)
 __out.setstate(ios_base::badbit);
      return __out;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;



      typedef char_traits<char> __traits_type;
      typename __ostream_type::sentry __cerb(__out);
      if (__cerb && __s)
 {
   size_t __clen = __traits_type::length(__s);
   _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
              * __clen));
   for (size_t __i = 0; __i < __clen; ++__i)
     __ws[__i] = __out.widen(__s[__i]);
   _CharT* __str = __ws;

   try
     {
       const streamsize __w = __out.width();
       streamsize __len = static_cast<streamsize>(__clen);
       if (__w > __len)
  {
    _CharT* __cs = (static_cast<
      _CharT*>(__builtin_alloca(sizeof(_CharT)
           * __w)));
    __pad<_CharT, _Traits>::_S_pad(__out, __out.fill(), __cs,
       __ws, __w, __len, false);
    __str = __cs;
    __len = __w;
  }
       __out._M_write(__str, __len);
       __out.width(0);
     }
   catch(...)
     { __out._M_setstate(ios_base::badbit); }
 }
      else if (!__s)
 __out.setstate(ios_base::badbit);
      return __out;
    }


  template<class _Traits>
    basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    {
      typedef basic_ostream<char, _Traits> __ostream_type;
      typename __ostream_type::sentry __cerb(__out);
      if (__cerb && __s)
 {
   try
     {
       const streamsize __w = __out.width();
       streamsize __len = static_cast<streamsize>(_Traits::length(__s));
       if (__w > __len)
  {
    char* __cs = static_cast<char*>(__builtin_alloca(__w));
    __pad<char, _Traits>::_S_pad(__out, __out.fill(), __cs,
       __s, __w, __len, false);
    __s = __cs;
    __len = __w;
  }
       __out._M_write(__s, __len);
       __out.width(0);
     }
   catch(...)
     { __out._M_setstate(ios_base::badbit); }
 }
      else if (!__s)
 __out.setstate(ios_base::badbit);
      return __out;
    }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out,
        const basic_string<_CharT, _Traits, _Alloc>& __str)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typename __ostream_type::sentry __cerb(__out);
      if (__cerb)
 {
   const streamsize __w = __out.width();
   streamsize __len = static_cast<streamsize>(__str.size());
   const _CharT* __s = __str.data();



   if (__w > __len)
     {
       _CharT* __cs = (static_cast<
         _CharT*>(__builtin_alloca(sizeof(_CharT) * __w)));
       __pad<_CharT, _Traits>::_S_pad(__out, __out.fill(), __cs, __s,
          __w, __len, false);
       __s = __cs;
       __len = __w;
     }
   __out._M_write(__s, __len);
   __out.width(0);
 }
      return __out;
    }





  extern template class basic_ostream<char>;
  extern template ostream& endl(ostream&);
  extern template ostream& ends(ostream&);
  extern template ostream& flush(ostream&);
  extern template ostream& operator<<(ostream&, char);
  extern template ostream& operator<<(ostream&, unsigned char);
  extern template ostream& operator<<(ostream&, signed char);
  extern template ostream& operator<<(ostream&, const char*);
  extern template ostream& operator<<(ostream&, const unsigned char*);
  extern template ostream& operator<<(ostream&, const signed char*);
# 702 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/ostream.tcc" 3
}
# 545 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/ostream" 2 3
# 45 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 2 3
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3




namespace std
{
# 57 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
  template<typename _CharT, typename _Traits>
    class basic_istream : virtual public basic_ios<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
      typedef basic_ios<_CharT, _Traits> __ios_type;
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
        __num_get_type;
      typedef ctype<_CharT> __ctype_type;

      template<typename _CharT2, typename _Traits2>
        friend basic_istream<_CharT2, _Traits2>&
        operator>>(basic_istream<_CharT2, _Traits2>&, _CharT2&);

      template<typename _CharT2, typename _Traits2>
        friend basic_istream<_CharT2, _Traits2>&
        operator>>(basic_istream<_CharT2, _Traits2>&, _CharT2*);

    protected:







      streamsize _M_gcount;

    public:
# 103 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      explicit
      basic_istream(__streambuf_type* __sb): _M_gcount(streamsize(0))
      { this->init(__sb); }






      virtual
      ~basic_istream()
      { _M_gcount = streamsize(0); }


      class sentry;
      friend class sentry;
# 130 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      inline __istream_type&
      operator>>(__istream_type& (*__pf)(__istream_type&));

      inline __istream_type&
      operator>>(__ios_type& (*__pf)(__ios_type&));

      inline __istream_type&
      operator>>(ios_base& (*__pf)(ios_base&));
# 168 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      operator>>(bool& __n);

      __istream_type&
      operator>>(short& __n);

      __istream_type&
      operator>>(unsigned short& __n);

      __istream_type&
      operator>>(int& __n);

      __istream_type&
      operator>>(unsigned int& __n);

      __istream_type&
      operator>>(long& __n);

      __istream_type&
      operator>>(unsigned long& __n);


      __istream_type&
      operator>>(long long& __n);

      __istream_type&
      operator>>(unsigned long long& __n);


      __istream_type&
      operator>>(float& __f);

      __istream_type&
      operator>>(double& __f);

      __istream_type&
      operator>>(long double& __f);

      __istream_type&
      operator>>(void*& __p);
# 229 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      operator>>(__streambuf_type* __sb);
# 239 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      inline streamsize
      gcount() const
      { return _M_gcount; }
# 271 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      int_type
      get();
# 285 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      get(char_type& __c);
# 312 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      get(char_type* __s, streamsize __n, char_type __delim);
# 323 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      inline __istream_type&
      get(char_type* __s, streamsize __n)
      { return this->get(__s, __n, this->widen('\n')); }
# 346 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      get(__streambuf_type& __sb, char_type __delim);
# 356 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      inline __istream_type&
      get(__streambuf_type& __sb)
      { return this->get(__sb, this->widen('\n')); }
# 385 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      getline(char_type* __s, streamsize __n, char_type __delim);
# 396 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      inline __istream_type&
      getline(char_type* __s, streamsize __n)
      { return this->getline(__s, __n, this->widen('\n')); }
# 420 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      ignore();

      __istream_type&
      ignore(streamsize __n);

      __istream_type&
      ignore(streamsize __n, int_type __delim);
# 437 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      int_type
      peek();
# 455 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      read(char_type* __s, streamsize __n);
# 474 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      streamsize
      readsome(char_type* __s, streamsize __n);
# 490 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      putback(char_type __c);
# 505 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      unget();
# 523 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      int
      sync();
# 537 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      pos_type
      tellg();
# 552 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      seekg(pos_type);
# 568 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      __istream_type&
      seekg(off_type, ios_base::seekdir);


    protected:
      explicit
      basic_istream(): _M_gcount(streamsize(0)) { }
    };


  template<>
    basic_istream<char>&
    basic_istream<char>::
    getline(char_type* __s, streamsize __n, char_type __delim);

  template<>
    basic_istream<char>&
    basic_istream<char>::
    ignore(streamsize __n);

  template<>
    basic_istream<char>&
    basic_istream<char>::
    ignore(streamsize __n, int_type __delim);
# 621 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
  template<typename _CharT, typename _Traits>
    class basic_istream<_CharT, _Traits>::sentry
    {
    public:

      typedef _Traits traits_type;
      typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef typename _Traits::int_type __int_type;
# 653 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      explicit
      sentry(basic_istream<_CharT, _Traits>& __is, bool __noskipws = false);
# 663 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
      operator bool() const { return _M_ok; }

    private:
      bool _M_ok;
    };
# 682 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c);

  template<class _Traits>
    basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
    { return (__in >> reinterpret_cast<char&>(__c)); }

  template<class _Traits>
    basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
    { return (__in >> reinterpret_cast<char&>(__c)); }
# 723 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s);

  template<class _Traits>
    basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
    { return (__in >> reinterpret_cast<char*>(__s)); }

  template<class _Traits>
    basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
    { return (__in >> reinterpret_cast<char*>(__s)); }
# 745 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
  template<typename _CharT, typename _Traits>
    class basic_iostream
    : public basic_istream<_CharT, _Traits>,
      public basic_ostream<_CharT, _Traits>
    {
    public:



      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;


      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef basic_ostream<_CharT, _Traits> __ostream_type;







      explicit
      basic_iostream(basic_streambuf<_CharT, _Traits>* __sb)
      : __istream_type(), __ostream_type()
      { this->init(__sb); }




      virtual
      ~basic_iostream() { }

    protected:
      explicit
      basic_iostream() : __istream_type(), __ostream_type()
      { }
    };
# 808 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 3
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    ws(basic_istream<_CharT, _Traits>& __is);
}


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/istream.tcc" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/istream.tcc" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/istream.tcc" 3




namespace std
{
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>::sentry::
    sentry(basic_istream<_CharT, _Traits>& __in, bool __noskip) : _M_ok(false)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      if (__in.good())
 {
   if (__in.tie())
     __in.tie()->flush();
   if (!__noskip && (__in.flags() & ios_base::skipws))
     {
       const __int_type __eof = traits_type::eof();
       __streambuf_type* __sb = __in.rdbuf();
       __int_type __c = __sb->sgetc();

       const __ctype_type& __ct = __check_facet(__in._M_ctype);
       while (!traits_type::eq_int_type(__c, __eof)
       && __ct.is(ctype_base::space,
    traits_type::to_char_type(__c)))
  __c = __sb->snextc();




       if (traits_type::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
     }
 }

      if (__in.good() && __err == ios_base::goodbit)
 _M_ok = true;
      else
 {
   __err |= ios_base::failbit;
   __in.setstate(__err);
 }
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(__istream_type& (*__pf)(__istream_type&))
    { return __pf(*this); }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(__ios_type& (*__pf)(__ios_type&))
    {
      __pf(*this);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(ios_base& (*__pf)(ios_base&))
    {
      __pf(*this);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(bool& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(short& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       long __l;
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __l);


       if (!(__err & ios_base::failbit)
    && (numeric_limits<short>::min() <= __l
        && __l <= numeric_limits<short>::max()))
  __n = __l;
       else
                __err |= ios_base::failbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(unsigned short& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(int& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       long __l;
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __l);


       if (!(__err & ios_base::failbit)
    && (numeric_limits<int>::min() <= __l
        && __l <= numeric_limits<int>::max()))
  __n = __l;
       else
                __err |= ios_base::failbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(unsigned int& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(long& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(unsigned long& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(long long& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(unsigned long long& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(float& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(double& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(long double& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(void*& __n)
    {
      sentry __cerb(*this, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __num_get_type& __ng = __check_facet(this->_M_num_get);
       __ng.get(*this, 0, *this, __err, __n);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(__streambuf_type* __sbout)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, false);
      if (__cerb && __sbout)
 {
   try
     {
       if (!__copy_streambufs(this->rdbuf(), __sbout))
  __err |= ios_base::failbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::failbit); }
 }
      else if (!__sbout)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    typename basic_istream<_CharT, _Traits>::int_type
    basic_istream<_CharT, _Traits>::
    get(void)
    {
      const int_type __eof = traits_type::eof();
      int_type __c = __eof;
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       __c = this->rdbuf()->sbumpc();

       if (!traits_type::eq_int_type(__c, __eof))
  _M_gcount = 1;
       else
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return __c;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    get(char_type& __c)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       const int_type __cb = this->rdbuf()->sbumpc();

       if (!traits_type::eq_int_type(__cb, traits_type::eof()))
  {
    _M_gcount = 1;
    __c = traits_type::to_char_type(__cb);
  }
       else
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    get(char_type* __s, streamsize __n, char_type __delim)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       const int_type __idelim = traits_type::to_int_type(__delim);
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();
       int_type __c = __sb->sgetc();

       while (_M_gcount + 1 < __n
       && !traits_type::eq_int_type(__c, __eof)
       && !traits_type::eq_int_type(__c, __idelim))
  {
    *__s++ = traits_type::to_char_type(__c);
    ++_M_gcount;
    __c = __sb->snextc();
  }
       if (traits_type::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }


      if (__n > 0)
 *__s = char_type();
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    get(__streambuf_type& __sb, char_type __delim)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       const int_type __idelim = traits_type::to_int_type(__delim);
       const int_type __eof = traits_type::eof();
       __streambuf_type* __this_sb = this->rdbuf();
       int_type __c = __this_sb->sgetc();
       char_type __c2 = traits_type::to_char_type(__c);

       while (!traits_type::eq_int_type(__c, __eof)
       && !traits_type::eq_int_type(__c, __idelim)
       && !traits_type::eq_int_type(__sb.sputc(__c2), __eof))
  {
    ++_M_gcount;
    __c = __this_sb->snextc();
    __c2 = traits_type::to_char_type(__c);
  }
       if (traits_type::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    getline(char_type* __s, streamsize __n, char_type __delim)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
        {
          try
            {
              const int_type __idelim = traits_type::to_int_type(__delim);
              const int_type __eof = traits_type::eof();
              __streambuf_type* __sb = this->rdbuf();
              int_type __c = __sb->sgetc();

              while (_M_gcount + 1 < __n
                     && !traits_type::eq_int_type(__c, __eof)
                     && !traits_type::eq_int_type(__c, __idelim))
                {
                  *__s++ = traits_type::to_char_type(__c);
                  __c = __sb->snextc();
                  ++_M_gcount;
                }
              if (traits_type::eq_int_type(__c, __eof))
                __err |= ios_base::eofbit;
              else
                {
                  if (traits_type::eq_int_type(__c, __idelim))
                    {
                      __sb->sbumpc();
                      ++_M_gcount;
                    }
                  else
                    __err |= ios_base::failbit;
                }
            }
          catch(...)
            { this->_M_setstate(ios_base::badbit); }
        }


      if (__n > 0)
 *__s = char_type();
      if (!_M_gcount)
        __err |= ios_base::failbit;
      if (__err)
        this->setstate(__err);
      return *this;
    }




  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    ignore(void)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();

       if (traits_type::eq_int_type(__sb->sbumpc(), __eof))
  __err |= ios_base::eofbit;
       else
  _M_gcount = 1;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    ignore(streamsize __n)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb && __n > 0)
        {
          ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
          try
            {
              const int_type __eof = traits_type::eof();
              __streambuf_type* __sb = this->rdbuf();
              int_type __c = __sb->sgetc();
# 692 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/istream.tcc" 3
       bool __large_ignore = false;
       while (true)
  {
    while (_M_gcount < __n
    && !traits_type::eq_int_type(__c, __eof))
      {
        ++_M_gcount;
        __c = __sb->snextc();
      }
    if (__n == numeric_limits<streamsize>::max()
        && !traits_type::eq_int_type(__c, __eof))
      {
        _M_gcount = numeric_limits<streamsize>::min();
        __large_ignore = true;
      }
    else
      break;
  }

       if (__large_ignore)
  _M_gcount = numeric_limits<streamsize>::max();

       if (traits_type::eq_int_type(__c, __eof))
                __err |= ios_base::eofbit;
            }
          catch(...)
            { this->_M_setstate(ios_base::badbit); }
          if (__err)
            this->setstate(__err);
        }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    ignore(streamsize __n, int_type __delim)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb && __n > 0)
        {
          ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
          try
            {
              const int_type __eof = traits_type::eof();
              __streambuf_type* __sb = this->rdbuf();
              int_type __c = __sb->sgetc();


       bool __large_ignore = false;
       while (true)
  {
    while (_M_gcount < __n
    && !traits_type::eq_int_type(__c, __eof)
    && !traits_type::eq_int_type(__c, __delim))
      {
        ++_M_gcount;
        __c = __sb->snextc();
      }
    if (__n == numeric_limits<streamsize>::max()
        && !traits_type::eq_int_type(__c, __eof)
        && !traits_type::eq_int_type(__c, __delim))
      {
        _M_gcount = numeric_limits<streamsize>::min();
        __large_ignore = true;
      }
    else
      break;
  }

       if (__large_ignore)
  _M_gcount = numeric_limits<streamsize>::max();

              if (traits_type::eq_int_type(__c, __eof))
                __err |= ios_base::eofbit;
       else if (traits_type::eq_int_type(__c, __delim))
  {
    if (_M_gcount < numeric_limits<streamsize>::max())
      ++_M_gcount;
    __sb->sbumpc();
  }
            }
          catch(...)
            { this->_M_setstate(ios_base::badbit); }
          if (__err)
            this->setstate(__err);
        }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    typename basic_istream<_CharT, _Traits>::int_type
    basic_istream<_CharT, _Traits>::
    peek(void)
    {
      int_type __c = traits_type::eof();
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       __c = this->rdbuf()->sgetc();
       if (traits_type::eq_int_type(__c, traits_type::eof()))
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return __c;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    read(char_type* __s, streamsize __n)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       _M_gcount = this->rdbuf()->sgetn(__s, __n);
       if (_M_gcount != __n)
  __err |= (ios_base::eofbit | ios_base::failbit);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    streamsize
    basic_istream<_CharT, _Traits>::
    readsome(char_type* __s, streamsize __n)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {

       const streamsize __num = this->rdbuf()->in_avail();
       if (__num > 0)
  _M_gcount = this->rdbuf()->sgetn(__s, std::min(__num, __n));
       else if (__num == -1)
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return _M_gcount;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    putback(char_type __c)
    {


      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();
       if (!__sb
    || traits_type::eq_int_type(__sb->sputbackc(__c), __eof))
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    unget(void)
    {


      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();
       if (!__sb
    || traits_type::eq_int_type(__sb->sungetc(), __eof))
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    int
    basic_istream<_CharT, _Traits>::
    sync(void)
    {


      int __ret = -1;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       __streambuf_type* __sb = this->rdbuf();
       if (__sb)
  {
    if (__sb->pubsync() == -1)
      __err |= ios_base::badbit;
    else
      __ret = 0;
  }
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_istream<_CharT, _Traits>::pos_type
    basic_istream<_CharT, _Traits>::
    tellg(void)
    {


      pos_type __ret = pos_type(-1);
      try
 {
   if (!this->fail())
     __ret = this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::in);
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    seekg(pos_type __pos)
    {


      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {

       const pos_type __p = this->rdbuf()->pubseekpos(__pos,
            ios_base::in);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    seekg(off_type __off, ios_base::seekdir __dir)
    {


      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {

       const pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,
            ios_base::in);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::int_type __int_type;

      typename __istream_type::sentry __cerb(__in, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __int_type __cb = __in.rdbuf()->sbumpc();
       if (!_Traits::eq_int_type(__cb, _Traits::eof()))
  __c = _Traits::to_char_type(__cb);
       else
  __err |= (ios_base::eofbit | ios_base::failbit);
     }
   catch(...)
     { __in._M_setstate(ios_base::badbit); }
   if (__err)
     __in.setstate(__err);
 }
      return __in;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename _Traits::int_type int_type;
      typedef _CharT char_type;
      typedef ctype<_CharT> __ctype_type;

      streamsize __extracted = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      typename __istream_type::sentry __cerb(__in, false);
      if (__cerb)
 {
   try
     {

       streamsize __num = __in.width();
       if (__num <= 0)
  __num = numeric_limits<streamsize>::max();

       const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());

       const int_type __eof = _Traits::eof();
       __streambuf_type* __sb = __in.rdbuf();
       int_type __c = __sb->sgetc();

       while (__extracted < __num - 1
       && !_Traits::eq_int_type(__c, __eof)
       && !__ct.is(ctype_base::space,
     _Traits::to_char_type(__c)))
  {
    *__s++ = _Traits::to_char_type(__c);
    ++__extracted;
    __c = __sb->snextc();
  }
       if (_Traits::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;



       *__s = char_type();
       __in.width(0);
     }
   catch(...)
     { __in._M_setstate(ios_base::badbit); }
 }
      if (!__extracted)
 __err |= ios_base::failbit;
      if (__err)
 __in.setstate(__err);
      return __in;
    }


  template<typename _CharT, typename _Traits>
    basic_istream<_CharT,_Traits>&
    ws(basic_istream<_CharT,_Traits>& __in)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef typename __istream_type::int_type __int_type;

      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
      const __int_type __eof = _Traits::eof();
      __streambuf_type* __sb = __in.rdbuf();
      __int_type __c = __sb->sgetc();

      while (!_Traits::eq_int_type(__c, __eof)
      && __ct.is(ctype_base::space, _Traits::to_char_type(__c)))
 __c = __sb->snextc();

       if (_Traits::eq_int_type(__c, __eof))
  __in.setstate(ios_base::eofbit);
      return __in;
    }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in,
        basic_string<_CharT, _Traits, _Alloc>& __str)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::int_type __int_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;

      __size_type __extracted = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      typename __istream_type::sentry __cerb(__in, false);
      if (__cerb)
 {
   try
     {

       __str.erase();
       _CharT __buf[128];
       __size_type __len = 0;
       const streamsize __w = __in.width();
       const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
                                : __str.max_size();
       const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
       const __int_type __eof = _Traits::eof();
       __streambuf_type* __sb = __in.rdbuf();
       __int_type __c = __sb->sgetc();

       while (__extracted < __n
       && !_Traits::eq_int_type(__c, __eof)
       && !__ct.is(ctype_base::space, _Traits::to_char_type(__c)))
  {
    if (__len == sizeof(__buf) / sizeof(_CharT))
      {
        __str.append(__buf, sizeof(__buf) / sizeof(_CharT));
        __len = 0;
      }
    __buf[__len++] = _Traits::to_char_type(__c);
    ++__extracted;
    __c = __sb->snextc();
  }
       __str.append(__buf, __len);

       if (_Traits::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
       __in.width(0);
     }
   catch(...)
     {



       __in._M_setstate(ios_base::badbit);
     }
 }

      if (!__extracted)
 __err |= ios_base::failbit;
      if (__err)
 __in.setstate(__err);
      return __in;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    getline(basic_istream<_CharT, _Traits>& __in,
     basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::int_type __int_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str.max_size();
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      typename __istream_type::sentry __cerb(__in, true);
      if (__cerb)
 {
   try
     {
       __str.erase();
       const __int_type __idelim = _Traits::to_int_type(__delim);
       const __int_type __eof = _Traits::eof();
       __streambuf_type* __sb = __in.rdbuf();
       __int_type __c = __sb->sgetc();

       while (__extracted < __n
       && !_Traits::eq_int_type(__c, __eof)
       && !_Traits::eq_int_type(__c, __idelim))
  {
    __str += _Traits::to_char_type(__c);
    ++__extracted;
    __c = __sb->snextc();
  }

       if (_Traits::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
       else if (_Traits::eq_int_type(__c, __idelim))
  {
    ++__extracted;
    __sb->sbumpc();
  }
       else
  __err |= ios_base::failbit;
     }
   catch(...)
     {



       __in._M_setstate(ios_base::badbit);
     }
 }
      if (!__extracted)
 __err |= ios_base::failbit;
      if (__err)
 __in.setstate(__err);
      return __in;
    }

  template<class _CharT, class _Traits, class _Alloc>
    inline basic_istream<_CharT,_Traits>&
    getline(basic_istream<_CharT, _Traits>& __in,
     basic_string<_CharT,_Traits,_Alloc>& __str)
    { return getline(__in, __str, __in.widen('\n')); }





  extern template class basic_istream<char>;
  extern template istream& ws(istream&);
  extern template istream& operator>>(istream&, char&);
  extern template istream& operator>>(istream&, char*);
  extern template istream& operator>>(istream&, unsigned char&);
  extern template istream& operator>>(istream&, signed char&);
  extern template istream& operator>>(istream&, unsigned char*);
  extern template istream& operator>>(istream&, signed char*);

  extern template class basic_iostream<char>;
# 1284 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/istream.tcc" 3
}
# 815 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/istream" 2 3
# 46 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 2 3

namespace std
{
# 62 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 3
  extern istream cin;
  extern ostream cout;
  extern ostream cerr;
  extern ostream clog;
# 76 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/iostream" 3
  static ios_base::Init __ioinit;
}
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ResourceManager.h" 2
# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/basic_file.h" 1 3
# 42 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/basic_file.h" 3
       
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/mipsel-linux-uclibc/bits/basic_file.h" 3




namespace std
{

  template<typename _CharT>
    class __basic_file;


  template<>
    class __basic_file<char>
    {

      __c_file* _M_cfile;


      bool _M_cfile_created;

    public:
      __basic_file(__c_lock* __lock = 0);

      __basic_file*
      open(const char* __name, ios_base::openmode __mode, int __prot = 0664);

      __basic_file*
      sys_open(__c_file* __file, ios_base::openmode);

      __basic_file*
      sys_open(int __fd, ios_base::openmode __mode);

      __basic_file*
      close();

      bool
      is_open() const;

      int
      fd();

      __c_file*
      file();

      ~__basic_file();

      streamsize
      xsputn(const char* __s, streamsize __n);

      streamsize
      xsputn_2(const char* __s1, streamsize __n1,
        const char* __s2, streamsize __n2);

      streamsize
      xsgetn(char* __s, streamsize __n);

      streamoff
      seekoff(streamoff __off, ios_base::seekdir __way);

      int
      sync();

      streamsize
      showmanyc();
    };
}
# 49 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 2 3


namespace std
{
# 67 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
  template<typename _CharT, typename _Traits>
    class basic_filebuf : public basic_streambuf<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type::int_type int_type;
      typedef typename traits_type::pos_type pos_type;
      typedef typename traits_type::off_type off_type;

      typedef basic_streambuf<char_type, traits_type> __streambuf_type;
      typedef basic_filebuf<char_type, traits_type> __filebuf_type;
      typedef __basic_file<char> __file_type;
      typedef typename traits_type::state_type __state_type;
      typedef codecvt<char_type, char, __state_type> __codecvt_type;

      friend class ios_base;

    protected:


      __c_lock _M_lock;


      __file_type _M_file;






      ios_base::openmode _M_mode;


      __state_type _M_state_beg;




      __state_type _M_state_cur;



      __state_type _M_state_last;






      char_type* _M_buf;
# 127 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      size_t _M_buf_size;


      bool _M_buf_allocated;
# 141 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      bool _M_reading;
      bool _M_writing;
# 152 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      char_type _M_pback;
      char_type* _M_pback_cur_save;
      char_type* _M_pback_end_save;
      bool _M_pback_init;



      const __codecvt_type* _M_codecvt;
# 168 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      char* _M_ext_buf;






      streamsize _M_ext_buf_size;
# 184 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      const char* _M_ext_next;
      char* _M_ext_end;
# 194 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      void
      _M_create_pback()
      {
 if (!_M_pback_init)
   {
     _M_pback_cur_save = this->gptr();
     _M_pback_end_save = this->egptr();
     this->setg(&_M_pback, &_M_pback, &_M_pback + 1);
     _M_pback_init = true;
   }
      }
# 213 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      void
      _M_destroy_pback() throw()
      {
 if (_M_pback_init)
   {

     _M_pback_cur_save += this->gptr() != this->eback();
     this->setg(_M_buf, _M_pback_cur_save, _M_pback_end_save);
     _M_pback_init = false;
   }
      }

    public:







      basic_filebuf();




      virtual
      ~basic_filebuf()
      { this->close(); }





      bool
      is_open() const throw()
      { return _M_file.is_open(); }
# 263 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      __filebuf_type*
      open(const char* __s, ios_base::openmode __mode);
# 277 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      __filebuf_type*
      close() throw();

    protected:
      void
      _M_allocate_internal_buffer();

      void
      _M_destroy_internal_buffer() throw();


      virtual streamsize
      showmanyc();






      virtual int_type
      underflow();

      virtual int_type
      pbackfail(int_type __c = _Traits::eof());
# 309 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      virtual int_type
      overflow(int_type __c = _Traits::eof());



      bool
      _M_convert_to_external(char_type*, streamsize);
# 329 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      virtual __streambuf_type*
      setbuf(char_type* __s, streamsize __n);

      virtual pos_type
      seekoff(off_type __off, ios_base::seekdir __way,
       ios_base::openmode __mode = ios_base::in | ios_base::out);

      virtual pos_type
      seekpos(pos_type __pos,
       ios_base::openmode __mode = ios_base::in | ios_base::out);


      pos_type
      _M_seek(off_type __off, ios_base::seekdir __way, __state_type __state);

      virtual int
      sync();

      virtual void
      imbue(const locale& __loc);

      virtual streamsize
      xsgetn(char_type* __s, streamsize __n);

      virtual streamsize
      xsputn(const char_type* __s, streamsize __n);


      bool
      _M_terminate_output();
# 374 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      void
      _M_set_buffer(streamsize __off)
      {
  const bool __testin = _M_mode & ios_base::in;
  const bool __testout = _M_mode & ios_base::out;

 if (__testin && __off > 0)
   this->setg(_M_buf, _M_buf, _M_buf + __off);
 else
   this->setg(_M_buf, _M_buf, _M_buf);

 if (__testout && __off == 0 && _M_buf_size > 1 )
   this->setp(_M_buf, _M_buf + _M_buf_size - 1);
 else
   this->setp(__null, __null);
      }
    };
# 401 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
  template<typename _CharT, typename _Traits>
    class basic_ifstream : public basic_istream<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type::int_type int_type;
      typedef typename traits_type::pos_type pos_type;
      typedef typename traits_type::off_type off_type;


      typedef basic_filebuf<char_type, traits_type> __filebuf_type;
      typedef basic_istream<char_type, traits_type> __istream_type;

    private:
      __filebuf_type _M_filebuf;

    public:
# 428 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      basic_ifstream() : __istream_type(), _M_filebuf()
      { this->init(&_M_filebuf); }
# 441 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      explicit
      basic_ifstream(const char* __s, ios_base::openmode __mode = ios_base::in)
      : __istream_type(), _M_filebuf()
      {
 this->init(&_M_filebuf);
 this->open(__s, __mode);
      }







      ~basic_ifstream()
      { }
# 465 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      __filebuf_type*
      rdbuf() const
      { return const_cast<__filebuf_type*>(&_M_filebuf); }





      bool
      is_open()
      { return _M_filebuf.is_open(); }



      bool
      is_open() const
      { return _M_filebuf.is_open(); }
# 494 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      void
      open(const char* __s, ios_base::openmode __mode = ios_base::in)
      {
 if (!_M_filebuf.open(__s, __mode | ios_base::in))
   this->setstate(ios_base::failbit);
 else


   this->clear();
      }







      void
      close()
      {
 if (!_M_filebuf.close())
   this->setstate(ios_base::failbit);
      }
    };
# 529 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
  template<typename _CharT, typename _Traits>
    class basic_ofstream : public basic_ostream<_CharT,_Traits>
    {
    public:

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type::int_type int_type;
      typedef typename traits_type::pos_type pos_type;
      typedef typename traits_type::off_type off_type;


      typedef basic_filebuf<char_type, traits_type> __filebuf_type;
      typedef basic_ostream<char_type, traits_type> __ostream_type;

    private:
      __filebuf_type _M_filebuf;

    public:
# 556 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      basic_ofstream(): __ostream_type(), _M_filebuf()
      { this->init(&_M_filebuf); }
# 570 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      explicit
      basic_ofstream(const char* __s,
       ios_base::openmode __mode = ios_base::out|ios_base::trunc)
      : __ostream_type(), _M_filebuf()
      {
 this->init(&_M_filebuf);
 this->open(__s, __mode);
      }







      ~basic_ofstream()
      { }
# 595 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      __filebuf_type*
      rdbuf() const
      { return const_cast<__filebuf_type*>(&_M_filebuf); }





      bool
      is_open()
      { return _M_filebuf.is_open(); }



      bool
      is_open() const
      { return _M_filebuf.is_open(); }
# 624 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      void
      open(const char* __s,
    ios_base::openmode __mode = ios_base::out | ios_base::trunc)
      {
 if (!_M_filebuf.open(__s, __mode | ios_base::out))
   this->setstate(ios_base::failbit);
 else


   this->clear();
      }







      void
      close()
      {
 if (!_M_filebuf.close())
   this->setstate(ios_base::failbit);
      }
    };
# 660 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
  template<typename _CharT, typename _Traits>
    class basic_fstream : public basic_iostream<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type::int_type int_type;
      typedef typename traits_type::pos_type pos_type;
      typedef typename traits_type::off_type off_type;


      typedef basic_filebuf<char_type, traits_type> __filebuf_type;
      typedef basic_ios<char_type, traits_type> __ios_type;
      typedef basic_iostream<char_type, traits_type> __iostream_type;

    private:
      __filebuf_type _M_filebuf;

    public:
# 688 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      basic_fstream()
      : __iostream_type(), _M_filebuf()
      { this->init(&_M_filebuf); }
# 700 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      explicit
      basic_fstream(const char* __s,
      ios_base::openmode __mode = ios_base::in | ios_base::out)
      : __iostream_type(__null), _M_filebuf()
      {
 this->init(&_M_filebuf);
 this->open(__s, __mode);
      }







      ~basic_fstream()
      { }
# 725 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      __filebuf_type*
      rdbuf() const
      { return const_cast<__filebuf_type*>(&_M_filebuf); }





      bool
      is_open()
      { return _M_filebuf.is_open(); }



      bool
      is_open() const
      { return _M_filebuf.is_open(); }
# 754 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 3
      void
      open(const char* __s,
    ios_base::openmode __mode = ios_base::in | ios_base::out)
      {
 if (!_M_filebuf.open(__s, __mode))
   this->setstate(ios_base::failbit);
 else


   this->clear();
      }







      void
      close()
      {
 if (!_M_filebuf.close())
   this->setstate(ios_base::failbit);
      }
    };
}


# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/fstream.tcc" 1 3
# 43 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/fstream.tcc" 3
       
# 44 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/fstream.tcc" 3

namespace std
{
  template<typename _CharT, typename _Traits>
    void
    basic_filebuf<_CharT, _Traits>::
    _M_allocate_internal_buffer()
    {


      if (!_M_buf_allocated && !_M_buf)
 {
   _M_buf = new char_type[_M_buf_size];
   _M_buf_allocated = true;
 }
    }

  template<typename _CharT, typename _Traits>
    void
    basic_filebuf<_CharT, _Traits>::
    _M_destroy_internal_buffer() throw()
    {
      if (_M_buf_allocated)
 {
   delete [] _M_buf;
   _M_buf = __null;
   _M_buf_allocated = false;
 }
      delete [] _M_ext_buf;
      _M_ext_buf = __null;
      _M_ext_buf_size = 0;
      _M_ext_next = __null;
      _M_ext_end = __null;
    }

  template<typename _CharT, typename _Traits>
    basic_filebuf<_CharT, _Traits>::
    basic_filebuf() : __streambuf_type(), _M_lock(), _M_file(&_M_lock),
    _M_mode(ios_base::openmode(0)), _M_state_beg(), _M_state_cur(),
    _M_state_last(), _M_buf(__null), _M_buf_size(4096),
    _M_buf_allocated(false), _M_reading(false), _M_writing(false), _M_pback(),
    _M_pback_cur_save(0), _M_pback_end_save(0), _M_pback_init(false),
    _M_codecvt(0), _M_ext_buf(0), _M_ext_buf_size(0), _M_ext_next(0),
    _M_ext_end(0)
    {
      if (has_facet<__codecvt_type>(this->_M_buf_locale))
 _M_codecvt = &use_facet<__codecvt_type>(this->_M_buf_locale);
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::__filebuf_type*
    basic_filebuf<_CharT, _Traits>::
    open(const char* __s, ios_base::openmode __mode)
    {
      __filebuf_type *__ret = __null;
      if (!this->is_open())
 {
   _M_file.open(__s, __mode);
   if (this->is_open())
     {
       _M_allocate_internal_buffer();
       _M_mode = __mode;


       _M_reading = false;
       _M_writing = false;
       _M_set_buffer(-1);


       _M_state_last = _M_state_cur = _M_state_beg;


       if ((__mode & ios_base::ate)
    && this->seekoff(0, ios_base::end, __mode)
    == pos_type(off_type(-1)))
  this->close();
       else
  __ret = this;
     }
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::__filebuf_type*
    basic_filebuf<_CharT, _Traits>::
    close() throw()
    {
      __filebuf_type* __ret = __null;
      if (this->is_open())
 {
   bool __testfail = false;
   try
     {
       if (!_M_terminate_output())
  __testfail = true;
     }
   catch(...)
     { __testfail = true; }


   _M_mode = ios_base::openmode(0);
   _M_pback_init = false;
   _M_destroy_internal_buffer();
   _M_reading = false;
   _M_writing = false;
   _M_set_buffer(-1);
   _M_state_last = _M_state_cur = _M_state_beg;

   if (!_M_file.close())
     __testfail = true;

   if (!__testfail)
     __ret = this;
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    streamsize
    basic_filebuf<_CharT, _Traits>::
    showmanyc()
    {
      streamsize __ret = -1;
      const bool __testin = _M_mode & ios_base::in;
      if (__testin && this->is_open())
 {


   __ret = this->egptr() - this->gptr();







   if (__check_facet(_M_codecvt).encoding() >= 0)

     __ret += _M_file.showmanyc() / _M_codecvt->max_length();
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::int_type
    basic_filebuf<_CharT, _Traits>::
    underflow()
    {
      int_type __ret = traits_type::eof();
      const bool __testin = _M_mode & ios_base::in;
      if (__testin && !_M_writing)
 {



   _M_destroy_pback();

   if (this->gptr() < this->egptr())
     return traits_type::to_int_type(*this->gptr());


   const size_t __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;


   bool __got_eof = false;

   streamsize __ilen = 0;
   codecvt_base::result __r = codecvt_base::ok;
   if (__check_facet(_M_codecvt).always_noconv())
     {
       __ilen = _M_file.xsgetn(reinterpret_cast<char*>(this->eback()),
          __buflen);
       if (__ilen == 0)
  __got_eof = true;
     }
   else
     {


       const int __enc = _M_codecvt->encoding();
       streamsize __blen;
       streamsize __rlen;
       if (__enc > 0)
  __blen = __rlen = __buflen * __enc;
       else
  {
    __blen = __buflen + _M_codecvt->max_length() - 1;
    __rlen = __buflen;
  }
       const streamsize __remainder = _M_ext_end - _M_ext_next;
       __rlen = __rlen > __remainder ? __rlen - __remainder : 0;



       if (_M_reading && this->egptr() == this->eback() && __remainder)
  __rlen = 0;



       if (_M_ext_buf_size < __blen)
  {
    char* __buf = new char[__blen];
    if (__remainder)
      std::memcpy(__buf, _M_ext_next, __remainder);

    delete [] _M_ext_buf;
    _M_ext_buf = __buf;
    _M_ext_buf_size = __blen;
  }
       else if (__remainder)
  std::memmove(_M_ext_buf, _M_ext_next, __remainder);

       _M_ext_next = _M_ext_buf;
       _M_ext_end = _M_ext_buf + __remainder;
       _M_state_last = _M_state_cur;

       do
  {
    if (__rlen > 0)
      {



        if (_M_ext_end - _M_ext_buf + __rlen > _M_ext_buf_size)
   {
     __throw_ios_failure(("basic_filebuf::underflow " "codecvt::max_length() " "is not valid"));


   }
        streamsize __elen = _M_file.xsgetn(_M_ext_end, __rlen);
        if (__elen == 0)
   __got_eof = true;
        else if (__elen == -1)
   break;
        _M_ext_end += __elen;
      }

    char_type* __iend;
    __r = _M_codecvt->in(_M_state_cur, _M_ext_next,
           _M_ext_end, _M_ext_next, this->eback(),
           this->eback() + __buflen, __iend);
    if (__r == codecvt_base::noconv)
      {
        size_t __avail = _M_ext_end - _M_ext_buf;
        __ilen = std::min(__avail, __buflen);
        traits_type::copy(this->eback(),
     reinterpret_cast<char_type*>(_M_ext_buf), __ilen);
        _M_ext_next = _M_ext_buf + __ilen;
      }
    else
      __ilen = __iend - this->eback();




    if (__r == codecvt_base::error)
      break;

    __rlen = 1;
  }
       while (__ilen == 0 && !__got_eof);
     }

   if (__ilen > 0)
     {
       _M_set_buffer(__ilen);
       _M_reading = true;
       __ret = traits_type::to_int_type(*this->gptr());
     }
   else if (__got_eof)
     {



       _M_set_buffer(-1);
       _M_reading = false;


       if (__r == codecvt_base::partial)
  __throw_ios_failure(("basic_filebuf::underflow " "incomplete character in file"));

     }
   else if (__r == codecvt_base::error)
     __throw_ios_failure(("basic_filebuf::underflow " "invalid byte sequence in file"));

   else
     __throw_ios_failure(("basic_filebuf::underflow " "error reading the file"));

 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::int_type
    basic_filebuf<_CharT, _Traits>::
    pbackfail(int_type __i)
    {
      int_type __ret = traits_type::eof();
      const bool __testin = _M_mode & ios_base::in;
      if (__testin && !_M_writing)
 {


   const bool __testpb = _M_pback_init;
   const bool __testeof = traits_type::eq_int_type(__i, __ret);
   int_type __tmp;
   if (this->eback() < this->gptr())
     {
       this->gbump(-1);
       __tmp = traits_type::to_int_type(*this->gptr());
     }
   else if (this->seekoff(-1, ios_base::cur) != pos_type(off_type(-1)))
     {
       __tmp = this->underflow();
       if (traits_type::eq_int_type(__tmp, __ret))
  return __ret;
     }
   else
     {





       return __ret;
     }



   if (!__testeof && traits_type::eq_int_type(__i, __tmp))
     __ret = __i;
   else if (__testeof)
     __ret = traits_type::not_eof(__i);
   else if (!__testpb)
     {
       _M_create_pback();
       _M_reading = true;
       *this->gptr() = traits_type::to_char_type(__i);
       __ret = __i;
     }
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::int_type
    basic_filebuf<_CharT, _Traits>::
    overflow(int_type __c)
    {
      int_type __ret = traits_type::eof();
      const bool __testeof = traits_type::eq_int_type(__c, __ret);
      const bool __testout = _M_mode & ios_base::out;
      if (__testout && !_M_reading)
 {
   if (this->pbase() < this->pptr())
     {

       if (!__testeof)
  {
    *this->pptr() = traits_type::to_char_type(__c);
    this->pbump(1);
  }



       if (_M_convert_to_external(this->pbase(),
      this->pptr() - this->pbase()))
  {
    _M_set_buffer(0);
    __ret = traits_type::not_eof(__c);
  }
     }
   else if (_M_buf_size > 1)
     {



       _M_set_buffer(0);
       _M_writing = true;
       if (!__testeof)
  {
    *this->pptr() = traits_type::to_char_type(__c);
    this->pbump(1);
  }
       __ret = traits_type::not_eof(__c);
     }
   else
     {

       char_type __conv = traits_type::to_char_type(__c);
       if (__testeof || _M_convert_to_external(&__conv, 1))
  {
    _M_writing = true;
    __ret = traits_type::not_eof(__c);
  }
     }
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    bool
    basic_filebuf<_CharT, _Traits>::
    _M_convert_to_external(_CharT* __ibuf, streamsize __ilen)
    {

      streamsize __elen;
      streamsize __plen;
      if (__check_facet(_M_codecvt).always_noconv())
 {
   __elen = _M_file.xsputn(reinterpret_cast<char*>(__ibuf), __ilen);
   __plen = __ilen;
 }
      else
 {


   streamsize __blen = __ilen * _M_codecvt->max_length();
   char* __buf = static_cast<char*>(__builtin_alloca(__blen));

   char* __bend;
   const char_type* __iend;
   codecvt_base::result __r;
   __r = _M_codecvt->out(_M_state_cur, __ibuf, __ibuf + __ilen,
    __iend, __buf, __buf + __blen, __bend);

   if (__r == codecvt_base::ok || __r == codecvt_base::partial)
     __blen = __bend - __buf;
   else if (__r == codecvt_base::noconv)
     {

       __buf = reinterpret_cast<char*>(__ibuf);
       __blen = __ilen;
     }
   else
     __throw_ios_failure(("basic_filebuf::_M_convert_to_external " "conversion error"));


   __elen = _M_file.xsputn(__buf, __blen);
   __plen = __blen;


   if (__r == codecvt_base::partial && __elen == __plen)
     {
       const char_type* __iresume = __iend;
       streamsize __rlen = this->pptr() - __iend;
       __r = _M_codecvt->out(_M_state_cur, __iresume,
        __iresume + __rlen, __iend, __buf,
        __buf + __blen, __bend);
       if (__r != codecvt_base::error)
  {
    __rlen = __bend - __buf;
    __elen = _M_file.xsputn(__buf, __rlen);
    __plen = __rlen;
  }
       else
  __throw_ios_failure(("basic_filebuf::_M_convert_to_external " "conversion error"));

     }
 }
      return __elen == __plen;
    }

   template<typename _CharT, typename _Traits>
     streamsize
     basic_filebuf<_CharT, _Traits>::
     xsgetn(_CharT* __s, streamsize __n)
     {

       streamsize __ret = 0;
       if (_M_pback_init)
  {
    if (__n > 0 && this->gptr() == this->eback())
      {
        *__s++ = *this->gptr();
        this->gbump(1);
        __ret = 1;
        --__n;
      }
    _M_destroy_pback();
  }




       const bool __testin = _M_mode & ios_base::in;
       const streamsize __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;

       if (__n > __buflen && __check_facet(_M_codecvt).always_noconv()
    && __testin && !_M_writing)
  {

    const streamsize __avail = this->egptr() - this->gptr();
    if (__avail != 0)
      {
        if (__avail == 1)
   *__s = *this->gptr();
        else
   traits_type::copy(__s, this->gptr(), __avail);
        __s += __avail;
        this->gbump(__avail);
        __ret += __avail;
        __n -= __avail;
      }



    streamsize __len;
    for (;;)
      {
        __len = _M_file.xsgetn(reinterpret_cast<char*>(__s),
          __n);
        if (__len == -1)
   __throw_ios_failure(("basic_filebuf::xsgetn " "error reading the file"));

        if (__len == 0)
   break;

        __n -= __len;
        __ret += __len;
        if (__n == 0)
   break;

        __s += __len;
      }

    if (__n == 0)
      {
        _M_set_buffer(0);
        _M_reading = true;
      }
    else if (__len == 0)
      {



        _M_set_buffer(-1);
        _M_reading = false;
      }
  }
       else
  __ret += __streambuf_type::xsgetn(__s, __n);

       return __ret;
     }

   template<typename _CharT, typename _Traits>
     streamsize
     basic_filebuf<_CharT, _Traits>::
     xsputn(const _CharT* __s, streamsize __n)
     {



       streamsize __ret = 0;
       const bool __testout = _M_mode & ios_base::out;
       if (__check_facet(_M_codecvt).always_noconv()
    && __testout && !_M_reading)
 {

   const streamsize __chunk = 1ul << 10;
   streamsize __bufavail = this->epptr() - this->pptr();


   if (!_M_writing && _M_buf_size > 1)
     __bufavail = _M_buf_size - 1;

   const streamsize __limit = std::min(__chunk, __bufavail);
   if (__n >= __limit)
     {
       const streamsize __buffill = this->pptr() - this->pbase();
       const char* __buf = reinterpret_cast<const char*>(this->pbase());
       __ret = _M_file.xsputn_2(__buf, __buffill,
           reinterpret_cast<const char*>(__s),
           __n);
       if (__ret == __buffill + __n)
  {
    _M_set_buffer(0);
    _M_writing = true;
  }
       if (__ret > __buffill)
  __ret -= __buffill;
       else
  __ret = 0;
     }
   else
     __ret = __streambuf_type::xsputn(__s, __n);
 }
       else
  __ret = __streambuf_type::xsputn(__s, __n);
       return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::__streambuf_type*
    basic_filebuf<_CharT, _Traits>::
    setbuf(char_type* __s, streamsize __n)
    {
      if (!this->is_open())
 if (__s == 0 && __n == 0)
   _M_buf_size = 1;
 else if (__s && __n > 0)
   {
# 656 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/fstream.tcc" 3
     _M_buf = __s;
     _M_buf_size = __n;
   }
      return this;
    }




  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::pos_type
    basic_filebuf<_CharT, _Traits>::
    seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode)
    {
      int __width = 0;
      if (_M_codecvt)
 __width = _M_codecvt->encoding();
      if (__width < 0)
 __width = 0;

      pos_type __ret = pos_type(off_type(-1));
      const bool __testfail = __off != 0 && __width <= 0;
      if (this->is_open() && !__testfail)
 {

   _M_destroy_pback();






   __state_type __state = _M_state_beg;
   off_type __computed_off = __off * __width;
   if (_M_reading && __way == ios_base::cur)
     {
       if (_M_codecvt->always_noconv())
  __computed_off += this->gptr() - this->egptr();
       else
  {



    const int __gptr_off =
      _M_codecvt->length(_M_state_last, _M_ext_buf, _M_ext_next,
           this->gptr() - this->eback());
    __computed_off += _M_ext_buf + __gptr_off - _M_ext_end;



    __state = _M_state_last;
  }
     }
   __ret = _M_seek(__computed_off, __way, __state);
 }
      return __ret;
    }





  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::pos_type
    basic_filebuf<_CharT, _Traits>::
    seekpos(pos_type __pos, ios_base::openmode)
    {
      pos_type __ret = pos_type(off_type(-1));
      if (this->is_open())
 {

   _M_destroy_pback();
   __ret = _M_seek(off_type(__pos), ios_base::beg, __pos.state());
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_filebuf<_CharT, _Traits>::pos_type
    basic_filebuf<_CharT, _Traits>::
    _M_seek(off_type __off, ios_base::seekdir __way, __state_type __state)
    {
      pos_type __ret = pos_type(off_type(-1));
      if (_M_terminate_output())
 {

   __ret = pos_type(_M_file.seekoff(__off, __way));
   _M_reading = false;
   _M_writing = false;
   _M_ext_next = _M_ext_end = _M_ext_buf;
   _M_set_buffer(-1);
   _M_state_cur = __state;
   __ret.state(_M_state_cur);
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    bool
    basic_filebuf<_CharT, _Traits>::
    _M_terminate_output()
    {

      bool __testvalid = true;
      if (this->pbase() < this->pptr())
 {
   const int_type __tmp = this->overflow();
   if (traits_type::eq_int_type(__tmp, traits_type::eof()))
     __testvalid = false;
 }


      if (_M_writing && !__check_facet(_M_codecvt).always_noconv()
   && __testvalid)
 {



   const size_t __blen = 128;
   char __buf[__blen];
   codecvt_base::result __r;
   streamsize __ilen = 0;

   do
     {
       char* __next;
       __r = _M_codecvt->unshift(_M_state_cur, __buf,
     __buf + __blen, __next);
       if (__r == codecvt_base::error)
  __testvalid = false;
       else if (__r == codecvt_base::ok ||
         __r == codecvt_base::partial)
  {
    __ilen = __next - __buf;
    if (__ilen > 0)
      {
        const streamsize __elen = _M_file.xsputn(__buf, __ilen);
        if (__elen != __ilen)
   __testvalid = false;
      }
  }
     }
   while (__r == codecvt_base::partial && __ilen > 0 && __testvalid);

   if (__testvalid)
     {




       const int_type __tmp = this->overflow();
       if (traits_type::eq_int_type(__tmp, traits_type::eof()))
  __testvalid = false;
     }
 }
      return __testvalid;
    }

  template<typename _CharT, typename _Traits>
    int
    basic_filebuf<_CharT, _Traits>::
    sync()
    {


      int __ret = 0;
      if (this->pbase() < this->pptr())
 {
   const int_type __tmp = this->overflow();
   if (traits_type::eq_int_type(__tmp, traits_type::eof()))
     __ret = -1;
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    void
    basic_filebuf<_CharT, _Traits>::
    imbue(const locale& __loc)
    {
      bool __testvalid = true;

      const __codecvt_type* _M_codecvt_tmp = 0;
      if (__builtin_expect(has_facet<__codecvt_type>(__loc), true))
 _M_codecvt_tmp = &use_facet<__codecvt_type>(__loc);

      if (this->is_open())
 {

   if ((_M_reading || _M_writing)
       && __check_facet(_M_codecvt).encoding() == -1)
     __testvalid = false;
   else
     {
       if (_M_reading)
  {
    if (__check_facet(_M_codecvt).always_noconv())
      {
        if (_M_codecvt_tmp
     && !__check_facet(_M_codecvt_tmp).always_noconv())
   __testvalid = this->seekoff(0, ios_base::cur, _M_mode)
                 != pos_type(off_type(-1));
      }
    else
      {

        _M_ext_next = _M_ext_buf
   + _M_codecvt->length(_M_state_last, _M_ext_buf, _M_ext_next,
          this->gptr() - this->eback());
        const streamsize __remainder = _M_ext_end - _M_ext_next;
        if (__remainder)
   std::memmove(_M_ext_buf, _M_ext_next, __remainder);

        _M_ext_next = _M_ext_buf;
        _M_ext_end = _M_ext_buf + __remainder;
        _M_set_buffer(-1);
        _M_state_last = _M_state_cur = _M_state_beg;
      }
  }
       else if (_M_writing && (__testvalid = _M_terminate_output()))
  _M_set_buffer(-1);
     }
 }

      if (__testvalid)
 _M_codecvt = _M_codecvt_tmp;
      else
 _M_codecvt = 0;
    }





  extern template class basic_filebuf<char>;
  extern template class basic_ifstream<char>;
  extern template class basic_ofstream<char>;
  extern template class basic_fstream<char>;
# 902 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/bits/fstream.tcc" 3
}
# 783 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../include/c++/4.0.4/fstream" 2 3
# 10 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ResourceManager.h" 2


namespace HWICS
{
    class RM_ItemInfo
    {
    public:
        RM_ItemInfo();
        RM_ItemInfo(const RM_ItemInfo &);
        ~RM_ItemInfo();

        RM_ItemInfo & operator=(const RM_ItemInfo &);
        HYI64 Read(const std::string &path, char *pBuf, const HYI64 BufSize);
        HYI64 Write(const std::string &path, const char *pBuf, const HYI64 BufSize);

    private:
        HYI64 m_CheckSum;
        HYI64 m_Size;
        std::string m_ObjectID;
        std::string m_FileName;
        friend class RM_Server;
        friend class ResourceManager;
        friend std::fstream & operator<<(std::fstream & iof, const RM_ItemInfo &);
        friend std::fstream & operator>>(std::fstream & iof, RM_ItemInfo &);
    };
    std::fstream & operator<<(std::fstream & iof, const RM_ItemInfo &);
    std::fstream & operator>>(std::fstream & iof, RM_ItemInfo &);

    class RM_Server
    {
    public:
        RM_Server();
        RM_Server(const char *pDBFilename);
        RM_Server(const RM_Server &);
        ~RM_Server();

        RM_Server & operator=(const RM_Server &);
    private:
        HYI64 m_Size;
        HYBool m_bDirty;
        std::string m_ServerID;
        std::string m_DBFilename;
        std::string m_DBPath;
        std::vector<RM_ItemInfo> m_Items;

        HYBool Save();
        HYI64 QueryMediaSource(const char *pMediaURL, const HYI64 CheckSum);
        HYI64 ReadData(char *pBuf, const HYI64 BufSize, const char *pMediaURL, const HYI64 CheckSum);
        HYI64 WriteData(const char *pBuf, const HYI64 BufSize, const char *pMediaURL, const HYI64 CheckSum);

        friend class ResourceManager;
        friend std::fstream & operator<<(std::fstream & iof, const RM_Server &);
        friend std::fstream & operator>>(std::fstream & iof, RM_Server &);
    };

    std::fstream & operator<<(std::fstream & iof, const RM_Server &);
    std::fstream & operator>>(std::fstream & iof, RM_Server &);

    class RM_ServerInfo
    {
    public:
        RM_ServerInfo();
        RM_ServerInfo(const RM_ServerInfo &);
        ~RM_ServerInfo();

        RM_ServerInfo & operator=(const RM_ServerInfo &);

    private:
        std::string m_DBFilename;
        std::string m_MegaKey;
        time_t m_LastAccess;

        friend class ResourceManager;
        friend std::fstream & operator<<(std::fstream & iof, const RM_ServerInfo &);
        friend std::fstream & operator>>(std::fstream & iof, RM_ServerInfo &);
    };
    std::fstream & operator<<(std::fstream & iof, const RM_ServerInfo &);
    std::fstream & operator>>(std::fstream & iof, RM_ServerInfo &);
# 97 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_ResourceManager.h"
    class ResourceManager
    {
    public:
        ResourceManager();
        ~ResourceManager();

        HYVoid SetBasePath(const HYChar *pBasePath);

        static HYI32 _GenerateMegaDigitalName(HYChar *pNameBuf, const int Length = 8);
        HYI64 ReadData(char *pBuf, const HYI64 BufSize, const char *pServerID, const char *pMediaURL, const HYI64 CheckSum);
        HYI64 WriteData(const char *pBuf, const HYI64 BufSize, const char *pServerID, const char *pMediaURL, const HYI64 CheckSum);
  HYChar * CacheFile(const char *pServerID, const char *pMediaURL, const HYI64 CheckSum);

    private:
        mutable HYBool m_bDirty;
        HYI64 m_TotalSize;
        HYI64 m_MaxSize;
        std::string m_BasePath;
        std::string m_DBFile;
        std::map<std::string, RM_ServerInfo> m_ServerInfo;
        std::string m_CacheServerID[3];
        RM_Server *m_ServerStack[3];
        HYI32 m_AccessIndex;

        HYBool CheckBaseDir(const char *pPath);
        HYBool LoadDBFile(const char *pPath);
        HYBool SaveDBFile(const char *pPath)const;
  HYBool Clear();
        RM_Server * GetServerInfo(const char *pServerID);

        HYI64 QueryMediaSource(const char *pServerID, const char *pMediaURL, const HYI64 CheckSum);
    };
extern ResourceManager g_ResManager;
}
# 16 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_SDF.h" 1



# 1 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 1







# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/poll.h" 1 3 4
# 9 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2





# 1 "/opt/smp86xx/smp86xx_toolchain_2.8.2.0/build_mipsel_nofpu/staging_dir/bin-ccache/../lib/gcc/mipsel-linux-uclibc/4.0.4/../../../../mipsel-linux-uclibc/sys-include/errno.h" 1 3 4
# 15 "/home/davidhu/svn.32M/apps/../middleware/HWICS/../HYStdarg.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS_SDF.h" 2



namespace HWICS
{
    class SDFProperty
    {
    public:
        SDFProperty():
        m_Xres(0),
        m_Yres(0),
  m_Refresh(0),
        m_pBGImage(__null)
        {
        };
        SDFProperty(const IXML_Node *pNode);
        ~SDFProperty();

        HYVoid Parse(const IXML_Node *pNode);
  HYBool Draw(HYVoid *pData) const;

    private:
        HYI32 m_Xres;
        HYI32 m_Yres;
  HYI32 m_Refresh;

        Image *m_pBGImage;
        Color m_BGColor;
    };

    class SDF
    {
    public:
        SDF(IXML_Node *pNode);
  SDF(const SDF &rSDF);
        ~SDF();

  const SDFProperty & GetProperty() const
  {
   return m_Property;
  };
  const List & GetList() const
  {
   return m_List;
  };
  const Language & GetLang() const
  {
   return m_Langs;
  };
  HYVoid DrawObjects(HYVoid *pData) const;





        HYVoid GetVersion(HYI32 &rMajor, HYI32 &rMinor, HYI32 &rRelease);



        HYVoid GetSupportVersion(HYI32 &rMajor, HYI32 &rMinor, HYI32 &rRelease);



        HYBool GetSupportOEMVersion(const HYChar * OEMName, HYI32 &rMajor, HYI32 &rMinor, HYI32 &rRelease);

  const HWICS::Menu & GetMenu() const{return m_Menu;};

    protected:
        std::vector<HWICS::Object *> m_pObjs;
        SDFProperty m_Property;
        Language m_Langs;
        List m_List;
  Menu m_Menu;

        HYI32 m_nVersionMajor;
        HYI32 m_nVersionMinor;
        HYI32 m_nVersionRelease;
        const HYI32 m_nSupportVersionMajor;
        const HYI32 m_nSupportVersionMinor;
        const HYI32 m_nSupportVersionRelease;
  friend class Text;
    };
};
# 17 "/home/davidhu/svn.32M/apps/../middleware/HWICS/HWICS.h" 2
# 33 "/home/davidhu/svn.32M/apps/../middleware/HYStdarg.h" 2
# 5 "dma.h" 2
# 1 "/home/davidhu/svn.32M/apps/../middleware/HYHWStdarg.h" 1


# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 1
# 22 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 1
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmem86xxid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmplatform.h" 1
# 89 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmplatform.h"
typedef enum {
 RM_ALIGNMENTNONE =0,
 RM_ALIGNMENT2BYTES=1,
 RM_ALIGNMENT4BYTES=2,
 RM_ALIGNMENT8BYTES=3,
 RM_ALIGNMENTMAX =RM_ALIGNMENT8BYTES,
} RMalignment;
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmfeatures.h" 1
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmarchid.h" 1
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmcompilerid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmcompilerid.h"
typedef unsigned int RMnewOperatorSize;
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmgcc.h" 1
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmgcc.h"
typedef unsigned long long RMuint64;






typedef long long RMint64;
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmcompilerid.h" 2
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmbtypes.h" 1
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmbtypes.h"
extern "C" {
# 34 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmbtypes.h"
typedef unsigned char RMbool;
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmbtypes.h"
typedef unsigned char RMuint8;






typedef signed char RMint8;






typedef unsigned short RMuint16;






typedef short RMint16;






typedef unsigned long RMuint32;




typedef long RMint32;




typedef double RMreal;


typedef char RMascii;



}
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.h" 1
# 31 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.h"
extern "C" {

typedef enum
{
 RM_ERROR_FIRST__ = ('z'-'a')/('N'-'I'),


# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.inc" 1
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.inc"
RM_OK=6,




RM_PENDING=7,

RM_XFER_DONE=8,




RM_ERROR=9,
RM_FATAL=10,
RM_NOTIMPLEMENTED=11,

RM_INVALIDMODE=12,
RM_DEPRECATED=13,
RM_PARAMETER_OUT_OF_RANGE=14,
RM_INVALID_PARAMETER=15,
RM_ACCESS_VIOLATION=16,
RM_INSUFFICIENT_SIZE=17,
RM_NOT_FOUND=18,
RM_NOT_SUPPORTED=19,




RM_ERRORNOSUCHINTERFACE=20,

RM_ERRORINTERFACEWITHNOOWNER=21,




RM_ERRORCREATEINSTANCE=22,




RM_ERROROUTOFFILEDESCRIPTORS=23,

RM_ERROREINTR=24,




RM_FATALEVENT=25,




RM_FATALSEMAPHORE=26,
RM_SEMAPHORELOCKED=27,




RM_FATAL_TOS=28,
RM_TOS_TIMEOUT=29,
RM_TOS_EVENT=30,




RM_FATALCRITSEC=31,

RM_FATALINCONSISTENTCRITICALSECTIONCALL=32,




RM_FATALCONDVAR=33,




RM_FATALCREATETHREAD=34,

RM_FATALTHREADTABLEOVERFLOW=35,




RM_FATALBUFFERTOOSMALL=36,

RM_FATALASKEDZEROSIZEMALLOC=37,

RM_FATALINVALIDPOINTER=38,

RM_FATALMEMORYCORRUPTED=39,

RM_FATALOUTOFMEMORY=40,

RM_ERRORMEMORYISNOTFREE=41,




RM_INVALID_NEW=42,
RM_INVALID_DELETE=43,




RM_ERROROPENFILE=44,

RM_ERRORCLOSEFILE=45,

RM_ERRORWRITEFILE=46,

RM_ERRORREADFILE=47,

RM_ERRORSEEKFILE=48,

RM_ERRORENDOFFILE=49,

RM_ERRORFILELOCKED=50,

RM_ERRORNODIRECTORYENTRY=51,





RM_ERRORDYNAMICLIBOPEN=52,

RM_ERRORDYNAMICLIBGETSYMBOL=53,

RM_ERRORDYNAMICLIBCLOSE=54,




RM_FATALCORELISTNOTVALID=55,




RM_FATALCOREQUEUENOTVALID=56,




RM_FATALCOREPOOLNOTVALID=57,
RM_FATALCOREPOOLLEAKS=58,
RM_FATALCOREPOOLRETURNEDTWICE=59,
RM_FATALCOREPOOLISNOTMINE=60,
RM_FATALCOREPOOLOVERFLOW=61,




RM_FATALQUEUENOTVALID=62,




RM_FATALLISTNOTVALID=63,
RM_LISTISEMPTY=64,




RM_ERROR_KEYISNOTPRESENT=65,




RM_ERRORNOGRAPHINDRIVER=66,

RM_ERRORGRAPHFULL=67,

RM_ERRORGRAPHMISSINGNODEORMODULE=68,

RM_INVALID_URL=69,

RM_UNKNOWN_URL_PREFIX=70,

RM_FATAL_INPUT_CONTROL=71,




RM_OBJECTDELETED=72,



RM_ERRORHARDWARELIBRARY=73,



RM_VIDEOHASPAUSED=74,
RM_ASPECTRATIOCHANGE=75,
RM_ACMODECHANGE=76,
RM_FETCHCC=77,
RM_FETCHDTVCC=78,
RM_FATALHARDWAREABSTRACTIONLAYER=79,




RM_DEMUX_CANNOT_DETECT_AUDIO=80,






RM_ERRORSOCKETINITFAILED=81,

RM_ERRORSOCKETWRONGVERSION=82,

RM_FATALSOCKET=83,





RM_FATALSTRING=84,





RM_BUFFERTOOSMALL=85,





RM_FATALUDP=86,





RM_ERROR_NOT_MP4=87,
RM_MPEG4EOF=88,





RM_ERROR_NOT_DIVX=89,




RM_NEED_MORE_DATA=90,




RM_CANT_REWIND_STREAM=91,
RM_MP3_DECODE_NOTHING=92,
RM_MP3_INCOMPLETE_FRAME=93,




RM_SHIFTSTORAGE_FATAL=94,





RM_HWACCESS_GENERIC_ERROR=95,

RM_HWACCESS_HWLIB_VERSION_MISMATCH=96,





RM_CANT_OPEN_SOCKET=97,





RM_ERROR_REMOTE=98,




RM_INVALID_PROPERTY_MAINSET=99,
RM_INVALID_PROPERTY_SUBSET=100,
RM_INVALID_PROPERTY_ID=101,
RM_PROPERTY_NOT_SUPPORTED=102,
RM_PROPERTY_NOT_SET=103,




RM_OK_HAS_NO_VIDEO=104,

RM_ERROR_NOT_FINISHED=105,

RM_ERROR_INVALID_SECTORS=106,

RM_ERROR_FATAL_INVALID_SECTORS=107,

RM_ERROR_UOP_NOT_ALLOWED=108,



RM_ERROR_QUEUE_COMMAND=109,



RM_ERROR_NOT_SET=110,



RM_ERROR_NO_NEXT_PGC=111,



RM_ERROR_NO_PREV_PGC=112,



RM_ERROR_NO_STILL=113,



RM_ERROR_PARENTAL_CONTROL=114,



RM_ERROR_BAD_COMMAND=115,

RM_ERROR_NOT_FOUND=116,



RM_ERROR_NO_FPPGC=117,



RM_ERROR_ENDOFTITLE_REPEATA=118,
# 375 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.inc"
RM_ERROR_WRONG_PLAY_MODE=119,

RM_ERROR_NAVIGATION_PACK=120,

RM_ERROR_NO_SUCH_MENU=121,

RM_ERROR_NOTHING_TO_DO=122,

RM_ERROR_RPC2_NOT_SET=123,

RM_ERROR_RPC2=124,



RM_ERROR_REGION=125,

RM_ERROR_NO_DISC_IN_DRIVE=126,

RM_ERROR_VIDEO_MODE=127,

RM_ERROR_PLAYING_ALREADY=128,

RM_ERROR_NOT_PLAYING=129,

RM_ERROR_NOT_CONSTRUCTED=130,

RM_ERROR_NOT_PAUSING=131,





RM_NOBUFFER_AVAILABLE=132,




RM_FATAL_COREPOOL_CREATION=133,
RM_FATAL_THREAD_DESTRUCTION=134,
RM_FATAL_THREAD_CREATION=135,




RM_INVALID_BOARD_HANDLE=136,
RM_INVALID_CHIP_HANDLE=137,
RM_INVALID_MODULE_HANDLE=138,
RM_INVALID_PROPERTY_HANDLE=139,




RM_WRONGRTSPANSWER=140,
RM_WRONG_RELIABLE_RTP_STATE=141,
RM_ERROR_BUFFER_TO_SMALL=142,
RM_ERROR_NOT_VOD=143,
RM_ERROR_STATE=144,
RM_UNSUPPORTED_SPEED=145,




RM_DRM_UNKNOWN_TYPE=146,
RM_DRM_INVALID_KEY=147,
RM_DRM_DECRYPTION_FAILED=148,
RM_DRM_EXPIRED_RENTAL=149,
RM_DRM_UNAUTHORIZED_USER=150,
RM_DRM_INVALID_FILE=151,





RM_ERROR_COMMAND_PENDING=152,

RM_ERROR_INVALID_COMMAND=153,

RM_ERROR_INVALID_MESSAGE=154,





RM_STATE_NOT_SUPPORTED=155,

RM_ERROR_PARSER=156,





RM_INSERT_OTHER_DISC=157,





RM_UNKNOWN_KEY=158,






RM_WMAPRO_NO_MORE_DATA=159,
RM_WMAPRO_SKIPFRAME=160,
RM_WMAPRO_NO_MORE_SAMPLES=161,





RM_ASF_WITHOUT_INDEX=162,

RM_ASF_SKIP_DATA=163,






RM_KEY_WHILE_WAITING_EOS=164,

RM_EOS=165,


RM_TIMEOUT=166,
RM_BUSY=167,





RM_CCFIFO_ALREADY_OPEN=168,






RM_DRM_PREVENTS_PLAYBACK=169,





RM_SKIP_DATA=170,

RM_NO_MORE_DATA=171,





RM_UNHANDLED_VIDEO_PCR_DISCONTINUITY=172,
RM_UNHANDLED_AUDIO_PCR_DISCONTINUITY=173,




RM_AUDIO_CODEC_NOT_SUPPORTED=174,
RM_AUDIO_MODE_NOT_SUPPORTED=175,
RM_VIDEO_CODEC_NOT_SUPPORTED=176,
RM_VIDEO_MODE_NOT_SUPPORTED=177,
RM_UNKNOWN_FILE_FORMAT=178,
RM_NOT_KNOWN=179,





RM_DRM_XSTART_FAILURE=180,
RM_DRM_XTASK_SYNC_FAILURE=181,
RM_DRM_XTASK_MISMATCH=182,
RM_DRM_VERSION_MISMATCH=183,
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.h" 2

 RM_ERROR_LAST__
} RMstatus;
# 55 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstatus.h"
}
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmpanic.h" 1
# 35 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmpanic.h"
extern "C" {
# 59 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmpanic.h"
}
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h" 1
# 33 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
extern "C" {
# 242 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline RMuint32 RMswapBitsUint32(RMuint32 x)
{
 RMuint32 y = 0x55555555;
 x = (((x >> 1) & y) | ((x & y) << 1));
 y = 0x33333333;
 x = (((x >> 2) & y) | ((x & y) << 2));
 y = 0x0f0f0f0f;
 x = (((x >> 4) & y) | ((x & y) << 4));
 return ({ RMuint32 __hidden_rv; __asm__ __volatile__( "wsbh %0, %1\n" "rotr %0, %0, 16\n" : "=r" (__hidden_rv) : "r" (x)); __hidden_rv; });
}





static inline RMuint32 RMbeBufToUint32(const RMuint8 *buf)
{

 RMuint32 rv;

 __asm__ __volatile__(
        "ulw %0, 0(%1)"
        : "=&r" (rv)
        : "r" (buf));

 return ({ RMuint32 __hidden_rv; __asm__ __volatile__( "wsbh %0, %1\n" "rotr %0, %0, 16\n" : "=r" (__hidden_rv) : "r" (rv)); __hidden_rv; });






}





static inline RMuint32 RMleBufToUint32(const RMuint8 *buf)
{

 RMuint32 rv;

 __asm__ __volatile__(
        "ulw %0, 0(%1)"
        : "=&r" (rv)
        : "r" (buf));

 return rv;






}





static inline RMuint64 RMbeBufToUint64(const RMuint8 *buf)
{

 RMuint32 rvhi,rvlo;

 __asm__ __volatile__(
        "ulw %0, 0(%2)\n"
        "ulw %1, 4(%2)\n"
        : "=&r" (rvhi), "=&r" (rvlo)
        : "r" (buf));

 rvhi=({ RMuint32 __hidden_rv; __asm__ __volatile__( "wsbh %0, %1\n" "rotr %0, %0, 16\n" : "=r" (__hidden_rv) : "r" (rvhi)); __hidden_rv; });
 rvlo=({ RMuint32 __hidden_rv; __asm__ __volatile__( "wsbh %0, %1\n" "rotr %0, %0, 16\n" : "=r" (__hidden_rv) : "r" (rvlo)); __hidden_rv; });
 return ((RMuint64)rvhi<<32)+(RMuint64)rvlo;
# 327 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
}





static inline RMuint64 RMleBufToUint64(const RMuint8 *buf)
{

 RMuint32 rvhi,rvlo;

 __asm__ __volatile__(
        "ulw %0, 0(%2)\n"
        "ulw %1, 4(%2)\n"
        : "=&r" (rvlo), "=&r" (rvhi)
        : "r" (buf));

 return ((RMuint64)rvhi<<32)+(RMuint64)rvlo;
# 355 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
}
# 365 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline void RMuint32ToBeBuf(RMuint32 val, RMuint8 *buf)
{






 buf[0] = (RMuint8)(val >> 24) & 0xff;
 buf[1] = (RMuint8)(val >> 16) & 0xff;
 buf[2] = (RMuint8)(val >> 8) & 0xff;
 buf[3] = (RMuint8)val & 0xff;

}







static inline void RMuint32ToLeBuf(RMuint32 val, RMuint8 *buf)
{






 buf[3] = (RMuint8)(val >> 24);
 buf[2] = (RMuint8)(val >> 16);
 buf[1] = (RMuint8)(val >> 8);
 buf[0] = (RMuint8)val;

}
# 408 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline void RMuint64ToLeBuf(RMuint64 val, RMuint8 *buf)
{
 buf[7] = (RMuint8)(val >> 56);
 buf[6] = (RMuint8)(val >> 48);
 buf[5] = (RMuint8)(val >> 40);
 buf[4] = (RMuint8)(val >> 32);
 buf[3] = (RMuint8)(val >> 24);
 buf[2] = (RMuint8)(val >> 16);
 buf[1] = (RMuint8)(val >> 8);
 buf[0] = (RMuint8)val;

}






static inline RMuint32 RMbeBufToUint24(const RMuint8 *buf)
{
 return (((RMuint32) buf[0] << 16) + ((RMuint32) buf[1] << 8) + (RMuint32) buf[2]);


}





static inline RMuint64 RMbeBufToUint48(const RMuint8 *buf)
{
 return (((RMuint64) buf[0] << 40) + ((RMuint64) buf[1] << 32) + ((RMuint64) buf[2] << 24) + ((RMuint64) buf[3] << 16) + ((RMuint64) buf[4] << 8) + (RMuint64) buf[5]);





}





static inline RMuint32 RMleBufToUint24(const RMuint8 *buf)
{
 return (((RMuint32) buf[2] << 16) + ((RMuint32) buf[1] << 8) + (RMuint32) buf[0]);


}







static inline void RMuint24ToBeBuf(RMuint32 val, RMuint8 *buf)
{
 buf[0] = (RMuint8)(val >> 16);
 buf[1] = (RMuint8)(val >> 8);
 buf[2] = (RMuint8)val;
}







static inline void RMuint24ToLeBuf(RMuint32 val, RMuint8 *buf)
{
 buf[2] = (RMuint8)(val >> 16);
 buf[1] = (RMuint8)(val >> 8);
 buf[0] = (RMuint8)val;
}





static inline RMuint16 RMbeBufToUint16(const RMuint8 *buf)
{
 return (((RMuint16) buf[0] << 8) + (RMuint16) buf[1]);

}





static inline RMuint16 RMleBufToUint16(RMuint8 *buf)
{
  return (((RMuint16) buf[1] << 8) + (RMuint16) buf[0]);

}







static inline void RMuint16ToBeBuf(RMuint16 val, RMuint8 *buf)
{
 buf[0] = (RMuint8)(val >> 8);
 buf[1] = (RMuint8)val;
}







static inline void RMuint16ToLeBuf(RMuint16 val, RMuint8 *buf)
{
 buf[1] = (RMuint8)(val >> 8);
 buf[0] = (RMuint8)val;
}
# 640 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline RMbool RMisPot(RMuint32 a)
{
 if (a==0)
  return 0;
 else
  return ((a&(a-1))==0);
}
# 657 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline RMuint32 RMcountBits(RMuint32 x)
{
 RMuint32 i;

 for (i = 0; x; i++) {
  x &= x - 1;
 }

 return i;
}
# 681 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline RMuint64 RM64div64rem64(RMuint64 a, RMuint64 b, RMuint64 *rem)
{
 RMuint64 remainder = 0, quotient = 0;
 RMuint32 r32, d, b_low;
 RMint32 i;
 RMuint8 nbits = sizeof(RMuint64) * 8;

 if(rem)
  *rem = 0;

 if (! b) {

  return a;
 }

 if (a == b) {
  return 1;
 }

 if (((b >> 32) == 0) && ((a >> 32) == 0)) {

  quotient = (RMuint64)((RMuint32)a / (RMuint32)b);
  if(rem)
   *rem = a - quotient * (RMuint32)b;
  return quotient;
 }

 if ((b >> 28) == 0) {

  b_low = (RMuint32)b;
  d = (RMuint32)(a >> 32);
  quotient = (d / b_low);

  for (i = 0; i < 8; i++) {
   r32 = d % b_low;
   d = (RMuint32)((r32 << 4) | ((a >> (7 - i) * 4) & 0xf));
   quotient = (quotient << 4) | (d / b_low);
  }
  if(rem)
   *rem = d % b_low;
  return quotient;
 }


 quotient = (((RMuint64)1) << (nbits - 1));
 while (quotient && ((a & quotient) == 0)) {
  nbits--;
  quotient >>= 1;
 }


 quotient = 0;
 for (i = (nbits - 1); i >= 0; i--) {
  remainder = remainder << 1 | ((a >> i) & 1);
  quotient <<= 1;
  if (remainder >= b) {
   remainder -= b;
   quotient |= 1;
  }
 }
 if(rem)
  *rem = remainder;
 return quotient;
}

static inline RMuint64 RM64div64(RMuint64 a, RMuint64 b)
{
 return RM64div64rem64(a, b, (RMuint64 *)__null );
}
# 761 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmacros.h"
static inline RMstatus RM64divfrac64rem64(
 RMint64 numer,
 RMint64 denom,
 RMint64 *pQuot,
 RMint64 *pRem,
 RMint64 *pFrac)
{
 RMint64 quot;
 RMint64 frac;
 RMint32 shift;
 RMint64 sign = 1;


 if (!denom) return RM_ERROR;


 if (numer < 0) {
  numer = -numer;
  sign = -sign;
 }
 if (denom < 0) {
  denom = -denom;
  sign = -sign;
 }


 quot = frac = 0;
 shift = 0;
 while ((denom < numer) && ((denom & 0x8000000000000000ll) == 0)) {
  denom <<= 1;
  shift++;
 }


 while (1) {
  if (numer >= denom) {
   numer -= denom;
   quot |= 1;
  }
  if (! shift) break;
  denom >>= 1;
  quot <<= 1;
  shift--;
 }


 if (pQuot) *pQuot = quot * sign;
 if (pRem) *pRem = numer * sign;
 if (!pFrac) return RM_OK;


 while (1) {
  if (numer & 0x8000000000000000ll) {
   if ( ((numer == (denom >> 1)) && (!(denom & 1))) || (numer > (denom >> 1))) {
    numer -= (denom >> 1);
    frac |= 1;
   }
   numer <<= 1;
   if (denom & 1) numer -= 1;
  } else {
   numer <<= 1;
   if (numer >= denom) {
    numer -= denom;
    frac |= 1;
   }
  }
  if (shift <= -63) break;
  frac <<= 1;
  shift--;
 }


 *pFrac = frac * sign;

 return RM_OK;
}

}
# 45 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstreamid.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstreamid.h"
extern "C" {

typedef enum {
 RMVDEMUX_FIRST__=3974,
 RMVDEMUX_VIDEO,
 RMVDEMUX_AUDIO,
 RMVDEMUX_SUBPICTURE,
 RMVDEMUX_NAVIGATION,
 RMVDEMUX_LAST__,
} RMvdemuxDataType;

typedef enum {
 RM_SYSTEM_UNKNOWN=4753,
 RM_SYSTEM_MPEG1,
 RM_SYSTEM_MPEG2_TRANSPORT,
 RM_SYSTEM_MPEG2_PROGRAM,
 RM_SYSTEM_MPEG2_DVD,
 RM_SYSTEM_MPEG2_DVD_AUDIO,
 RM_SYSTEM_MPEG4,
 RM_SYSTEM_AVI,
 RM_SYSTEM_ID3,
 RM_SYSTEM_RIFFCDXA,
 RM_SYSTEM_DIVX_MP3,
 RM_SYSTEM_DIVX_AC3,
 RM_SYSTEM_DIVX_MPEG1,
 RM_SYSTEM_DIVX_PCM,
 RM_SYSTEM_DIVX_WMA,
 RM_SYSTEM_DIVX_WMV9_MP3,
 RM_SYSTEM_DIVX_WMV9_AC3,
 RM_SYSTEM_DIVX_WMV9_MPEG1,
 RM_SYSTEM_DIVX_WMV9_PCM,
 RM_SYSTEM_DIVX3_MP3,
 RM_SYSTEM_DIVX3_AC3,
 RM_SYSTEM_DIVX3_MPEG1,
 RM_SYSTEM_DIVX3_PCM,
 RM_SYSTEM_ASF,
 RM_SYSTEM_MPEG2_TRANSPORT_192,
 RM_SYSTEM_ELEMENTARY_AUDIO,
 RM_SYSTEM_ELEMENTARY_VIDEO,
} RMsystemType;



typedef enum {
 RM_VIDEO_UNKNOWN,
 RM_VIDEO_MPEG12,
 RM_VIDEO_MPEG4,
 RM_VIDEO_H263,
 RM_VIDEO_H264,
 RM_VIDEO_WMV,
 RM_VIDEO_VC1,
 RM_VIDEO_DIVX3,
 RM_VIDEO_DIVX4,
 RM_VIDEO_XVID,
 RM_VIDEO_MJPEG,
 RM_VIDEO_JPEG,
 RM_VIDEO_BMP,
 RM_VIDEO_TIFF,
 RM_VIDEO_GIF,
 RM_VIDEO_PNG,
} RMvideoType;
# 101 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmstreamid.h"
typedef enum {
 eAudioFormat_MPEG1 = 1,
 eAudioFormat_MPEG2 = 2,
 eAudioFormat_AC3 = 3,
 eAudioFormat_PCM = 4,
 eAudioFormat_DTS = 5,
 eAudioFormat_DVD_AUDIO = 6,
 eAudioFormat_REVERSE_PCM = 7,
 eAudioFormat_AAC = 8,
 eAudioFormat_MPEG1_LAYER3,
 eAudioFormat_MPEG2_LAYER1,
 eAudioFormat_MPEG2_LAYER2,
 eAudioFormat_MPEG2_LAYER3,
 eAudioFormat_WMA,
 eAudioFormat_WMAPRO,
 eAudioFormat_UNKNOWN,
 eAudioFormat_AAC_DSI,
 eAudioFormat_AAC_ADIF,
 eAudioFormat_AAC_ADTS,
 eAudioFormat_WMATS,
 eAudioFormat_AAC_LATM,
} eAudioFormat_type;


typedef enum
{

    eaDvdAudio10_C = 0,

    eaDvdAudio20_LR,
    eaDvdAudio21_LfRfS,
    eaDvdAudio22_LfRfLsRs,
    eaDvdAudio21_LfRfLfe,
    eaDvdAudio22_LfRfLfeS,
    eaDvdAudio23_LfRfLfeLsRs,
    eaDvdAudio21_LfRfC,
    eaDvdAudio22_LfRfCS,
    eaDvdAudio23_LfRfCLsRs,
    eaDvdAudio22_LfRfCLfe,
    eaDvdAudio23_LfRfCLfeS,
    eaDvdAudio24_LfRfCLfeLsRs,

    eaDvdAudio31_LfRfCS,
    eaDvdAudio32_LfRfCLsRs,
    eaDvdAudio31_LfRfCLfe,
    eaDvdAudio32_LfRfCLfeS,
    eaDvdAudio33_LfRfCLfeLsRs,

    eaDvdAudio41_LfRfLsRsLfe,
    eaDvdAudio41_LfRfLsRsC,
    eaDvdAudio42_LfRfLsRsCLfe,

}eaDvdAudioChannelAssign_type;






}
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdbg.h" 1
# 58 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdbg.h"
extern "C" {





void RMDBGLOG_implementation(RMbool active,const RMascii *filename,RMint32 line,const RMascii *text,...);
void RMDBGPRINT_implementation(RMbool active,const RMascii *filename,RMint32 line,const RMascii *text,...);
# 116 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdbg.h"
}
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmm.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmm.h"
extern "C" {







void *RMMalloc(RMuint32 size);







void RMFree(void *ptr);
# 54 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmm.h"
void *RMCalloc(RMuint32 nmemb,RMuint32 size);
# 63 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmm.h"
void *RMMemset(void *s, RMuint8 c, RMuint32 n);
# 72 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmm.h"
void *RMMemcpy(void *dest,const void *src,RMuint32 n);
# 82 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmmm.h"
RMint32 RMMemcmp(const void *s1, const void *s2,RMuint32 n);

}
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmsync.h" 1
# 29 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmsync.h"
extern "C" {

typedef struct _RMcriticalsection *RMcriticalsection;

typedef struct {
 RMcriticalsection (*Create)(void);
 void (*Delete)(RMcriticalsection lpCriticalSection);
 void (*Enter)(RMcriticalsection lpCriticalSection);
 void (*Leave)(RMcriticalsection lpCriticalSection);
} RMcriticalsectionOps;

extern RMcriticalsectionOps g_critsec_ops;

typedef struct _RMsemaphore *RMsemaphore;

typedef struct {
 RMsemaphore (*Create)(RMuint32 lInitialCount);
 void (*Delete)(RMsemaphore x);
 void (*WaitFor)(RMsemaphore x);
 RMstatus (*TryWaitFor)(RMsemaphore x);
 void (*Release)(RMsemaphore x, RMuint32 lReleaseCount);
 RMuint32 (*GetValue)(RMsemaphore x);
} RMsemaphoreOps;

extern RMsemaphoreOps g_sem_ops;

typedef struct _RMtimeoutSemaphore *RMtimeoutSemaphore;

typedef struct {
 RMtimeoutSemaphore (*Create)(RMuint32 lInitialCount);
 void (*Delete)(RMtimeoutSemaphore x);
 RMstatus (*WaitFor)(RMtimeoutSemaphore x, RMuint64 microSec);
 void (*Release)(RMtimeoutSemaphore x, RMuint32 lReleaseCount);
 RMuint32 (*GetValue)(RMtimeoutSemaphore x);
} RMtimeoutSemaphoreOps;

extern RMtimeoutSemaphoreOps g_timeoutSem_ops;

}
# 49 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmpacketcommandops.h" 1
# 16 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmpacketcommandops.h"
extern "C" {

typedef struct {
 RMuint8 senseKey;
 RMuint8 asc;
 RMuint8 ascq;
} RMpacketError;

typedef enum {
        RM_PACKET_DATA_WRITE = 1,
 RM_PACKET_DATA_READ = 2,
} RMpacketDataDirection;

typedef struct {
 RMuint8 cmd[12];
 RMuint8 *buffer;
 RMuint32 buflen;
 RMpacketError packetError;
 RMpacketDataDirection packetDataDirection;
} RMpacketCommand;

typedef RMint32 (*PacketCommandOp)(void *handle,RMpacketCommand *pP);

}
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmnonasciitype.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmnonasciitype.h"
typedef RMuint8 RMnonAscii;
# 51 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../rmdef/rmdef.h" 2
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_categories.h" 1
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_categories.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_event.h" 1
# 327 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_event.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_videoformats.h" 1
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_videoformats.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 1
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmem86xxid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmplatform.h" 1
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmfeatures.h" 1
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmarchid.h" 1
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmcompilerid.h" 1
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmbtypes.h" 1
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmstatus.h" 1
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmpanic.h" 1
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmmacros.h" 1
# 45 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmstreamid.h" 1
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdbg.h" 1
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmmm.h" 1
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmsync.h" 1
# 49 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmpacketcommandops.h" 1
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmnonasciitype.h" 1
# 51 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../rmdef/rmdef.h" 2
# 24 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_videoformats.h" 2

enum EMhwlibTVStandard {
 EMhwlibTVStandard_Custom = 0,
 EMhwlibTVStandard_CVT_640x480x50,
 EMhwlibTVStandard_CVT_640x480x60,
 EMhwlibTVStandard_CVT_640x480x75,
 EMhwlibTVStandard_CVT_640x480x85,
 EMhwlibTVStandard_CVT_800x600x50,
 EMhwlibTVStandard_CVT_800x600x60,
 EMhwlibTVStandard_CVT_800x600x75,
 EMhwlibTVStandard_CVT_800x600x85,
 EMhwlibTVStandard_CVT_1024x768x50,
 EMhwlibTVStandard_CVT_1024x768x60,
 EMhwlibTVStandard_CVT_1024x768x75,
 EMhwlibTVStandard_CVT_1024x768x85,
 EMhwlibTVStandard_CVT_1152x864x50,
 EMhwlibTVStandard_CVT_1152x864x60,
 EMhwlibTVStandard_CVT_1152x864x75,
 EMhwlibTVStandard_CVT_1152x864x85,
 EMhwlibTVStandard_CVT_1280x960x50,
 EMhwlibTVStandard_CVT_1280x960x60,
 EMhwlibTVStandard_CVT_1280x960x75,
 EMhwlibTVStandard_CVT_1280x960x85,
 EMhwlibTVStandard_CVT_1280x1024x50,
 EMhwlibTVStandard_CVT_1280x1024x60,
 EMhwlibTVStandard_CVT_1280x1024x75,
 EMhwlibTVStandard_CVT_1280x1024x85,
 EMhwlibTVStandard_CVT_1600x1200x50,
 EMhwlibTVStandard_CVT_1600x1200x60,
 EMhwlibTVStandard_DBL3_1952x1232,
 EMhwlibTVStandard_DBL3_1952x30,
 EMhwlibTVStandard_HDMI_640x480p59,
 EMhwlibTVStandard_HDMI_640x480p60,
 EMhwlibTVStandard_HDMI_480p59,
 EMhwlibTVStandard_HDMI_480p60,
 EMhwlibTVStandard_HDMI_720p59,
 EMhwlibTVStandard_HDMI_720p60,
 EMhwlibTVStandard_HDMI_1080i59,
 EMhwlibTVStandard_HDMI_1080i60,
 EMhwlibTVStandard_HDMI_480i59,
 EMhwlibTVStandard_HDMI_480i60,
 EMhwlibTVStandard_HDMI_1440x480i59,
 EMhwlibTVStandard_HDMI_1440x480i60,
 EMhwlibTVStandard_HDMI_240p59,
 EMhwlibTVStandard_HDMI_240p60,
 EMhwlibTVStandard_HDMI_1440x240p59,
 EMhwlibTVStandard_HDMI_1440x240p60,
 EMhwlibTVStandard_HDMI_2880x480i59,
 EMhwlibTVStandard_HDMI_2880x480i60,
 EMhwlibTVStandard_HDMI_2880x240p59,
 EMhwlibTVStandard_HDMI_2880x240p60,
 EMhwlibTVStandard_HDMI_1440x480p59,
 EMhwlibTVStandard_HDMI_1440x480p60,
 EMhwlibTVStandard_HDMI_1080p59,
 EMhwlibTVStandard_HDMI_1080p60,
 EMhwlibTVStandard_HDMI_576p50,
 EMhwlibTVStandard_HDMI_720p50,
 EMhwlibTVStandard_HDMI_1080i50,
 EMhwlibTVStandard_HDMI_576i50,
 EMhwlibTVStandard_HDMI_1440x576i50,
 EMhwlibTVStandard_HDMI_288p50,
 EMhwlibTVStandard_HDMI_1440x288p50,
 EMhwlibTVStandard_HDMI_2880x576i50,
 EMhwlibTVStandard_HDMI_2880x288p50,
 EMhwlibTVStandard_HDMI_1440x576p50,
 EMhwlibTVStandard_HDMI_1080p50,
 EMhwlibTVStandard_HDMI_1080p23,
 EMhwlibTVStandard_HDMI_1080p24,
 EMhwlibTVStandard_HDMI_1080p25,
 EMhwlibTVStandard_HDMI_1080p29,
 EMhwlibTVStandard_HDMI_1080p30,
 EMhwlibTVStandard_HDMI_2880x480p59,
 EMhwlibTVStandard_HDMI_2880x480p60,
 EMhwlibTVStandard_HDMI_2880x576p50,
 EMhwlibTVStandard_HDMI_1080i50_1250,
 EMhwlibTVStandard_HDMI_1080i100,
 EMhwlibTVStandard_HDMI_720p100,
 EMhwlibTVStandard_HDMI_576p100,
 EMhwlibTVStandard_HDMI_576i100,
 EMhwlibTVStandard_HDMI_1440x576i100,
 EMhwlibTVStandard_HDMI_1080i119,
 EMhwlibTVStandard_HDMI_1080i120,
 EMhwlibTVStandard_HDMI_720p119,
 EMhwlibTVStandard_HDMI_720p120,
 EMhwlibTVStandard_HDMI_480p119,
 EMhwlibTVStandard_HDMI_480p120,
 EMhwlibTVStandard_HDMI_480i119,
 EMhwlibTVStandard_HDMI_480i120,
 EMhwlibTVStandard_HDMI_1440x480i119,
 EMhwlibTVStandard_HDMI_1440x480i120,
 EMhwlibTVStandard_HDMI_576p200,
 EMhwlibTVStandard_HDMI_576i200,
 EMhwlibTVStandard_HDMI_1440x576i200,
 EMhwlibTVStandard_HDMI_480p239,
 EMhwlibTVStandard_HDMI_480p240,
 EMhwlibTVStandard_HDMI_480i239,
 EMhwlibTVStandard_HDMI_480i240,
 EMhwlibTVStandard_HDMI_1440x480i239,
 EMhwlibTVStandard_HDMI_1440x480i240,
 EMhwlibTVStandard_1080p60,
 EMhwlibTVStandard_1080p59,
 EMhwlibTVStandard_1080p50,
 EMhwlibTVStandard_1080i60,
 EMhwlibTVStandard_1080i59,
 EMhwlibTVStandard_1080i50,
 EMhwlibTVStandard_1080i48,
 EMhwlibTVStandard_1080i47,
 EMhwlibTVStandard_1080p30,
 EMhwlibTVStandard_1080p29,
 EMhwlibTVStandard_1080p25,
 EMhwlibTVStandard_1080p24,
 EMhwlibTVStandard_1080p23,
 EMhwlibTVStandard_1080i50_1250,
 EMhwlibTVStandard_1080p50_1250,
 EMhwlibTVStandard_720p60,
 EMhwlibTVStandard_720p59,
 EMhwlibTVStandard_720p50,
 EMhwlibTVStandard_720p30,
 EMhwlibTVStandard_720p29,
 EMhwlibTVStandard_720p25,
 EMhwlibTVStandard_720p24,
 EMhwlibTVStandard_720p23,
 EMhwlibTVStandard_ITU_Bt656_525,
 EMhwlibTVStandard_ITU_Bt656_240p,
 EMhwlibTVStandard_NTSC_M_Japan,
 EMhwlibTVStandard_NTSC_M,
 EMhwlibTVStandard_PAL_60,
 EMhwlibTVStandard_PAL_M,
 EMhwlibTVStandard_480p59,
 EMhwlibTVStandard_NTSC_M_Japan_714,
 EMhwlibTVStandard_NTSC_M_714,
 EMhwlibTVStandard_PAL_60_714,
 EMhwlibTVStandard_PAL_M_714,
 EMhwlibTVStandard_480p59_714,
 EMhwlibTVStandard_ITU_Bt656_625,
 EMhwlibTVStandard_ITU_Bt656_288p,
 EMhwlibTVStandard_PAL_BG,
 EMhwlibTVStandard_PAL_N,
 EMhwlibTVStandard_576p50,
 EMhwlibTVStandard_PAL_BG_702,
 EMhwlibTVStandard_PAL_N_702,
 EMhwlibTVStandard_576p50_702,
 EMhwlibTVStandard_PAL_BG_704,
 EMhwlibTVStandard_PAL_N_704,
 EMhwlibTVStandard_576p50_704,
 EMhwlibTVStandard_VESA_640x350x85,
 EMhwlibTVStandard_VESA_640x400x85,
 EMhwlibTVStandard_VESA_720x400x85,
 EMhwlibTVStandard_VESA_640x480x60,
 EMhwlibTVStandard_VESA_640x480x72,
 EMhwlibTVStandard_VESA_640x480x75,
 EMhwlibTVStandard_VESA_640x480x85,
 EMhwlibTVStandard_VESA_848x480x60,
 EMhwlibTVStandard_VESA_800x600x56,
 EMhwlibTVStandard_VESA_800x600x60,
 EMhwlibTVStandard_VESA_800x600x72,
 EMhwlibTVStandard_VESA_800x600x75,
 EMhwlibTVStandard_VESA_800x600x85,
 EMhwlibTVStandard_VESA_1024x768x43,
 EMhwlibTVStandard_VESA_1024x768x60,
 EMhwlibTVStandard_VESA_1024x768x70,
 EMhwlibTVStandard_VESA_1024x768x75,
 EMhwlibTVStandard_VESA_1024x768x85,
 EMhwlibTVStandard_VESA_1152x864x75,
 EMhwlibTVStandard_VESA_1280x768x60RB,
 EMhwlibTVStandard_VESA_1280x768x60,
 EMhwlibTVStandard_VESA_1280x768x75,
 EMhwlibTVStandard_VESA_1280x768x85,
 EMhwlibTVStandard_VESA_1280x960x60,
 EMhwlibTVStandard_VESA_1280x960x85,
 EMhwlibTVStandard_VESA_1280x1024x60,
 EMhwlibTVStandard_VESA_1280x1024x75,
 EMhwlibTVStandard_VESA_1280x1024x85,
 EMhwlibTVStandard_VESA_1360x768x60,
 EMhwlibTVStandard_VESA_1366x768x60,
 EMhwlibTVStandard_VESA_1400x1050x60RB,
 EMhwlibTVStandard_VESA_1400x1050x60,
 EMhwlibTVStandard_VESA_1400x1050x75,
 EMhwlibTVStandard_VESA_1400x1050x85,
 EMhwlibTVStandard_VESA_1600x1200x60,
 EMhwlibTVStandard_VESA_1600x1200x65,
 EMhwlibTVStandard_VESA_1600x1200x70,
 EMhwlibTVStandard_VESA_1600x1200x75,
 EMhwlibTVStandard_VESA_1600x1200x85,
 EMhwlibTVStandard_VESA_1792x1344x60,
 EMhwlibTVStandard_VESA_1792x1344x75,
 EMhwlibTVStandard_VESA_1856x1392x60,
 EMhwlibTVStandard_VESA_1856x1392x75,
 EMhwlibTVStandard_VESA_1920x1200x60RB,
 EMhwlibTVStandard_VESA_1920x1200x60,
 EMhwlibTVStandard_VESA_1920x1200x75,
 EMhwlibTVStandard_VESA_1920x1200x85,
 EMhwlibTVStandard_VESA_1920x1440x60,
 EMhwlibTVStandard_VESA_1920x1440x75,
 EMhwlibTVStandard_VESA_640x350x70,
 EMhwlibTVStandard_VESA_640x480i30,
 EMhwlibTVStandard_VESA_640x480i60,
 EMhwlibTVStandard_VESA_720x400x70,
 EMhwlibTVStandard_VESA_640x480x66,
 EMhwlibTVStandard_VESA_832x624x75,
 EMhwlibTVStandard_VESA_1152x870x75,
 EMhwlibTVStandard_VESA_1280x720x60,
 EMhwlibTVStandard_VESA_1280x720x75,
 EMhwlibTVStandard_VESA_1440x900x60RB,
 EMhwlibTVStandard_VESA_1440x900x60,
 EMhwlibTVStandard_VESA_1440x900x75,
 EMhwlibTVStandard_VESA_1680x1050x60RB,
 EMhwlibTVStandard_VESA_1680x1050x60,
 EMhwlibTVStandard_VESA_1920x1080x60i,
};
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_displaytypes.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_displaytypes.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/gbus_fifo_eraser.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/gbus_fifo_eraser.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 1
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmem86xxid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmplatform.h" 1
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmfeatures.h" 1
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmarchid.h" 1
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmcompilerid.h" 1
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmbtypes.h" 1
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmstatus.h" 1
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmpanic.h" 1
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmmacros.h" 1
# 45 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmstreamid.h" 1
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdbg.h" 1
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmmm.h" 1
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmsync.h" 1
# 49 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmpacketcommandops.h" 1
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmnonasciitype.h" 1
# 51 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h" 1
# 22 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 1
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/../../rmdef/rmdef.h" 2
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h" 2

extern "C" {
# 55 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
struct llad;
# 70 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
struct llad *llad_open(RMascii *device);






void llad_close(struct llad *h);
# 88 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
void llad_get_config(struct llad *h, RMascii* config_name, RMuint32 config_size);







RMuint32 llad_get_open_count(struct llad *h);
# 108 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
RMuint32 llad_lock(struct llad *h);






void llad_unlock(struct llad *h);
# 134 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
RMuint32 llad_wait_interrupt(struct llad *h, RMuint32 mask, RMuint32 *timeout_microsecond);
# 144 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
void llad_enable_interrupt(struct llad *h, RMuint32 mask);
# 154 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
void llad_disable_interrupt(struct llad *h, RMuint32 mask);
# 206 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/llad.h"
}
# 22 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h" 2

extern "C" {

struct gbus;
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
struct gbus *gbus_open(struct llad *h);






void gbus_close(struct gbus *h);
# 63 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
RMuint8 gbus_read_uint8 (struct gbus *h, RMuint32 byte_address);
RMuint16 gbus_read_uint16(struct gbus *h, RMuint32 byte_address);
RMuint32 gbus_read_uint32(struct gbus *h, RMuint32 byte_address);
# 79 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
void gbus_write_uint8 (struct gbus *h, RMuint32 byte_address, RMuint8 data);
void gbus_write_uint16(struct gbus *h, RMuint32 byte_address, RMuint16 data);
void gbus_write_uint32(struct gbus *h, RMuint32 byte_address, RMuint32 data);
# 97 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
void gbus_read_data8 (struct gbus *h, RMuint32 byte_address, RMuint8 *data, RMuint32 count);
void gbus_read_data16(struct gbus *h, RMuint32 byte_address, RMuint16 *data, RMuint32 count);
void gbus_read_data32(struct gbus *h, RMuint32 byte_address, RMuint32 *data, RMuint32 count);
# 115 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
void gbus_write_data8 (struct gbus *h, RMuint32 byte_address, const RMuint8 *data, RMuint32 count);
void gbus_write_data16(struct gbus *h, RMuint32 byte_address, const RMuint16 *data, RMuint32 count);
void gbus_write_data32(struct gbus *h, RMuint32 byte_address, const RMuint32 *data, RMuint32 count);
# 144 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
RMstatus gbus_lock_area(struct gbus *h, RMuint32 *region_index, RMuint32 byte_address, RMuint32 size, RMuint32 *region_count, RMuint32 *offset);
# 160 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
RMstatus gbus_get_locked_area(struct gbus *h, RMuint32 byte_address, RMuint32 size, RMuint32 *region_index, RMuint32 *region_count, RMuint32 *offset);
# 169 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
RMstatus gbus_unlock_region(struct gbus *h, RMuint32 region_index);
# 182 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
RMuint8 *gbus_map_region(struct gbus *h, RMuint32 region_index, RMuint32 region_count);
# 191 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/../../llad/include/gbus.h"
void gbus_unmap_region(struct gbus *h, RMuint8 *address, RMuint32 size);



}
# 29 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../gbuslib/include/gbus_fifo_eraser.h" 2

struct gbus_fifo_eraser {
 RMuint32 base;
 RMuint32 size;
 RMuint32 er;
 RMuint32 rd;
 RMuint32 wr;
};

extern "C" {

struct gbus_fifo_eraser *gbus_fifo_eraser_open(struct gbus *h, RMuint32 data_address, RMuint32 data_size, RMuint32 fifo_address);
void gbus_fifo_eraser_close(struct gbus *h, struct gbus_fifo_eraser *fifo);
RMbool gbus_fifo_eraser_is_empty(struct gbus *h, struct gbus_fifo_eraser *fifo);
void gbus_fifo_eraser_flush(struct gbus *h, struct gbus_fifo_eraser *fifo);
RMuint32 gbus_fifo_eraser_get_info(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 *start_address, RMuint32 *writable, RMuint32 *readable, RMuint32 *erasable);
RMuint32 gbus_fifo_eraser_get_writable_size(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 *wr_ptr1, RMuint32 *wr_size1, RMuint32 *wr_ptr2);
RMuint32 gbus_fifo_eraser_get_readable_size(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 *rd_ptr1, RMuint32 *rd_size1, RMuint32 *rd_ptr2);
RMuint32 gbus_fifo_eraser_get_erasable_size(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 *er_ptr1, RMuint32 *er_size1, RMuint32 *er_ptr2);
RMuint32 gbus_fifo_eraser_incr_write_ptr(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 incr);
RMuint32 gbus_fifo_eraser_incr_read_ptr(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 incr);
RMuint32 gbus_fifo_eraser_incr_erase_ptr(struct gbus *h, struct gbus_fifo_eraser *fifo, RMuint32 incr);

}
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_displaytypes.h" 2

enum EMhwlibColorBarsStandard {
 EMhwlibColorBarsStandard_NTSC = 1,
 EMhwlibColorBarsStandard_PAL
};

enum EMhwlibMixerSourceState {
 EMhwlibMixerSourceState_Disable = 1,
 EMhwlibMixerSourceState_Master,
 EMhwlibMixerSourceState_Slave
};

enum EMhwlibDisplayCommand {
 EMhwlibDisplayCommand_Disable = 0,
 EMhwlibDisplayCommand_Enable,
 EMhwlibDisplayCommand_Flush,
 EMhwlibDisplayCommand_FlushKeepCurrent
};


enum EMhwlibComponentMode {
 EMhwlibComponentMode_Disable = 0,
 EMhwlibComponentMode_RGB_SCART,
 EMhwlibComponentMode_RGB_SOG,
 EMhwlibComponentMode_RGB_SMPTE,
 EMhwlibComponentMode_YUV_BETACAM,
 EMhwlibComponentMode_YUV_M2,
 EMhwlibComponentMode_YUV_SMPTE
};

enum EMhwlibCompositeMode {
 EMhwlibCompositeMode_Disable = 0,
 EMhwlibCompositeMode_NTSC_M,
 EMhwlibCompositeMode_PAL_BG,
 EMhwlibCompositeMode_PAL_60,
 EMhwlibCompositeMode_PAL_M
};

enum EMhwlibComponentOrder {
 EMhwlibComponentOrder_RGB = 0,
 EMhwlibComponentOrder_RBG,
 EMhwlibComponentOrder_GRB,
 EMhwlibComponentOrder_GBR,
 EMhwlibComponentOrder_BRG,
 EMhwlibComponentOrder_BGR
};

enum EMhwlibChromaFilter {
 EMhwlibChromaFilter_0_65_MHz = 0,
 EMhwlibChromaFilter_1_MHz,
 EMhwlibChromaFilter_1_3_MHz,
 EMhwlibChromaFilter_2_MHz,
 EMhwlibChromaFilter_3_25_MHz,
 EMhwlibChromaFilter_6_5_MHz
};

enum EMhwlibLumaFilter {
 EMhwlibLumaFilter_4_5_MHz = 0,
 EMhwlibLumaFilter_6_5_MHz
};

enum EMhwlibSharpnessControl {
 EMhwlibSharpnessControl_Disable = 0,
 EMhwlibSharpnessControl_Amplify_12_percent,
 EMhwlibSharpnessControl_Amplify_25_percent,
 EMhwlibSharpnessControl_Amplify_50_percent,
 EMhwlibSharpnessControl_Amplify_100_percent,
 EMhwlibSharpnessControl_Amplify_200_percent,
 EMhwlibSharpnessControl_Attenuate_12_percent,
 EMhwlibSharpnessControl_Attenuate_25_percent,
 EMhwlibSharpnessControl_Attenuate_50_percent,
 EMhwlibSharpnessControl_Notch
};

enum EMhwlibColorSpace {
 EMhwlibColorSpace_None = 1,
 EMhwlibColorSpace_RGB_16_235,
 EMhwlibColorSpace_RGB_0_255,
 EMhwlibColorSpace_YUV_601,
 EMhwlibColorSpace_YUV_709,
 EMhwlibColorSpace_YUV_601_0_255,
 EMhwlibColorSpace_YUV_709_0_255,
 EMhwlibColorSpace_xvYCC_601,
 EMhwlibColorSpace_xvYCC_709,
 EMhwlibColorSpace_xvYCC_601_0_255,
 EMhwlibColorSpace_xvYCC_709_0_255,
};

enum EMhwlibColorOrder {
 EMhwlibColorOrder_RGB = 0,
 EMhwlibColorOrder_RBG
};

enum EMhwlibFieldType {
 EMhwlibFieldType_Frame = 0,
 EMhwlibFieldType_Top,
 EMhwlibFieldType_Bottom
};

enum EMhwlibVbiStandard {
 EMhwlibVbiStandard_Custom = 0,
 EMhwlibVbiStandard_525i,
 EMhwlibVbiStandard_525i_pal60,
 EMhwlibVbiStandard_625i,
 EMhwlibVbiStandard_525p,
 EMhwlibVbiStandard_625p,
 EMhwlibVbiStandard_hdtv720,
 EMhwlibVbiStandard_hdtv1080,
};

struct EMhwlibTVFormatAnalog {
 enum EMhwlibVbiStandard VbiStandard;
 RMuint32 PixelClock;

 RMuint32 ActiveWidth;

 RMuint32 ActiveHeight;

 RMuint32 XOffset;

 RMuint32 YOffsetTop;

 RMuint32 YOffsetBottom;

 RMbool VSyncActiveLow;

 RMbool HSyncActiveLow;

 enum EMhwlibComponentMode ComponentMode;

 enum EMhwlibCompositeMode CompositeMode;

 enum EMhwlibColorSpace ColorSpace;

 RMbool HDTVMode;

 RMbool Progressive;

 RMbool HDSyncDown;

 RMbool OversampledInput;

 enum EMhwlibChromaFilter ChromaFilter;

 enum EMhwlibLumaFilter LumaFilter;

 RMbool SyncOnPbPr;

 RMbool Pedestal;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 HSync0;

 RMuint32 HSync1;

 RMuint32 VSyncO0Line;

 RMuint32 VSyncO0Pixel;

 RMuint32 VSyncO1Line;

 RMuint32 VSyncO1Pixel;

 RMuint32 VSyncE0Line;

 RMuint32 VSyncE0Pixel;

 RMuint32 VSyncE1Line;

 RMuint32 VSyncE1Pixel;

 RMuint32 HDHSyncWidth;

 RMuint32 HDVSyncWidth;

 RMuint32 HDVSyncStart;
};


struct EMhwlibTVFormatDigital {
 enum EMhwlibVbiStandard VbiStandard;
 RMuint32 PixelClock;

 RMuint32 ActiveWidth;

 RMuint32 ActiveHeight;

 RMuint32 XOffset;

 RMuint32 YOffsetTop;

 RMuint32 YOffsetBottom;

 RMbool VSyncActiveLow;

 RMbool HSyncActiveLow;

 RMuint32 TopFieldHeight;

 RMuint32 HTotalSize;

 RMuint32 VTotalSize;

 RMuint32 HSyncWidth;

 RMuint32 VSyncWidth;

 RMuint32 VSyncFineAdjust;

 enum EMhwlibColorSpace ColorSpace;

 RMbool TrailingEdge;

 RMbool VSyncDelay1PixClk;

 RMbool Progressive;

 RMbool HDTVMode;

 RMbool DoubleRateMode;

};

enum EMhwlibTVFormatType{
 EMhwlibTVFormatType_Analog,
 EMhwlibTVFormatType_Digital,
};

struct EMhwlibGenericTVFormat{
 enum EMhwlibTVFormatType Type;
 union{
  struct EMhwlibTVFormatAnalog Analog;
  struct EMhwlibTVFormatDigital Digital;
 }Format;
};




enum gfx_alpha_format {
 GFX_ALPHA_FORMAT_LUT_1BPA = 1,
 GFX_ALPHA_FORMAT_LUT_2BPA,
 GFX_ALPHA_FORMAT_TRUE_4BPA,
 GFX_ALPHA_FORMAT_TRUE_8BPA
};



enum gfx_surface_id {
 GFX_SURFACE_ID_X = 0,
 GFX_SURFACE_ID_Y,
 GFX_SURFACE_ID_Z,
 GFX_SURFACE_ID_NX
};

enum gfx_blend_mode{
 GFX_BLEND_Y_ON_X = 0,
 GFX_BLEND_X_ON_Y = 1,
 GFX_BLEND_Y_ON_Z = 2,
 GFX_BLEND_Z_ON_Y = 3,
 GFX_BLEND_X_ON_Z = 4,
 GFX_BLEND_Z_ON_X = 5,
 GFX_RASTER_Y_ON_X,
 GFX_RASTER_Z_ON_X,
};

enum gfx_merge_mode{
 GFX_MERGE_MODE_DISABLE = 0,
 GFX_MERGE_MODE_X = 1,
 GFX_MERGE_MODE_MODULATE
};

enum gfx_alpha_fill_mode{
 GFX_ALPHA_FILL_MODE_OVERWRITE,
 GFX_ALPHA_FILL_MODE_MODULATE
};

enum gfx_input_type{
 GFX_INPUT_DIRECT,
 GFX_INPUT_SCALER,
 GFX_INPUT_COLOR,
 GFX_INPUT_GRADIENT
};

enum gfx_correction_mode{
 GFX_CORRECTION_NONE,
 GFX_CORRECTION_FADE,
 GFX_CORRECTION_LUT
};


enum EMhwlibHDSDConversionMode {
 EMhwlibHDSDConversionMode_OnTheFly = 1,
 EMhwlibHDSDConversionMode_Buffered
};


enum EMhwlibDigitalTimingSignal {
 EMhwlibDigitalTimingSignal_601 = 1,
 EMhwlibDigitalTimingSignal_656,
 EMhwlibDigitalTimingSignal_656_VIP
};

struct EMhwlibColorConversionMatrix {
 RMint32 Mat00;
 RMint32 Mat01;
 RMint32 Mat02;
 RMint32 Mat10;
 RMint32 Mat11;
 RMint32 Mat12;
 RMint32 Mat20;
 RMint32 Mat21;
 RMint32 Mat22;
  RMint32 Cst0;
  RMint32 Cst1;
  RMint32 Cst2;
};

enum EMhwlibDisplayWindowPositionMode {
 EMhwlibDisplayWindowPositionMode_FrontEdgeToBorder = 1,
 EMhwlibDisplayWindowPositionMode_RearEdgeToBorder,
 EMhwlibDisplayWindowPositionMode_FrontEdgeToCenter,
 EMhwlibDisplayWindowPositionMode_RearEdgeToCenter
};

enum EMhwlibDisplayWindowValueMode {
 EMhwlibDisplayWindowValueMode_Fixed = 1,
 EMhwlibDisplayWindowValueMode_Relative
};

struct EMhwlibDisplayWindow {
 RMint32 X;
 RMint32 Y;
 RMuint32 Width;
 RMuint32 Height;
 enum EMhwlibDisplayWindowPositionMode XPositionMode;
 enum EMhwlibDisplayWindowPositionMode YPositionMode;
 enum EMhwlibDisplayWindowValueMode XMode;
 enum EMhwlibDisplayWindowValueMode YMode;
 enum EMhwlibDisplayWindowValueMode WidthMode;
 enum EMhwlibDisplayWindowValueMode HeightMode;
};

enum EMhwlibSamplingMode {
 EMhwlibSamplingMode_444 = 1,
 EMhwlibSamplingMode_411,
 EMhwlibSamplingMode_422,
 EMhwlibSamplingMode_420,
 EMhwlibSamplingMode_420_MPEG1
};

enum EMhwlibColorMode {
 EMhwlibColorMode_LUT_1BPP = 1,
 EMhwlibColorMode_LUT_2BPP,
 EMhwlibColorMode_LUT_4BPP,
 EMhwlibColorMode_LUT_8BPP,
 EMhwlibColorMode_TrueColor,
 EMhwlibColorMode_TrueColorWithKey,
 EMhwlibColorMode_VideoInterleaved,
 EMhwlibColorMode_VideoNonInterleaved,
  EMhwlibColorMode_16BPP_Alpha_LUT
};

enum EMhwlibColorFormat {
 EMhwlibColorFormat_24BPP_565 = 1,
 EMhwlibColorFormat_24BPP,
 EMhwlibColorFormat_32BPP_4444,
 EMhwlibColorFormat_32BPP,
 EMhwlibColorFormat_16BPP_565,
 EMhwlibColorFormat_16BPP_1555,
 EMhwlibColorFormat_16BPP_4444
};

enum EMhwlibInputColorFormat {
 EMhwlibInputColorFormat_24BPP = 1,
 EMhwlibInputColorFormat_24BPP_8565,
 EMhwlibInputColorFormat_24BPP_5676,
 EMhwlibInputColorFormat_32BPP,
 EMhwlibInputColorFormat_16BPP_565,
 EMhwlibInputColorFormat_16BPP_1555,
 EMhwlibInputColorFormat_16BPP_4444,
 EMhwlibInputColorFormat_31BPP_7888
};

struct EMhwlibAspectRatio {
 RMuint32 X;
 RMuint32 Y;
};

enum EMhwlibAspectRatioType {
 EMhwlibAspectRatio_Picture = 1,
 EMhwlibAspectRatio_Pixel,
 EMhwlibAspectRatio_Display
};

union aspect_ratio_union {
 struct EMhwlibAspectRatio par;
 struct EMhwlibAspectRatio dar;
};

struct EMhwlibWindow {
 RMuint32 x;
 RMuint32 y;
 RMuint32 width;
 RMuint32 height;
};

struct EMhwlibFilmGrain {
 RMuint32 block_info_start_address;
 RMuint32 block_info_width;
 RMuint32 pixel_x_offset;
 RMuint32 pixel_y_offset;
 RMuint32 field1;
 RMuint32 field2;
 RMuint32 filed3;
};







struct EMhwlibNewPicture {
 RMuint32 luma_address;
 RMuint32 luma_total_width;
 RMuint32 chroma_address;
 RMuint32 chroma_total_width;
 struct EMhwlibWindow luma_position_in_buffer;
 struct EMhwlibWindow chroma_position_in_buffer;
 RMuint32 scaled_width;
 RMuint32 scaled_height;
 struct EMhwlibWindow panscan_1;
 struct EMhwlibWindow panscan_2;
 struct EMhwlibWindow panscan_3;
 struct EMhwlibWindow panscan_4;
 RMuint32 ar_x;
 RMuint32 ar_y;
 RMuint32 color_description;
 RMuint32 first_pts_lo;
 RMuint32 first_pts_hi;
 RMuint32 delta_pts;
 RMuint32 system_pts;
 RMuint32 timecode;
 RMuint32 time_increment_resolution;
 RMuint32 picture_display_data;
 RMuint32 luma_scale;
 RMuint32 chroma_scale;
 RMuint32 picture_bytecount;
 RMuint32 user_metadata;

 RMuint32 user_data_entry_status;
 RMuint32 user_data_entry_size;

 RMuint32 picture_decode_status;
 RMuint32 picture_display_status;
 RMuint32 error_status;
 struct EMhwlibFilmGrain film_grain;
   RMuint32 palette_address;
 RMuint32 palette_size;
 RMuint32 palette_buffer_size;
        RMuint32 frame_count;
};

enum EMhwlibDefaultColorSpaceAlgorithm {
 EMhwlibDefaultColorSpaceAlgoritm_601 = 0,
 EMhwlibDefaultColorSpaceAlgoritm_709,
 EMhwlibDefaultColorSpaceAlgoritm_SD601_HD709,
};

struct EMhwlibSurface {
 RMuint32 module_id;
 RMuint32 video_timer_index;
 RMuint32 picture_fifo;
 RMuint32 picture_mem_base;
 RMuint32 forced_flags;
 union aspect_ratio_union ar;
 enum EMhwlibSamplingMode sampling_mode;
  enum EMhwlibColorSpace color_space;
 enum EMhwlibColorMode color_mode;
 enum EMhwlibColorFormat color_format;
 RMuint32 tiled;
 RMuint32 force_Y_addr;
 RMuint32 force_UV_addr;
 RMuint32 valid_force_addr;
 struct gbus_fifo_eraser inband_cmd_fifo;
 RMuint32 palette_buffer_addr;
 RMuint32 palette_buffer_size;
 enum EMhwlibDefaultColorSpaceAlgorithm default_cs_algo;
 struct EMhwlibNewPicture sequence_picture;
};



struct EMhwlibSubPicture {
 RMuint32 start_address;
 RMuint32 reserved0;
 RMuint32 reserved1;
 RMuint32 reserved2;
 struct EMhwlibWindow bitmap_position_in_buffer;
 struct EMhwlibWindow reserved3;
 RMuint32 scaled_width;
 RMuint32 scaled_height;
 struct EMhwlibWindow reserved4;
 struct EMhwlibWindow reserved5;
 struct EMhwlibWindow reserved6;
 struct EMhwlibWindow reserved7;
 RMuint32 ar_x;
 RMuint32 ar_y;
 RMuint32 new_command;
 RMuint32 first_pts_lo;
 RMuint32 first_pts_hi;
 RMuint32 reserved8;
 RMuint32 system_pts;
 RMuint32 reserved9;
 RMuint32 reserved10;
 RMuint32 subpicture_type;
 RMuint32 dcsq_command;
 RMuint32 reserved11;
 RMuint32 reserved12;
 RMuint32 reserved13;
 RMuint32 reserved14;
 RMuint32 reserved15;
 RMuint32 picture_decode_status;
 RMuint32 picture_display_status;
 RMuint32 error_status;
 struct EMhwlibFilmGrain reserved16;
 RMuint32 reserved17;
 RMuint32 reserved18;
 RMuint32 reserved19;
 RMuint32 frame_count;
};





struct EMhwlibCCSurface {
 RMuint32 allowed_types;
 RMuint32 fifo;
 RMuint32 timer_index;
 RMuint32 mixer;
 RMuint32 decoder;
 RMuint32 command;
 RMuint32 clear_state;
 RMuint32 enable;
 RMuint32 mute;
};
# 582 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_displaytypes.h"
struct EMhwlibTTXField {
 RMuint32 field_parity;
 RMuint32 framing_code;
 RMuint32 line_mask;
 RMuint32 data[18*11];
 RMuint32 display_flags;
};

struct EMhwlibTTXPicture {
 struct EMhwlibTTXField fields[2];
 RMuint64 pts;
};

struct EMhwlibTTXSurface {
 RMuint32 fifo;
 RMuint32 mixer;
 RMuint32 decoder;
 RMuint32 stc;
 RMuint32 enable;
};

struct EMhwlibPictureOverride {
 RMbool Enable;
 enum EMhwlibColorFormat ColorFormat;
 RMuint32 Width;
 RMuint32 Height;
};


struct EMhwlibBlackStripMode {
 RMuint32 Horizontal;
 RMuint32 Vertical;
};

struct EMhwlibCutStripMode {
 RMuint32 Horizontal;
 RMuint32 Vertical;
};

struct EMhwlibNonLinearScalingMode {
 RMuint32 Width;
 RMuint32 Level;
};

enum EMhwlibScalingMode {
 EMhwlibScalingMode_PanScan = 1,
 EMhwlibScalingMode_LetterBox,
 EMhwlibScalingMode_ARIB
};


struct EMhwlibDownScalingMode {
 RMuint32 Discard;
 RMuint32 FilterBoundary[3];
};

enum EMhwlib422DownSamplingMode {
 EMhwlib422DownSamplingMode_Discard = 1,
 EMhwlib422DownSamplingMode_Average,
};

enum EMhwlibDeinterlacingMode {
 EMhwlibDeinterlacingMode_Discard_Bob = 1,
 EMhwlibDeinterlacingMode_Weave,
 EMhwlibDeinterlacingMode_ConstantBlend,
 EMhwlibDeinterlacingMode_MotionAdaptative
};

struct EMhwlibKeyColor {
 RMuint32 R_Cr;
 RMuint32 G_Y;
 RMuint32 B_Cb;
 RMuint32 Range;
};

struct EMhwlibLumaKeying {
 RMuint32 LumaMin;
 RMuint32 LumaMax;
};

struct EMhwlibColor {
 RMuint32 R_Cr;
 RMuint32 G_Y;
 RMuint32 B_Cb;
};

struct EMhwlibDeepColor {
 RMuint32 R_Cr;
 RMuint32 G_Y;
 RMuint32 B_Cb;
 RMuint32 ComponentBitDepth;
};


enum EMhwlibScalerFieldSelection {
 EMhwlibScalerFieldSelection_BestFieldTime = 0,
 EMhwlibScalerFieldSelection_BestFieldType,
 EMhwlibScalerFieldSelection_OneField,
};

enum EMhwlibSCARTWideBitState {
 EMhwlibSCARTWideState_Auto = 1,
 EMhwlibSCARTWideState_16_9,
 EMhwlibSCARTWideState_4_3
};

enum EMhwlibDisplayTimeIntervalMode {
 EMhwlibDisplayIntervalMode_None = 1,
 EMhwlibDisplayIntervalMode_Start,
 EMhwlibDisplayIntervalMode_End,
 EMhwlibDisplayIntervalMode_StartEnd
};

struct EMhwlibDisplayTimeInterval {
 enum EMhwlibDisplayTimeIntervalMode Mode;
 RMuint32 StartPTSLo;
 RMuint32 StartPTSHi;
 RMuint32 EndPTSLo;
 RMuint32 EndPTSHi;
};

enum GPIOId_type {


 GPIOId_Sys_0 = 0,

 GPIOId_Sys_1 = 1,

 GPIOId_Sys_2 = 2,

 GPIOId_Sys_3 = 3,

 GPIOId_Sys_4 = 4,

 GPIOId_Sys_5 = 5,

 GPIOId_Sys_6 = 6,

 GPIOId_Sys_7 = 7,

 GPIOId_Sys_8 = 8,

 GPIOId_Sys_9 = 9,

 GPIOId_Sys_10 = 10,

 GPIOId_Sys_11 = 11,

 GPIOId_Sys_12 = 12,

 GPIOId_Sys_13 = 13,

 GPIOId_Sys_14 = 14,

 GPIOId_Sys_15 = 15,




 GPIOId_Eth_0 = 16,

 GPIOId_Eth_1 = 17,

 GPIOId_Eth_2 = 18,

 GPIOId_Eth_3 = 19,

 GPIOId_Eth_4 = 20,

 GPIOId_Eth_5 = 21,

 GPIOId_Eth_6 = 22,

 GPIOId_Eth_7 = 23,

 GPIOId_Eth_8 = 24,

 GPIOId_Eth_9 = 25,

 GPIOId_Eth_10 = 26,

 GPIOId_Eth_11 = 27,

 GPIOId_Eth_12 = 28,

 GPIOId_Eth_13 = 29,

 GPIOId_Eth_14 = 30,

 GPIOId_Eth_15 = 31,

 GPIOId_Eth_16 = 32,

 GPIOId_Eth_17 = 33,




 GPIOId_Eth_18 = 34,

 GPIOId_Eth_19 = 35,

 GPIOId_Eth_20 = 36,

 GPIOId_Eth_21 = 37,

 GPIOId_Eth_22 = 38,

 GPIOId_Eth_23 = 39,

 GPIOId_Eth_24 = 40,

 GPIOId_Eth_25 = 41,

 GPIOId_Eth_28 = 42,

 GPIOId_Eth_29 = 43,

 GPIOId_Eth_30 = 44,

 GPIOId_Eth_31 = 45,

 GPIOId_Eth_32 = 46,

 GPIOId_Eth_33 = 47,

 GPIOId_Eth_34 = 48,

 GPIOId_Eth_35 = 49,




 GPIOId_tdmx_0 = 50,

 GPIOId_tdmx_1 = 51,




 GPIOId_uart0_0 = 52,

 GPIOId_uart0_1 = 53,

 GPIOId_uart0_2 = 54,

 GPIOId_uart0_3 = 55,

 GPIOId_uart0_4 = 56,

 GPIOId_uart0_5 = 57,

 GPIOId_uart0_6 = 58,

 GPIOId_uart1_0 = 59,

 GPIOId_uart1_1 = 60,

 GPIOId_uart1_2 = 61,

 GPIOId_uart1_3 = 62,

 GPIOId_uart1_4 = 63,

 GPIOId_uart1_5 = 64,

 GPIOId_uart1_6 = 65,



 GPIOId_scard_0 = 66,

 GPIOId_scard_1 = 67,

 GPIOId_scard_2 = 68,
};

struct EMhwlibSCARTConfig {
 enum GPIOId_type EnableBit;
 RMuint32 EnableInvert;
 enum GPIOId_type WideBit;
 RMuint32 WideInvert;
};


struct EMhwlibOutputGenlock {

 RMuint32 InputID;

 RMuint8 PhaseMin;

 RMuint8 PhaseMax;
};


struct EMhwlibDACDisable {

 RMbool DAC1SVideoY;

 RMbool DAC2SVideoC;

 RMbool DAC3CVBS;

 RMbool DAC4Y;

 RMbool DAC5Cb;

 RMbool DAC6Cr;
};


enum EMhwlibLumaChromaDelay {

 EMhwlibLumaChromaDelay_NoDelay = 0,

 EMhwlibLumaChromaDelay_DelayChroma1Clock,

 EMhwlibLumaChromaDelay_DelayChroma2Clock,

 EMhwlibLumaChromaDelay_DelayChroma3Clock,

 EMhwlibLumaChromaDelay_Reserved,

 EMhwlibLumaChromaDelay_DelayLuma1Clock,

 EMhwlibLumaChromaDelay_DelayLuma2Clock,

 EMhwlibLumaChromaDelay_DelayLuma3Clock
};


struct EMhwlibLineCrop {

 RMuint32 CropLeftPos;

 RMuint32 CropRightPos;

 enum EMhwlibColorSpace ColorSpace;

 RMbool CropControl;
};

enum EMhwlibSubtitlingMode {
 EMhwlibSubtitlingMode_none = 0,
 EMhwlibSubtitlingMode_inside_active_area,
 EMhwlibSubtitlingMode_outside_active_area,
 EMhwlibSubtitlingMode_reserved
};


struct EMhwlibWSSEnhancedServices {

 RMbool FilmBit;

 RMbool ColourCoding;

 RMbool Helper;

 RMbool Subtitles;

 enum EMhwlibSubtitlingMode SubtitlingMode;

 RMbool SurroundSound;
};


enum EMhwlibActiveFormat {
 EMhwlibAF_no_info = 0x0,
 EMhwlibAF_reserved_1 = 0x1,
 EMhwlibAF_16x9_top = 0x2,
 EMhwlibAF_14x9_top = 0x3,
 EMhwlibAF_64x27_centered = 0x4,
 EMhwlibAF_reserved_5 = 0x5,
 EMhwlibAF_reserved_6 = 0x6,
 EMhwlibAF_reserved_7 = 0x7,
 EMhwlibAF_same_as_picture = 0x8,
 EMhwlibAF_4x3_centered = 0x9,
 EMhwlibAF_16x9_centered = 0xA,
 EMhwlibAF_14x9_centered = 0xB,
 EMhwlibAF_reserved_12 = 0xC,
 EMhwlibAF_4x3_centered_prot_14x9 = 0xD,
 EMhwlibAF_16x9_centered_prot_14x9 = 0xE,
 EMhwlibAF_16x9_centered_prot_4x3 = 0xF
};


struct EMhwlibActiveFormatDescription {

 RMbool ActiveFormatValid;

 enum EMhwlibActiveFormat ActiveFormat;

 struct EMhwlibAspectRatio FrameAspectRatio;
};


struct EMhwlibActiveFormatBarInfo {


 RMuint32 FrameSizeX;


 RMuint32 FrameSizeY;



 RMbool VerticalBarDataValid;


 RMbool HorizontalBarDataValid;




 RMuint16 EndLeftBarPixelNum;



 RMuint16 StartRightBarPixelNum;




 RMuint16 EndTopBarLineNum;



 RMuint16 StartBottomBarLineNum;
};

enum EMhwlibScanInfo {
 EMhwlibScanInfo_NoData = 0,
 EMhwlibScanInfo_Overscanned = 1,
 EMhwlibScanInfo_Underscanned = 2
};


struct EMhwlibVideoFrameDescription {

 struct EMhwlibActiveFormatDescription AFD;

 struct EMhwlibActiveFormatBarInfo BarInfo;

 enum EMhwlibColorSpace ColorSpace;

 enum EMhwlibSamplingMode SamplingMode;

 enum EMhwlibScanInfo ScanInfo;

 struct EMhwlibNonLinearScalingMode NonLinearScaling;

 RMuint32 PixelRepetition;
};

enum EMhwlibCCEnable {
 CC_EnableTopBottom = 0,
 CC_EnableBottom,
 CC_EnableTop,
 CC_DisableTopBottom
};

enum EMhwlibCGMSWSSEnable {
 CGMSWSS_DisableTopBottom = 0,
 CGMSWSS_EnableBottom,
 CGMSWSS_EnableTop,
 CGMSWSS_EnableTopBottom
};


enum EMhwlibWSSPictureFormat {
 WSSNormal = 0,
 WSSLetterBox
};


enum EMhwlibWSSPicturePosition {
 WSSTop = 0,
 WSSCentre
};


struct EMhwlibCGMSWSS_525 {
 enum EMhwlibCGMSWSSEnable Enable;
 enum EMhwlibWSSPictureFormat PictureFormat;
 struct EMhwlibAspectRatio dar;
};


struct EMhwlibCGMSWSS_625 {
 enum EMhwlibCGMSWSSEnable Enable;
 enum EMhwlibWSSPictureFormat PictureFormat;
 enum EMhwlibWSSPicturePosition PicturePosition;
 struct EMhwlibAspectRatio dar;
};


enum EMhwlibVBIEnable {
 EMhwlibVBIEnable_Disable = 0,
 EMhwlibVBIEnable_EnableBottom,
 EMhwlibVBIEnable_EnableTop,
 EMhwlibVBIEnable_EnableTopBottom
};



struct EMhwlibAnalogFrameInfo {

 RMuint32 APIVersion;

 enum EMhwlibVBIEnable VBIEnable;

 struct EMhwlibVideoFrameDescription Frame;

 struct EMhwlibWSSEnhancedServices WSSEnhancedServices;

};


struct EMhwlibDigitalFrameInfo {

 RMuint32 APIVersion;

 RMuint32 VIC;

 struct EMhwlibVideoFrameDescription Frame;

};


struct Input_VBIStore_type {

 RMuint32 x;

 RMuint32 y;

 RMuint32 w;

 RMuint32 h;

 RMuint32 Buffer;

 RMuint32 BufferSize;
};


struct Input_VBICaptureRaw_type {

 RMuint32 TopVBIOffset;

 RMuint32 TopVBILineEnable;

 RMuint32 BottomVBIOffset;

 RMuint32 BottomVBILineEnable;

 RMuint32 Buffer;

 RMuint32 BufferSize;
};


struct Input_VBICaptureANC_type {

 RMbool Enable;

 RMuint32 ActiveWidth;

 RMuint32 ActiveHeight;

 RMuint32 YOffsetTop;

 RMuint32 YOffsetBottom;

 RMuint32 Buffer;

 RMuint32 BufferSize;
};


struct Input_VBIData_type {

 RMuint32 Flags;

 RMuint32 PTS;

 RMuint32 DataSize;

 RMuint32 SequenceNumber;

 RMuint16 Data[1024];
};


struct Input_VBIReadbackI2C_type {

 RMuint8 I2CDevice;

 RMuint8 I2CDelay;

 RMbool Enable_CC;

 RMbool Enable_WSS;
};



struct Input_Detect_type {

 RMuint32 XtalPerField;

 RMuint32 ClocksPerField;

 RMuint32 LinesPerField;

 RMuint32 ClocksPerLine;
};


struct Input_GPIOFieldID_type {

 enum GPIOId_type GPIONumber;

 RMbool Enable;

 RMbool Invert;
};


struct EMhwlibInputReadbackI2CCC {
 RMuint32 APIVersion;
 RMbool Enable;
 RMuint32 Speed;
 RMuint32 Delay;
 RMuint8 WriteDevice;
 RMuint8 WriteSubAddr;
 RMuint8 WriteData;
 RMuint8 ReadDevice;
 RMuint8 ReadSubAddr;
 RMuint32 ReadSize;
 RMuint32 OddStatusOffs;
 RMuint8 OddStatusMask;
 RMuint8 OddStatusExpect;
 RMuint32 OddByte1Offs;
 RMuint32 OddByte2Offs;
 RMuint32 EvenStatusOffs;
 RMuint8 EvenStatusMask;
 RMuint8 EvenStatusExpect;
 RMuint32 EvenByte1Offs;
 RMuint32 EvenByte2Offs;
};
# 21 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/pll_hal_types.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/pll_hal_types.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 1
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmem86xxid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmplatform.h" 1
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmfeatures.h" 1
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmarchid.h" 1
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmcompilerid.h" 1
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmbtypes.h" 1
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmstatus.h" 1
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmpanic.h" 1
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmmacros.h" 1
# 45 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmstreamid.h" 1
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdbg.h" 1
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmmm.h" 1
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmsync.h" 1
# 49 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmpacketcommandops.h" 1
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmnonasciitype.h" 1
# 51 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../rmdef/rmdef.h" 2
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/pll_hal_types.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/../../../llad/include/gbus.h" 1
# 21 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/../../emhwlib_hal/pll/include/pll_hal_types.h" 2




struct PLLRegSet {
 RMuint32 entries;
 RMuint32 addr[16];
 RMuint32 data[16];
};




enum PLLGen {
 PLLGen_pll_0,
 PLLGen_pll_1,
 PLLGen_pll_2,
 PLLGen_pll_3,
 PLLGen_cd_0,
 PLLGen_cd_1,
 PLLGen_cd_2,
 PLLGen_cd_3,
 PLLGen_cd_4,
 PLLGen_cd_5,
 PLLGen_cd_6,
 PLLGen_cd_7,
 PLLGen_cd_8,
 PLLGen_cd_9,
 PLLGen_cd_10
};


enum PLLOut {
 PLLOut_0,
 PLLOut_1,
 PLLOut_2
};





enum PLLSource {
 PLLSource_pwrdwn,
 PLLSource_xtal,
 PLLSource_vcxo0,
 PLLSource_vcxo1,
 PLLSource_RClk0,
 PLLSource_RClk1,
 PLLSource_VI0,
 PLLSource_VI1
};


enum ClockSignal {
 ClockSignal_sys,
 ClockSignal_cpu,
 ClockSignal_vdec,
 ClockSignal_RClk0,
 ClockSignal_RClk1,
 ClockSignal_RClk2,
 ClockSignal_RClk3,

 ClockSignal_VO0,
 ClockSignal_VO1,
 ClockSignal_VO2,
 ClockSignal_VO3,
 ClockSignal_AO0,
 ClockSignal_AO1,
 ClockSignal_rclk,
 ClockSignal_sel,

 ClockSignal_sdio,
 ClockSignal_CD,
 ClockSignal_USB,
 ClockSignal_SATA,
 ClockSignal_eth
};





enum ClockCounter {
 ClockCounter_sys_clk,
 ClockCounter_xtal_in,
 ClockCounter_vcxo0_in,
 ClockCounter_vcxo1_in,
 ClockCounter_rclk_out,
 ClockCounter_sel_clk,
 ClockCounter_rnd,
 ClockCounter_0,
 ClockCounter_1,
 ClockCounter_2,
 ClockCounter_3,
 ClockCounter_4
};


enum ClockCounterSource {
 ClockCounterSource_cd0 = 1,
 ClockCounterSource_cd1,
 ClockCounterSource_vcxo0,
 ClockCounterSource_vcxo1,
 ClockCounterSource_cd4,
 ClockCounterSource_cd5,
 ClockCounterSource_cd6,
 ClockCounterSource_cd7,
 ClockCounterSource_cd8,
 ClockCounterSource_cd9,
 ClockCounterSource_cd10,
 ClockCounterSource_vi0,
 ClockCounterSource_vi1,
 ClockCounterSource_pll1_1,
 ClockCounterSource_pll2_1
};
# 22 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h" 2

struct EMhwlibMacrovisionParam {
 RMuint32 N0;
 RMuint32 N1;
 RMuint32 N2;
 RMuint32 N3;
 RMuint32 N4;
 RMuint32 N5;
 RMuint32 N6;
 RMuint32 N7;
 RMuint32 N8;
 RMuint32 N9;
 RMuint32 N10;
 RMuint32 N11;
 RMuint32 N12;
 RMuint32 N13;
 RMuint32 N14;
 RMuint32 N15;
 RMuint32 N16;
 RMuint32 N17;
 RMuint32 N18;
 RMuint32 N19;
 RMuint32 N20;
 RMuint32 N21;
 RMuint32 N22;
};

struct EMhwlibClockGenerator {
 enum PLLGen PLL;
 enum PLLOut PLLOut;
};

struct EMhwlibSubPictureSurface_type {
 RMuint32 Scaler;
 RMuint32 Surface;
};

enum EMhwlibCCType{
 EMhwlibCCType_TopField = 0,
 EMhwlibCCType_BottomField = 1,
 EMhwlibCCType_DTVCCData = 2,
 EMhwlibCCType_DTVCCHeader = 3
};

enum EMhwlibCCSelect{
 EMhwlibCCSelect_CC1 = 1,
 EMhwlibCCSelect_CC2 = 2,
 EMhwlibCCSelect_CC3 = 3,
 EMhwlibCCSelect_CC4 = 4,
};






enum RUADramType {
 RUA_DRAM_UNPROTECTED = 57,
 RUA_DRAM_CACHED = RUA_DRAM_UNPROTECTED,
 RUA_DRAM_UNCACHED = RUA_DRAM_UNPROTECTED,
 RUA_DRAM_ZONEA,
 RUA_DRAM_PB = RUA_DRAM_ZONEA,
 RUA_DRAM_ZONEB,
 RUA_DRAM_BB = RUA_DRAM_ZONEB,
};

enum FIFOType {
 FIFO32BitRel,
 FIFO16BitRel,
 FIFO16BitRelDemo,
 FIFO32BitDemux,
 FIFO32BitEraser
};

enum InputFormat {
 InputFormat_24bpp = 0,
 InputFormat_24bpp_8565 = 1,
 InputFormat_24bpp_5676 = 2,
 InputFormat_32bpp = 3,
 InputFormat_16bpp_565 = 4,
 InputFormat_16bpp_1555 = 5,
 InputFormat_16bpp_4444 = 6,
 InputFormat_31bpp_7888 = 7
};

enum ProcessorState {
 CPU_RUNNING,
 CPU_STOPPED,
 CPU_RESET
};

enum ClockInputSelect {
 ClockInputSelect_PowerDown = 0,
 ClockInputSelect_XTAL = 1,
 ClockInputSelect_VCXO0 = 2,
 ClockInputSelect_VCXO1 = 3,
 ClockInputSelect_RCLK0 = 4,
 ClockInputSelect_RCLK1 = 5,
 ClockInputSelect_VI0 = 6,
 ClockInputSelect_VI1 = 7
};

enum MPEG_Profile {
 Profile_FIRST_ = 0,
 Profile_MPEG2_SD,
 Profile_MPEG2_DVD,
 Profile_MPEG2_HD,
 Profile_MPEG4_SD,
 Profile_MPEG4_SD_Padding,
 Profile_MPEG4_HD,
 Profile_MPEG4_HD_Padding,
 Profile_MPEG2_SD_Packed,
 Profile_MPEG2_DVD_Packed,
 Profile_MPEG2_HD_Packed,
 Profile_MPEG4_SD_Packed,
 Profile_MPEG4_HD_Packed,
 Profile_MPEG2_SD_DeInt,
 Profile_MPEG2_DVD_DeInt,
 Profile_MPEG2_HD_DeInt,
 Profile_MPEG4_SD_DeInt,
 Profile_MPEG4_SD_DeInt_Padding,
 Profile_MPEG4_HD_DeInt,
 Profile_MPEG4_HD_DeInt_Padding,
 Profile_MPEG2_SD_Packed_DeInt,
 Profile_MPEG2_DVD_Packed_DeInt,
 Profile_MPEG2_HD_Packed_DeInt,
 Profile_MPEG4_SD_Packed_DeInt,
 Profile_MPEG4_HD_Packed_DeInt,
 Profile_WMV_SD,
 Profile_WMV_816P,
 Profile_WMV_HD,
 Profile_DIVX3_SD,
 Profile_DIVX3_HD,
 Profile_DIVX3_SD_Packed,
 Profile_DIVX3_HD_Packed,
 Profile_H264_SD,
 Profile_H264_HD,
 Profile_H264_SD_DeInt,
 Profile_H264_HD_DeInt,
 Profile_VC1_SD,
 Profile_VC1_HD,
 Profile_LAST_
};

enum AACInputFormat {
 ADIF_header = 0,
 ADTS_header = 1,
 DSI_header = 2
};

enum TestToneType {
 Ttone_WhiteNoise = 0,
 Ttone_other
};

enum DemuxSourceType {
 SourceType_atsc,
 SourceType_payload,
 SourceType_dvd,
 SourceType_m1s,
 SourceType_m2t,
 SourceType_cipher_only
};

enum DemuxSpiType {
 No_Spi,
 Serial_Spi,
 Paralel_Spi
};

enum DemuxTriggerType {
 Trigger_None,
 Trigger_PCR,
 Trigger_VideoPts,
 Trigger_AudioPts,
 Trigger_VideoOrAudioPts,
 Trigger_PayloadUnitStartIndicator
};

enum DemuxOutputTrigger_type {
 DemuxOutputTrigger_None,
 DemuxOutputTrigger_Pts,
 DemuxOutputTrigger_PayloadUnitStartIndicator
};

enum TransferTaskCallback {
 TRANSFER_TASK_CALLBACK_NONE,
 TRANSFER_TASK_CALLBACK_GFX,
 TRANSFER_TASK_CALLBACK_DEMUX,
 TRANSFER_TASK_CALLBACK_DEMUX_OUTPUT,
};

enum TransferTaskDirection {
 TRANSFER_TASK_DIRECTION_WRITE,
 TRANSFER_TASK_DIRECTION_READ,
};


enum TransferTaskFifoMode {
 TRANSFER_TASK_FIFO_MODE_WRITE_PTS_DMEM_32 = 0,
 TRANSFER_TASK_FIFO_MODE_WRITE_PTS_DMEM_16,
 TRANSFER_TASK_FIFO_MODE_WRITE_MUTEX_PTS_DMEM_16,
 TRANSFER_TASK_FIFO_MODE_WRITE_PTS_ERASER,
 TRANSFER_TASK_FIFO_MODE_READ_PTS_DMEM_32,
 TRANSFER_TASK_FIFO_MODE_READ_PTS_DMEM_16,
 TRANSFER_TASK_FIFO_MODE_READ_MUTEX_PTS_DMEM_16,
 TRANSFER_TASK_FIFO_MODE_READ_PTS_ERASER,
};


struct AudioSpecificParams {
 RMuint32 DecoderParams;
 RMuint32 DecodeParamExtensions[9];
};

struct ScalerLUT {
 RMuint32 Size;
 RMuint32 Data[256];
};


struct CursorLUT {
  RMuint32 Data[16];
};

struct BWArbiterParam{
 RMuint32 MaxBW;
 RMuint32 MinBW;
 RMbool Enable;
};



struct TeleTextBuffer {
 RMuint32 Size;
 RMuint32 Data[0x300];
};
# 268 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct emhwlib_datablock {
 RMuint8 *data;
 RMuint32 size;
};







struct emhwlib_info {
 RMuint32 ValidFields;
 RMuint64 TimeStamp;
 RMuint32 FirstAccessUnitPointer;
};

struct mm_spec {
 RMuint32 start;
 RMuint32 size;
 void *syncCookie;
};

struct DecoderProcessInterrupt_type {
 RMuint32 stream;
 RMuint32 *pEstatus;
};

struct ReadBufferInfo {
 RMuint32 address;
 RMuint32 size;
 void *context;
};

enum RawDataTransferDirection {
 RawDataTransferDirection_Read = 32,
 RawDataTransferDirection_Write,
};

struct SoftIrqTaskEvent {
 RMuint32 TaskAddress;
 RMuint32 EventMask;
};

struct InbandCommand_type {
 RMuint32 Tag;
 RMuint32 Coordinate;
};

enum EMhwlibInbandCommmand {
 EMhwlibInbandCommand_EOS = 0x16
};

typedef RMuint32 RMpalette_1BPP[2];
typedef RMuint32 RMpalette_2BPP[4];
typedef RMuint32 RMpalette_4BPP[16];
typedef RMuint32 RMpalette_8BPP[256];

typedef RMuint32 RMCursorLut[16];
typedef RMuint32 RMCursorPix[512];

typedef RMuint8 RMcss_chlgkey[10];
typedef RMuint8 RMcss_key[5];
typedef RMuint8 RMcss_disckey[2028];
typedef RMuint8 RMcss_titlekey[5];

typedef RMuint8 RMAESKey[16];
typedef RMuint8 RMDESKey[8];
typedef RMuint8 RMRC4Key[32];

typedef RMuint8 RMuint8x6[6];
typedef RMuint8 RMuint8x8[8];
typedef RMuint8 RMuint8x32[32];
typedef RMuint8 RMuint8x256[256];
typedef RMuint16 RMuint16x8[8];
typedef RMuint16 RMuint16x6[6];
typedef RMuint32 RMuint32x6[6];
typedef RMint32 RMuint32x64[64];

typedef RMuint32 RMuint32x4[4];
typedef RMint32 RMint32x5[5];

typedef RMuint32 RMsha1Sum[5];

typedef RMuint32 RMVSyncXtal[6][2];

enum EncryptionType {
 AES_128 = 1,
 AES_256
};

struct RMcipherBuffer {
 RMuint32 FromAddress;
 RMuint32 ToAddress;
 RMuint32 Size;
};

struct DRAMSizeXferFIFO_in_type {
 RMuint32 XferFIFOSize;
 RMuint32 XferFIFOCount;
};

struct DRAMSizeXferFIFO_out_type {
 RMuint32 CachedSize;
 RMuint32 UncachedSize;
};

struct AddXferFIFO_type {
 RMuint32 XferFIFOSize;
 RMuint32 XferFIFOCount;
 RMuint32 CachedAddress;
 RMuint32 CachedSize;
 RMuint32 UncachedAddress;
 RMuint32 UncachedSize;
};

struct ReceiveThreshold_type {
 RMbool partial_read;
 RMuint32 size;
};
# 402 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct DataFIFOInfo {
 RMuint32 StartAddress;
 RMuint32 Size;
 RMuint32 Writable;
 RMuint32 Readable;
};

struct UserDataFIFOInfo {
 RMuint32 ContainerAddress;
 RMuint32 StartAddress;
 RMuint32 Size;
 RMuint32 WrPtr;
 RMuint32 RdPtr;
};
# 424 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct XferFIFOInfo_type {
 RMuint32 StartAddress;
 RMuint32 Size;
 RMuint32 Writable;
 RMuint32 Readable;
 RMuint32 Erasable;
};

struct PSFMatchSection_type {
 RMuint8 expand_link_index;
 RMuint8 and_link_index;
 RMuint8 mask[12];
 RMuint8 mode[12];
 RMuint8 comp[12];
};

struct PSFRangeSection_type {
 RMuint8 expand_link_index;
 RMuint8 and_link_index;
 RMuint16 min_mask;
 RMuint16 max_mask;
 RMuint16 range_mask;
 RMuint8 min_comp[12];
 RMuint8 max_comp[12];
};

typedef RMascii EMhwlibString[256];

enum PictureOrientation{
 FRTop_FCLeft = 1,
 FRTop_FCRight,
 FRBottom_FCRight,
 FRBottom_FCLeft,
 FRLeft_FCTop,
 FRRight_FCTop,
 FRLeft_FCBottom,
 FRRight_FCBottom
};

struct GFXEngine_MoveReplaceRectangle_type {
 RMuint32 SrcX;
 RMuint32 SrcY;
 RMuint32 AlphaX;
 RMuint32 AlphaY;
 RMuint32 DstX;
 RMuint32 DstY;
 RMuint32 Width;
 RMuint32 Height;
 enum gfx_merge_mode Merge;
};


struct GFXEngine_MoveReplaceScaleRectangle_type {
 RMuint32 SrcX;
 RMuint32 SrcY;
 RMuint32 AlphaX;
 RMuint32 AlphaY;
 RMuint32 DstX;
 RMuint32 DstY;
 RMuint32 SrcWidth;
 RMuint32 SrcHeight;
 RMuint32 DstWidth;
 RMuint32 DstHeight;
 enum gfx_merge_mode Merge;
};

struct GFXEngine_MoveReplace_type {
 RMuint32 SrcX;
 RMuint32 SrcY;
 RMuint32 SrcWidth;
 RMuint32 SrcHeight;
 enum gfx_input_type SrcInput;
 enum gfx_surface_id SrcId;
 RMuint32 AlphaX;
 RMuint32 AlphaY;
 RMuint32 DstX;
 RMuint32 DstY;
 RMuint32 DstWidth;
 RMuint32 DstHeight;
 enum gfx_merge_mode Merge;
 RMuint32 Color;
};


struct GFXEngine_FillReplaceGradient_type {
 RMuint32 AlphaX;
 RMuint32 AlphaY;
 RMuint32 DstX;
 RMuint32 DstY;
 RMuint32 Width;
 RMuint32 Height;
 enum gfx_merge_mode Merge;
};

enum ScalerCommand {
 ScalerCommand_Uninit,
 ScalerCommand_Init,
 ScalerCommand_Stop,
 ScalerCommand_Play,
 ScalerCommand_Pause,
 ScalerCommand_Flush,
};

enum ScalerState {
 ScalerState_Uninit,
 ScalerState_UninitPending,
 ScalerState_InitPending,
 ScalerState_Stop,
 ScalerState_StopPending,
 ScalerState_Play,
 ScalerState_PlayPending,
 ScalerState_Pause,
 ScalerState_PausePending,
 ScalerState_Flush,
 ScalerState_FlushPending,
};

enum PanScanMode_type {
 NoPanScan,
 DefaultPanScan,
 ZoomedPanScan
};

enum MClkFactor {
 MClkFactor_128Xfs,
 MClkFactor_256Xfs
};

enum OutputDualMode_type {
 DualMode_Stereo = 0,
 DualMode_LeftMono,
 DualMode_RightMono,
 DualMode_MixMono
};

enum AudioPlayMode_type {
 Audio_Play_Disable = 0,
 Audio_Play_From,
 Audio_Play_To,
 Audio_Play_From_To
};

enum AudioChannelMap_type {
 Audio_L = 0,
 Audio_C = 1,
 Audio_R = 2,
 Audio_Ls = 3,
 Audio_Rs = 4,
 Audio_Lfe = 5,
 Audio_Lb = 6,
 Audio_Rb = 7,
 Audio_SL = 8,
 Audio_SR = 9,
 Audio_SPDIFL = 10,
 Audio_SPDIFR = 11
};

enum AudioOutputChannels_type {
 Audio_Out_Ch_C = 0x01,
 Audio_Out_Ch_LR = 0x02,
 Audio_Out_Ch_LCR = 0x03,
 Audio_Out_Ch_LRS = 0x12,
 Audio_Out_Ch_LCRS = 0x13,
 Audio_Out_Ch_LRLsRs = 0x22,
 Audio_Out_Ch_LCRLsRs = 0x23,
 Audio_Out_Ch_LCRLsRsSs = 0x63,
 Audio_Out_Ch_LRLsRsLssRss = 0xA2,
 Audio_Out_Ch_LCRLsRsLssRss = 0xA3
};

enum AacOutputChannels_type {
 Aac_C = 0x01,
 Aac_LR = 0x02,
 Aac_LCR = 0x03,
 Aac_LRS = 0x12,
 Aac_LCRS = 0x13,
 Aac_LRLsRs = 0x22,
 Aac_LCRLsRs = 0x23
};

enum AudioOutputSurround20_type {
 SurroundAsStream = 0,
 SurroundEnable = 5,
 SurroundDisable = 4
};


enum AudioEngine_dmx_tables_type {

 AudioEngine_dmx_tables_dual_2_C_LCR_LCRS_LCRLsRs_left = 0,

 AudioEngine_dmx_tables_dual_2_C_LCR_LCRS_LCRLsRs_right = 1,

 AudioEngine_dmx_tables_dual_2_C_LCR_LCRS_LCRLsRs_mix = 2,

 AudioEngine_dmx_tables_dual_2_LR_LRS_LRLsRs_LCR_LCRS_LCRLsRs_stereo = 3,

 AudioEngine_dmx_tables_dual_2_LR_LRS_LRLsRs_left = 4,

 AudioEngine_dmx_tables_dual_2_LR_LRS_LRLsRs_right = 5,

 AudioEngine_dmx_tables_dual_2_LR_LRS_LRLsRs_mix = 6,

 AudioEngine_dmx_tables_C_2_C_LCR_LCRS_LCRLsRs = 7,

 AudioEngine_dmx_tables_C_2_C_LR_LRS_LRLsRs = 8,

 AudioEngine_dmx_tables_LR_2_C = 9,

 AudioEngine_dmx_tables_LR_2_LR_LRS_LRLsRs_LCR_LCRS_LCRLsRs = 10,

 AudioEngine_dmx_tables_LCR_2_C = 11,

 AudioEngine_dmx_tables_LCR_2_LtRt = 12,

 AudioEngine_dmx_tables_LCR_2_LoRo_LRS_LRLsRs = 13,

 AudioEngine_dmx_tables_LCR_2_LCR_LCRS_LCRLsRs = 14,

 AudioEngine_dmx_tables_LRS_2_C = 15,

 AudioEngine_dmx_tables_LRS_2_LoRo_LCR = 16,

 AudioEngine_dmx_tables_LRS_2_LtRt = 17,

 AudioEngine_dmx_tables_LRS_2_LRS_LCRS = 18,

 AudioEngine_dmx_tables_LRS_2_LRLsRs_LCRLsRs = 19,

 AudioEngine_dmx_tables_LCRS_2_C = 20,

 AudioEngine_dmx_tables_LCRS_2_LtRt = 21,

 AudioEngine_dmx_tables_LCRS_2_LoRo = 22,

 AudioEngine_dmx_tables_LCRS_2_LRS = 23,

 AudioEngine_dmx_tables_LCRS_2_LRLsRs = 24,

 AudioEngine_dmx_tables_LCRS_2_LCR = 25,

 AudioEngine_dmx_tables_LCRS_2_LCRS = 26,

 AudioEngine_dmx_tables_LCRS_2_LCRLsRs = 27,

 AudioEngine_dmx_tables_LRLsRs_2_C = 28,

 AudioEngine_dmx_tables_LRLsRs_2_LoRo_LCR = 29,

 AudioEngine_dmx_tables_LRLsRs_2_LtRt = 30,

 AudioEngine_dmx_tables_LRLsRs_2_LRS_LCRS = 31,

 AudioEngine_dmx_tables_LRLsRs_2_LRLsRs_LCRLsRs = 32,

 AudioEngine_dmx_tables_LCRLsRs_2_C = 33,

 AudioEngine_dmx_tables_LCRLsRs_2_LtRt = 34,

 AudioEngine_dmx_tables_LCRLsRs_2_LoRo = 35,

 AudioEngine_dmx_tables_LCRLsRs_2_LRS = 36,

 AudioEngine_dmx_tables_LCRLsRs_2_LRLsRs = 37,

 AudioEngine_dmx_tables_LCRLsRs_2_LCR = 38,

 AudioEngine_dmx_tables_LCRLsRs_2_LCRS = 39,

 AudioEngine_dmx_tables_LCRLsRs_2_LCRLsRs = 40,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LoRo = 41,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LtRt = 42,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LCR = 43,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LRLsRs = 44,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LRLsRsLssRss = 45,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LCRLsRs = 46,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LCRLSRsLssRss = 47,

 AudioEngine_dmx_tables_LCRLssRss_2_LoRo = 48,

 AudioEngine_dmx_tables_LCRLssRss_2_LtRt = 49,

 AudioEngine_dmx_tables_LCRLssRss_2_LCR = 50,

 AudioEngine_dmx_tables_LCRLssRss_2_LRLsRs = 51,

 AudioEngine_dmx_tables_LCRLssRss_2_LRLsRsLssRss = 52,

 AudioEngine_dmx_tables_LCRLssRss_2_LCRLsRs = 53,

 AudioEngine_dmx_tables_LCRLssRss_2_LCRLsRsLssRss = 54,

 AudioEngine_dmx_tables_LCRLsRsLssRss_2_LCRLsRsCs = 55,

 AudioEngine_dmx_tables_LCRLssRss_2_LCRLsRsCs = 56,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LoRo = 57,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LtRt = 58,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LCR = 59,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LRLsRs = 60,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LRLsRsLssRss = 61,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LCRLsRs = 62,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LCRLsRsLssRss = 63,

 AudioEngine_dmx_tables_LCRLsRsCs_2_LCRLsRsCs = 64,

 AudioEngine_dmx_tables_LRLsRsLssRss_2_LoRo = 65,

 AudioEngine_dmx_tables_LRLsRsLssRss_2_LtRt = 66,

 AudioEngine_dmx_tables_LRLsRsLssRss_2_LRLsRs = 67,

 AudioEngine_dmx_tables_LRLsRsLssRss_2_LCRLsRsLssRss = 68,

 AudioEngine_dmx_tables_LCRCs_2_LtRt = 69,

 AudioEngine_dmx_tables_LCRCs_2_LoRo = 70,

 AudioEngine_dmx_tables_LCRCs_2_LCRLsRsCs = 71,

 AudioEngine_dmx_tables_LCRCs_2_LCRLsRsLssRss = 72,

 AudioEngine_dmx_tables_LRLssRss_2_LtRt = 73,

 AudioEngine_dmx_tables_LRLssRss_2_LoRo = 74,

 AudioEngine_dmx_tables_LRLssRss_2_LCRLsRsLssRss = 75,

 AudioEngine_dmx_tables_LRLsRsCs_2_LtRt = 76,

 AudioEngine_dmx_tables_LRLsRsCs_2_LoRo = 77,

 AudioEngine_dmx_tables_LRLsRsCs_2_LCRLsRsCs = 78,

 AudioEngine_dmx_tables_LRLsRsCs_2_LCRLSRsLssRss = 79,
};

enum AudioChannelMask_type {
 Audio_Mask_Disable_All = 0,
 Audio_Mask_L = (1<<0),
 Audio_Mask_C = (1<<2),
 Audio_Mask_R = (1<<1),
 Audio_Mask_Ls = (1<<4),
 Audio_Mask_Rs = (1<<5),
 Audio_Mask_Lfe = (1<<3),
 Audio_Mask_Lb = (1<<6),
 Audio_Mask_Rb = (1<<7)
};

enum Ac3OutputChannels_type {
 Ac3_C = 0x01,
 Ac3_LR = 0x02,
 Ac3_LCR = 0x03,
 Ac3_LRS = 0x12,
 Ac3_LCRS = 0x13,
 Ac3_LRLsRs = 0x22,
 Ac3_LCRLsRs = 0x23
};

enum Ac3CompMode_type {
 CompMode_analog,
 CompMode_digital,
 CompMode_line_out,
 CompMode_RF
};

enum DtsOutputChannels_type {
 Dts_C = 0x01,
 Dts_LR = 0x02,
 Dts_LCR = 0x03,
 Dts_LRS = 0x12,
 Dts_LCRS = 0x13,
 Dts_LRLsRs = 0x22,
 Dts_LCRLsRs = 0x23
};







enum WmaproOutputChannels_type {
 Wmapro_1 = 0x10,

 Wmapro_2 = 0x20,

 Wmapro_3 = 0x30,

 Wmapro_4 = 0x40,
 Wmapro_41 = 0x41,

 Wmapro_5 = 0x50,
 Wmapro_51 = 0x51,

 Wmapro_6 = 0x60,
 Wmapro_61 = 0x61,
 Wmapro_62 = 0x62,
 Wmapro_63 = 0x63,

 Wmapro_7 = 0x70,
 Wmapro_71 = 0x71,
 Wmapro_72 = 0x72,
 Wmapro_73 = 0x73,

 Wmapro_8 = 0x80,
 Wmapro_81 = 0x81
};
enum WmaproDynamicRangeControl_type {
 Drc_high,
 Drc_med,
 Drc_low,
};

enum PcmByteOrder {
 PCM_ORDER_MSBFIRST,
 PCM_ORDER_LSBFIRST,
};

enum LpcmVobChannelAssign_type {


 LpcmVob1_C = 0,

 LpcmVob2_LR,

 LpcmVob3_LfRfS,
 LpcmVob4_LfRfLsRs,
 LpcmVob3_LfRfLfe,
 LpcmVob4_LfRfLfeS,
 LpcmVob5_LfRfLfeLsRs,
 LpcmVob3_LfRfC,
 LpcmVob4_LfRfCS,
 LpcmVob5_LfRfCLsRs,
 LpcmVob4_LfRfCLfe,
 LpcmVob5_LfRfCLfeS,
 LpcmVob6_LfRfCLfeLsRs,

 LpcmVob5_LRLfRfS,
 LpcmVob6_LRLfRfLsRs,
 LpcmVob5_LRLfRfLfe,
 LpcmVob6_LRLfRfLfeS,
 LpcmVob7_LRLfRfLfeLsRs,

 LpcmVob5_LRLfRfC,
 LpcmVob6_LRLfRfCS,
 LpcmVob7_LRLfRfCLsRs,
 LpcmVob6_LRLfRfCLfe,
 LpcmVob7_LRLfRfCLfeS,
 LpcmVob8_LRLfRfCLfeLsRs,
        LpcmVobVR_DualMono,
};

enum LpcmAobChannelAssign_type {


 LpcmAob10_C = 0,

 LpcmAob20_LR,
 LpcmAob21_LfRfS,
 LpcmAob22_LfRfLsRs,
 LpcmAob21_LfRfLfe,
 LpcmAob22_LfRfLfeS,
 LpcmAob23_LfRfLfeLsRs,
 LpcmAob21_LfRfC,
 LpcmAob22_LfRfCS,
 LpcmAob23_LfRfCLsRs,
 LpcmAob22_LfRfCLfe,
 LpcmAob23_LfRfCLfeS,
 LpcmAob24_LfRfCLfeLsRs,

 LpcmAob31_LfRfCS,
 LpcmAob32_LfRfCLsRs,
 LpcmAob31_LfRfCLfe,
 LpcmAob32_LfRfCLfeS,
 LpcmAob33_LfRfCLfeLsRs,

 LpcmAob41_LfRfLsRsLfe,
 LpcmAob41_LfRfLsRsC,
 LpcmAob42_LfRfLsRsCLfe,
};

enum PcmCdaChannelAssign_type {


 PcmCda1_C = 0,

 PcmCda2_LR,
 PcmCda3_LfRfS,
 PcmCda4_LfRfLsRs,
 PcmCda3_LfRfLfe,
 PcmCda4_LfRfLfeS,
 PcmCda5_LfRfLfeLsRs,
 PcmCda3_LfRfC,
 PcmCda4_LfRfCS,
 PcmCda5_LfRfCLsRs,
 PcmCda4_LfRfCLfe,
 PcmCda5_LfRfCLfeS,
 PcmCda6_LfRfCLfeLsRs,

 PcmCda5_LfRfLsRsLfe = 0x12,
 PcmCda5_LfRfLsRsC,
 PcmCda6_LfRfLsRsCLfe,
};


enum OutputSpdif_type {

 OutputSpdif_Disable = 0,

 OutputSpdif_Compressed = 1,

 OutputSpdif_Uncompressed = 3,

 OutputSpdif_NoDecodeCompressed = 5
};




enum AudioChannelAssignment_type {
 Audio_Ch_ASSI_DUAL = 0,
 Audio_Ch_ASSI_C,
 Audio_Ch_ASSI_LR,
 Audio_Ch_ASSI_LCR,
 Audio_Ch_ASSI_LRS,
 Audio_Ch_ASSI_LCRS,
 Audio_Ch_ASSI_LRLsRs,
 Audio_Ch_ASSI_LCRLsRs,
 Audio_Ch_ASSI_LCRLsRsLssRss,
 Audio_Ch_ASSI_LCRLssRss,
 Audio_Ch_ASSI_LCRLsRsSs,
 Audio_Ch_ASSI_LRLsRsLssRss,
 AUDIO_Ch_ASSI_LCRCs,
 AUDIO_Ch_ASSI_LRLssRss,
 AUDIO_Ch_ASSI_LRLsRsCs,
 Audio_Ch_ASSI_NOT_SUPPORTED
};


struct AudioDecoderInfo {
 RMuint32 CodecID;
 RMuint32 SampleRate;
 RMuint32 ChannelNumber;
 RMuint32 SampleCount;
 RMuint32 ByteCount;
 RMuint32 ErrorCount;
 RMuint32 BassMode;
 RMuint32 SpeakerConfig;
 RMuint32 lfe;
 RMuint32 DualMode;
 RMuint32 SpdifMode;
 enum AudioChannelAssignment_type ChannelAssignment;
 RMuint32 SkippedFrameCount;
};

struct auxiliary_data_type1 {
 RMuint32 data[4];
};







enum EMhwlibAGCVersion {
 EMhwlibAGCVersion_ConstantBPP = 0,
 EMhwlibAGCVersion_AlternateBPP,
};


enum EMhwlibCopyControlVersion {
 EMhwlibCopyControlVersion_0 = 0,
};

struct EMhwlibCopyControl {

 enum EMhwlibAGCVersion agc_version;
 RMuint32 agc_level;

 RMuint32 cgmsa;

 RMuint32 aps_level;

 RMuint32 rcd;

 RMuint32 asb;


};

struct EMhwlibCopyControlWithVersion {
 enum EMhwlibCopyControlVersion cci_version;
 struct EMhwlibCopyControl cci;
};

struct SurfaceAspectRatio_type {

 enum EMhwlibAspectRatioType type;

 struct EMhwlibAspectRatio ar;
};


enum Master_type {
 Master_STC = 0,
 Master_Audio
};

enum StcFilter_type {
 NoFilter = 0,

};

enum CorrectionMethod_type {
 NoCorrection = 0,
 CleanDividerAdjust,
 VCXOAdjust,

};

struct Speed_type {
 RMint32 enumerator;
 RMuint32 denominator;
};

typedef struct {
 RMuint32 Address;
 RMuint32 Size;
} MMBlockArray[256];

enum EMhwlibClosedCaptionType {
 EMhwlibClosedCaptionType_None = 1,
 EMhwlibClosedCaptionType_ATSC,
 EMhwlibClosedCaptionType_DVD,
 EMhwlibClosedCaptionType_SCTE,
 EMhwlibClosedCaptionType_29,
};

struct user_data_context {







 enum EMhwlibClosedCaptionType cc_type;
 RMbool afd_done;
 enum EMhwlibActiveFormat afd;
 RMbool afd_valid;
};

enum DiscontinuityType {
 PcrDiscontinuity = 0,


};

enum EMhwlibDataType_type {
 EMhwlibData_TS,
 EMhwlibData_PSI,
 EMhwlibData_TSpayload,
 EMhwlibData_VPES,
 EMhwlibData_APES,
 EMhwlibData_PCR,


 EMhwlibData_Reserved0,
 EMhwlibData_Vpayload_pts,

 EMhwlibData_ASpayload_pts,

 EMhwlibData_RDI,
 EMhwlibData_Private,
 EMhwlibData_DSM_CC,


 EMhwlibData_DMB_OD,
 EMhwlibData_DMB_BIFS
};

enum EMhwlibPidInput_type {
 EMhwlibPid_Ts = 0,

 EMhwlibPid_Ts1

};

enum EMhwlibPesInput_type {
 EMhwlibPes_packet = 0,

 EMhwlibPes_packet1

};
# 1143 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct EMhwlibPidEntry_type {
 RMuint16 pid;
 enum EMhwlibPidInput_type input_type;
 RMuint32 flags;
};

struct EMhwlibFixedPidEntry_type {
 enum EMhwlibPidInput_type input_type;
 RMuint32 flags;
};

struct EMhwlibPCRPidEntry_type {
 RMuint16 pid;
 RMuint32 clock_recovery_id;
};

struct EMhwlibPCRPidEntryInfo_type {
 RMuint16 pid;
 RMuint32 clock_recovery_id;
 RMbool enable;
};

struct EMhwlibPidEntryInfo_type {
 RMuint16 pid;
 enum EMhwlibPidInput_type input_type;
 RMuint32 flags;
 RMbool enable;
 RMuint32 output_mask[1];
 RMuint32 cipher_mask;
 RMuint32 cipher_index[1];
 RMuint32 channel_id;
};

struct EMhwlibPesEntry_type {
 RMuint8 stream_id;
 RMuint8 substream_id;
 enum EMhwlibPesInput_type input_type;
 RMbool enable;
 RMuint32 output_mask[1];
 RMuint32 cipher_mask;
 RMuint32 cipher_index[1];
};

struct EMhwlibEntryOutputMask_type {
 RMuint32 entry_index;
 RMuint32 output_mask[1];
};

struct EMhwlibOutputMask_type {
 RMuint32 output_mask[1];

};

enum EMhwlibTimerSync {
 EMhwlibTimerSync_None,

 EMhwlibTimerSync_FirstPcrSetPlayStc,
 EMhwlibTimerSync_PcrUpdateStc,
 EMhwlibTimerSync_FirstPcrSetStc,
};

enum EMhwlibTransportPriority_type {
 EMhwlibTransportPriority_Disable = 0,
 EMhwlibTransportPriority_0 = 2,
 EMhwlibTransportPriority_1,
};

enum EMhwlibDESCipherMode{
 EMhwlibDES_ECB_encryption,
 EMhwlibDES_CBC_encryption,
 EMhwlibDES_OFB_encryption,
 EMhwlibDES_ECB_decryption,
 EMhwlibDES_CBC_decryption,
 EMhwlibDES_OFB_decryption
};

enum EMhwlibDESEncryptedPacketFormat {
 EMhwlibDES_Reserved
};

enum EMhwlibAESCipherMode{
 EMhwlibAES_ECB_decryption,
 EMhwlibAES_ECB_encryption,
 EMhwlibAES_OFB_decryption_encryption,
 EMhwlibAES_CTR_decryption_encryption,
 EMhwlibAES_CBC_decryption,
 EMhwlibAES_CBC_encryption,
 EMhwlibAES_CFB_decryption,
 EMhwlibAES_CFB_encryption,
 EMhwlibAES_AACS_hash_generation,
 EMhwlibAES_VCPS_hash_generation,
 EMhwlibAES_NDS_proprietary
};

enum EMhwlibAESEncryptedPacketFormat {
 EMhwlibAES_UDAC,
 EMhwlibAES_Synamedia,
 EMhwlibAES_OFB,
 EMhwlibAES_NSA,
 EMhwlibAES_CipherModes_11 = EMhwlibAES_NSA,
};

enum EMhwlibMulti2CipherMode{
 EMhwlibMulti2_ECB_decryption,
 EMhwlibMulti2_CBC_decryption,
 EMhwlibMulti2_OFB_decryption,
 EMhwlibMulti2_CFB_decryption,
 EMhwlibMulti2_ECB_encryption,
 EMhwlibMulti2_CBC_encryption,
 EMhwlibMulti2_OFB_encryption,
 EMhwlibMulti2_CFB_encryption
};

enum EMhwlibC2CipherMode{
 EMhwlibC2_ECB_decryption,
 EMhwlibC2_CBC_decryption,
 EMhwlibC2_ECB_encryption,
 EMhwlibC2_CBC_encryption
};

enum EMhwlibCipher {
 EMhwlibCipher_DES,
 EMhwlibCipher_AES,
 EMhwlibCipher_RC4,
 EMhwlibCipher_DVD,
 EMhwlibCipher_Multi2,
 EMhwlibCipher_DVBCSA,
 EMhwlibCipher_C2
};


enum EMhwlibScramblingBits{
 EMhwlibScramblingBits_None,
 EMhwlibScramblingBits_10_11,
 EMhwlibScramblingBits_10,
 EMhwlibScramblingBits_11,
 EMhwlibScramblingBits_PreCipher,
};

enum EMhwlibInbandOffset{
 EMhwlibInbandOffset_Ignore,
 EMhwlibInbandOffset_Relative,
 EMhwlibInbandOffset_Absolute
};
# 1299 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
enum EMhwlibJPEGProfile{





 EMhwlibJPEGProfile_Unknown = 0,
 EMhwlibJPEGProfile_2222 = 2222,
 EMhwlibJPEGProfile_2212 = 2212,
 EMhwlibJPEGProfile_2211 = 2211,
 EMhwlibJPEGProfile_2111 = 2111,
 EMhwlibJPEGProfile_2221 = 2221,
 EMhwlibJPEGProfile_1211 = 1211,
};
# 1351 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
enum EMhwlibVideoCodec{
 EMhwlibVideoCodec_MPEG2 = 1,
 EMhwlibVideoCodec_MPEG4,
 EMhwlibVideoCodec_MPEG4_Padding,
 EMhwlibVideoCodec_DIVX3,
 EMhwlibVideoCodec_VC1,
 EMhwlibVideoCodec_WMV,
 EMhwlibVideoCodec_H264,
 EMhwlibJPEGCodec,
 EMhwlibDVDSpuCodec,
 EMhwlibBDRLECodec,
};

struct ConnectToDemuxOutput_in_type {
 RMuint32 demux_output_module_id;
 RMuint32 demux_output_bts_fifo;
};
struct ConnectToDemuxOutput_out_type {
 RMuint32 decoder_stc_module_id;
 RMuint32 decoder_pts_fifo;
};

struct VideoDecoder_NextPicture_type {
 struct EMhwlibNewPicture Picture;
 RMuint32 PictureAddress;
};


struct EMhwlibSurfaceReader {
 RMuint32 SurfaceAddress;
 RMuint32 ReaderID;
# 1390 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
 RMuint32 emhwlibReserved;
};


struct EMhwlibPictureInfo {
 struct EMhwlibNewPicture Picture;
 RMuint32 PictureAddress;
};


enum EMhwlibScanMode {
 EMhwlibScanMode_Source,
 EMhwlibScanMode_Progressive,
 EMhwlibScanMode_Interlaced_TopFieldFirst,
 EMhwlibScanMode_Interlaced_BotFieldFirst,
};

struct EMhwlibDemuxErrorInfo {
 RMuint32 EngineError;
 RMuint32 TaskError;

 RMuint32 InputDiscontinuityCounter;
 RMuint32 InputSyncLossCounter;

 RMuint32 OutputOverflowCounter;
 RMuint32 PTSOutputOverflowCounter;
};

enum EMhwlibHeartBeatCountersVersion {
 EMhwlibHeartBeatCountersVersion_0 = 0,
};

struct EMhwlibHeartBeatCounters {
 RMuint32 MpegEngine0;
 RMuint32 MpegEngine1;
 RMuint32 AudioEngine0;
 RMuint32 AudioEngine1;
 RMuint32 DemuxEngine0;
 RMuint32 CPU0;
 RMuint32 XPU0;
 RMuint32 Host;
 RMuint32 VsyncOutport;
};
# 1468 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct SpuDecoder_BDRLECommandType {
 RMuint32 command;
 RMuint32 parameter1;
 RMuint32 parameter2;
};

struct SpuDecoder_BDRLECommands{
 RMuint32 command_count;
 struct SpuDecoder_BDRLECommandType commands[64];
};
# 1499 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct VoipCodec_Tone {
 RMint32 freq1;
 RMint32 freq2;
 RMint32 time_on;
 RMint32 time_off;
 RMint32 level;
 RMint32 ring;
};

enum VoipCodec_Buffer_mode {
 VOIP_BUFFER_MODE_FULLNESS = 0,
 VOIP_BUFFER_MODE_EMPTYNESS = 1
};

struct VoipCodec_Cid {
  RMint8 month[3];
 RMint8 day[3];
 RMint8 hour[3];
 RMint8 min[3];
 RMint32 numlen;
 RMint8 number[11];
 RMint32 namelen;
 RMint8 name[80];
};

struct VoipChunk {
 RMuint32 size;
 RMuint8 data[512];
};

struct EMhwlibTimerAudioClockConfig {
 RMuint32 valid;
 RMuint32 dirty;
 RMuint32 afs;
 RMuint32 mclk_factor;
 RMuint32 cd_freq;
 RMuint32 dmem_base;
 RMuint32 outputmode_reg;
 RMuint32 freq_offs;
 RMuint32 force_offs;
 RMuint32 chctrl;
 RMuint32 cd_reg;
 RMuint32 fs;
};
# 1573 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct DemuxProgram_TransportParameters_type {
 RMuint16 VideoPID;
 RMuint16 AudioPID;
 RMuint16 PCRPID;
};

struct DemuxProgram_ProgramParameters_type {
 RMuint8 VideoSID;
 RMuint8 AudioSID;
 RMuint8 AudioSSID;
 RMuint8 SubpictureSID;
 RMuint8 SubpictureSSID;
};

struct DemuxProgram_OutputControl_type {
 RMbool Video;
 RMbool Audio;
 RMbool Subpicture;
 RMbool VideoPts;
 RMbool AudioPts;
 RMbool SubpicturePts;
 enum DemuxTriggerType Trigger;
};

enum Demux_Command_type {
 Demux_Command_Play,
 Demux_Command_Pause,
 Demux_Command_Stop,
};

enum Demux_State_type {
 Demux_State_Playing,
 Demux_State_Paused,
 Demux_State_Stopped,
 Demux_State_PlayPending,
 Demux_State_PausePending,
 Demux_State_StopPending,
};

struct Demux_InputParameters_type {
 enum DemuxSpiType Spi;
 enum DemuxSourceType SourceType;
};


struct EMhwlibMemoryBlockDescriptor{
  RMuint32 Address;
  RMuint32 Size;
};

struct EMhwlibMemoryBlockList{
 RMuint32 BlockCount;
 struct EMhwlibMemoryBlockDescriptor Blocks[64];
};


typedef RMstatus (*emhwlib_ppf_get_engine_mem_func)(struct EMhwlibMemoryBlockList *requiredmemblocks);
typedef RMstatus (*emhwlib_ppf_set_engine_mem_func)(struct EMhwlibMemoryBlockList *allocatedmemblocks);
typedef RMstatus (*emhwlib_ppf_get_output_mem_func)(RMuint32 output_slot, struct EMhwlibMemoryBlockList *requiredmemblocks);
typedef RMstatus (*emhwlib_ppf_set_output_mem_func)(RMuint32 output_slot, struct EMhwlibMemoryBlockList *allocatedmemblocks);
typedef RMstatus (*emhwlib_ppf_get_output_func)(RMuint32 output_slot, RMuint32 *output_surface);
typedef RMstatus (*emhwlib_ppf_set_input_func)(RMuint32 input_slot, RMuint32 input_surface);
typedef RMstatus (*emhwlib_ppf_set_command_func)(void *command_param, RMuint32 param_size, void *command_result, RMuint32 result_size);

typedef RMuint32 (*emhwlib_ppf_run_filter_func)(void *pE, RMuint32 ModuleID, RMuint32 mask);
typedef RMstatus (*emhwlib_ppf_init_func)(void);
typedef RMstatus (*emhwlib_ppf_deinit_func)(void);

struct EMhwlibPPFHandle {
 emhwlib_ppf_get_engine_mem_func get_engine_mem;

 emhwlib_ppf_set_engine_mem_func set_engine_mem;

 emhwlib_ppf_get_output_mem_func get_output_mem;

 emhwlib_ppf_set_output_mem_func set_output_mem;
 emhwlib_ppf_set_input_func set_input;
 emhwlib_ppf_get_output_func get_output;
 emhwlib_ppf_set_command_func set_command;



};


struct EMhwlibI2CDeviceParameter {

 RMuint32 APIVersion;

 enum GPIOId_type Clock;

 enum GPIOId_type Data;

 RMuint8 DevAddr;

 RMuint32 Delay;

 RMuint32 Speed;
};







struct EMhwlibPidUsage_type {
 RMuint32 flags;

 RMuint32 count;

 RMuint32x4 pid_entries;

};

enum DiscontinuityProcessingMethod_type {
 DiscontinuityProcessingMethod_1 = 1,




 DiscontinuityProcessingMethod_2,





};


enum EMhwlibPictureOrientation{
 EMhwlibPictureOrientation_HFlip,
 EMhwlibPictureOrientation_VFlip,
 EMhwlibPictureOrientation_BLDiagonalFlip,
 EMhwlibPictureOrientation_TLDiagonalFlip,
 EMhwlibPictureOrientation_90,
 EMhwlibPictureOrientation_180,
 EMhwlibPictureOrientation_270,
};

enum EMhwlibPictureTransformType{
 EMhwlibPictureTransformType_Orientation,
};

struct EMhwlibBWMonitorSample{
 RMuint32 DRAMControllerId;
 RMuint32 TotalTransfers;
 RMuint32 SelectedTransfers;
 RMuint32 Interval;
 RMuint32 SampleRef;
};
# 1779 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h"
struct EMhwlibChunk256 {
 RMuint32 size;
 RMuint8 data[256];
};

enum EMhwlibReadBufferCompletionMode {
 EMhwlibReadBufferCompletionMode_Full,
 EMhwlibReadBufferCompletionMode_NoDelay,


 EMhwlibReadBufferCompletionMode_MinimumSize,
 EMhwlibReadBufferCompletionMode_ExactSize,
};

struct EMhwlibReadBufferCompletion {

 enum EMhwlibReadBufferCompletionMode mode;

 RMuint32 threshold;
};

enum EMhwlibRecipherMode {
 EMhwlibRecipher_passthrough,
 EMhwlibRecipher_always
};


struct EMhwlibTTXFifoInfo {
 RMuint32 base;
 RMuint32 size;
 RMuint32 readable;
 RMuint32 writable;
};






enum EMhwlibInbandPanScanMode {
 EMhwlibInbandPanScan_DefaultPicture = 0,
 EMhwlibInbandPanScan_AbsoluteWindow,
 EMhwlibInbandPanScan_RelativeWindow,
 EMhwlibInbandPanScan_LetterBox_Center,
 EMhwlibInbandPanScan_LetterBox_Top,
};

struct EMhwlibInbandPanScan {
 enum EMhwlibInbandPanScanMode mode;
 struct EMhwlibWindow window;
};
# 328 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_event.h" 2
# 336 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_event.h"
struct pts_offset_params_type {
 RMuint64 pts_offset;
 RMuint32 time_resolution;
};

struct aacs_params {
 RMuint32 cmd;
 RMuint32 spn;
 RMuint32 slot;
 RMuint32 pl;
 RMuint32 item;
 RMuint32 dir;
 RMuint32 clip;
};

struct dummy_params_type {
 RMuint32 x;
 RMuint32 y;
 RMuint32 z;
 RMuint32 test[9];
};

struct trickmode_ts_params_type {
 RMuint32 pid;
 RMuint32 random_access_indicator;
 RMuint32 payload_unit_start_indicator;
};

union params_type {
 struct pts_offset_params_type pts_offset_params;
 struct SurfaceAspectRatio_type aspect_ratio_params;
 enum EMhwlibScalingMode scaling_params;
 RMuint32 key_change_params;
 struct aacs_params aacs;
 struct trickmode_ts_params_type trickmode_ts_params;
 struct EMhwlibInbandPanScan panscan_params;
 struct dummy_params_type dummy_params;
};

struct InbandCommandX_type {
 RMuint32 flags_tag;
 RMuint32 offset_value;
 RMuint32 output_mask;
 enum EMhwlibInbandOffset offset_control;

 union params_type params;
};

typedef RMascii XXXinbandseedLeftIsBiggerNow[(1<<6)-(sizeof(struct InbandCommandX_type))]; typedef RMascii XXXinbandseedLeftIsSmallerNow[(sizeof(struct InbandCommandX_type))-(1<<6)];
# 24 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_categories.h" 2

enum RMcategoryID {
 Enumerator = 1,
 SystemBlock = 2,
 CPUBlock = 22,
 XPUBlock = 52,
 IPUBlock = 59,
 DisplayBlock = 3,
 DispOSDScaler = 4,
 DispHardwareCursor = 5,
 DispMainVideoScaler = 6,
 DispSubPictureScaler = 7,
 DispVCRMultiScaler = 8,
 DispCRTMultiScaler = 9,
 DispGFXMultiScaler = 10,
 DispMainMixer = 12,
 DispVCRMixer = 13,
 DispColorBars = 14,
 DispRouting = 15,
 DispVideoInput = 16,
 DispGraphicInput = 17,
 DispDigitalOut = 18,
 DispMainAnalogOut = 19,
 DispComponentOut = 20,
 DispCompositeOut = 21,
 DemuxEngine = 23,
 MpegEngine = 25,
 VideoDecoder = 26,
 AudioEngine = 27,
 AudioDecoder = 28,
 AudioCapture = 40,
 VoipCodec = 55,
 CRCDecoder = 29,
 XCRCDecoder = 30,
 StreamCapture = 36,
 RawDataTransfer = 37,
 I2C = 31,
 GFXEngine = 32,
 MM = 33,
 SpuDecoder = 34,
 PictureTransform = 58,
 ClosedCaptionDecoder = 35,
 RTC = 38,
 Cipher = 41,
 STC = 42,
 PLL = 43,
 DemuxCipher = 57,
 DemuxTask = 44,
 DemuxOutput = 45,
 CCFifo = 46,
 DispVideoPlane = 50,
 DispHDSDConverter = 51,
 Sha1Sum = 47,
 XTask = 48,
 TTXFifo = 53,
 VCXO = 54,
 PPF = 56,
};
# 90 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_categories.h"
static inline RMuint32 EMHWLIB_MODULE(enum RMcategoryID category, RMuint32 moduleIndex)
{
 return ((moduleIndex & 0xff) << 8) | (category & 0xff);
}
# 102 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_categories.h"
static inline RMuint32 EMHWLIB_TARGET_MODULE(enum RMcategoryID category, RMuint32 moduleIndex, RMuint32 moduleTarget)
{
 return ((moduleTarget & 0xffff) << 16) | ((moduleIndex & 0xff) << 8) | (category & 0xff);
}







static inline enum RMcategoryID EMHWLIB_MODULE_CATEGORY(RMuint32 ModuleID)
{
 return (enum RMcategoryID)(ModuleID & 0xff);
}







static inline RMuint32 EMHWLIB_MODULE_INDEX(RMuint32 ModuleID)
{
 return (ModuleID >> 8) & 0xff;
}






static inline RMuint32 EMHWLIB_MODULE_TARGET(RMuint32 ModuleID)
{
 return (ModuleID >> 16) & 0xffff;
}






static inline RMuint32 EMHWLIB_DISPLAY_EVENT_ID(RMuint32 ModuleID)
{
 switch (EMHWLIB_MODULE_CATEGORY(ModuleID)) {
 default:
  break;

 case DispMainVideoScaler:
  return (1<<10);
 case DispVCRMultiScaler:
  return (1<<12);

 case DispVideoPlane:
  return (1<<13);





 case DispGFXMultiScaler:
  return (1<<14);
 case DispOSDScaler:
  return (1<<8);
 case DispHardwareCursor:
  return (1<<9);
 case DispSubPictureScaler:
  return (1<<11);
 case DispMainMixer:
  return (1<<6);





 case DispHDSDConverter:
  return (1<<7);

 case DispColorBars:
  return (1<<4);
 case DispRouting:
  return (1<<5);
 case DispVideoInput:
  return (1<<15);
 case DispGraphicInput:
  return (1<<16);
 case DispDigitalOut:
  return (1<<0);
 case DispMainAnalogOut:
  return (1<<1);
 case DispComponentOut:
  return (1<<2);
 case DispCompositeOut:
  return (1<<3);
 }

 return 0;
}






static inline RMuint32 EMHWLIB_DISPLAY_INBAND_COMMAND_EVENT_ID(RMuint32 ModuleID)
{
 switch (EMHWLIB_MODULE_CATEGORY(ModuleID)) {
 default:
  break;

 case DispMainVideoScaler:
  return (1<<17);
 case DispVCRMultiScaler:
  return (1<<20);

 case DispVideoPlane:
  return (1<<21);





 case DispGFXMultiScaler:
  return (1<<22);
 case DispOSDScaler:
  return (1<<18);
 case DispSubPictureScaler:
  return (1<<19);
 }

 return 0;
}






static inline RMuint32 EMHWLIB_DISPLAY_NEW_PICTURE_EVENT_ID(RMuint32 ModuleID)
{
 switch (EMHWLIB_MODULE_CATEGORY(ModuleID)) {
 default:
  break;

 case DispMainVideoScaler:
  return (1<<23);
 case DispVCRMultiScaler:
  return (1<<26);

        case DispVideoPlane:
  return (1<<27);





 case DispGFXMultiScaler:
  return (1<<28);
 case DispOSDScaler:
  return (1<<24);
 case DispSubPictureScaler:
  return (1<<25);
 }

 return 0;
}
# 24 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_event.h" 1
# 25 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_globaltypes.h" 1
# 26 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_enumerator.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_enumerator.h"
enum RMEnumeratorPropertyID {
 RMEnumeratorPropertyID_IndexToCategoryID,
 RMEnumeratorPropertyID_CategoryIDToNumberOfInstances,
 RMEnumeratorPropertyID_CategoryIDToCategoryName,
};
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_displaytypes.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h" 2

extern "C" {







enum RUAPoolDirection {
 RUA_POOL_DIRECTION_SEND = 54,
 RUA_POOL_DIRECTION_RECEIVE,
};

enum RUAEventId {
 RUAEVENT_COMMANDCOMPLETION = (1<<0),
 RUAEVENT_COMMANDCOMPLETION_DISPLAY = (1<<18),
 RUAEVENT_ENDOFSEQUENCE = (1<<2),
 RUAEVENT_INBAND_COMMAND = (1<<3),
 RUAEVENT_LAST_FRAME_DISPLAYED = (1<<16),
 RUAEVENT_XFER_FIFO_READY = (1<<17),
 RUAEVENT_AU_DECODED = (1<<5),
 RUAEVENT_AU_VIDEO_ERROR = (1<<6)
};

struct RUAEvent {
 RMuint32 ModuleID;
 RMuint32 Mask;
};
# 77 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
struct RUA;
struct RUABufferPool;

struct RUASelectEntry {
 RMuint32 handle;
 RMuint32 select;
};
# 92 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUACreateInstance(struct RUA **ppRua, RMuint32 ChipNumber);







RMstatus RUADestroyInstance(struct RUA *pRua);
# 118 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUASetProperty(struct RUA *pRua,
   RMuint32 ModuleID,
   RMuint32 PropertyID,
   void *pValue, RMuint32 ValueSize,
   RMuint32 TimeOut_us);
# 135 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAGetProperty(struct RUA *pRua,
   RMuint32 ModuleID,
   RMuint32 PropertyID,
   void *pValue, RMuint32 ValueSize);
# 154 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAExchangeProperty(struct RUA *pRua,
        RMuint32 ModuleID,
        RMuint32 PropertyID,
        void *pValueIn, RMuint32 ValueInSize,
        void *pValueOut, RMuint32 ValueOutSize);
# 177 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAOpenPool(struct RUA *pRua, RMuint32 ModuleID,
       RMuint32 BufferCount,
       RMuint32 log2BufferSize,
        enum RUAPoolDirection direction,
       struct RUABufferPool **ppBufferPool);







RMstatus RUAClosePool(struct RUABufferPool *pBufferPool);
# 198 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAResetPool(struct RUABufferPool *pBufferPool);
# 210 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUACleanCache(struct RUABufferPool *pBufferPool, RMuint8 *pData, RMuint32 DataSize);
# 222 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAInvalidateCache(struct RUABufferPool *pBufferPool, RMuint8 *pData, RMuint32 DataSize);
# 233 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAGetPhysicalAddress(struct RUABufferPool *pBufferPool, RMuint8 *pData, RMuint32 DataSize, RMuint32 *pPhysicalAddress);
# 245 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAPreparePoolForReceiveData(struct RUABufferPool *pBufferPool);
# 255 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAGetBuffer(struct RUABufferPool *pBufferPool,
        RMuint8 **ppBuffer,
        RMuint32 TimeOut_us);
# 267 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMuint32 RUAGetAvailableBufferCount(struct RUABufferPool *pBufferPool);
# 286 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUASendData(struct RUA *pRua,
       RMuint32 ModuleID,
       struct RUABufferPool *pBufferPool,
       RMuint8 *pData,
       RMuint32 DataSize,
       void *pInfo,
       RMuint32 InfoSize);
# 316 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAReceiveData(struct RUA *pRua,
   RMuint32 ModuleID,
   struct RUABufferPool *pBufferPool,
   RMuint8 **pData,
   RMuint32 *DataSize,
   void *pInfo,
   RMuint32 *InfoSize);
# 333 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAReleaseBuffer(struct RUABufferPool *pBufferPool,
     RMuint8 *pBuffer);
# 344 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAAcquireBuffer(struct RUABufferPool *pBufferPool,
     RMuint8 *pBuffer);
# 375 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAWaitForMultipleEvents(struct RUA *pRua,
      struct RUAEvent *pEvents,
      RMuint32 EventCount,
      RMuint32 TimeOut_us,
      RMuint32 *pEventNum);
# 388 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAResetEvent(struct RUA *pRUA, struct RUAEvent *pEvent);
# 401 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUASetEvent(struct RUA *pRUA, RMuint32 mask);
# 416 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUASelect(struct RUA *pRUA, RMuint32 n, struct RUASelectEntry *entries, RMuint32 timeout_us);
# 433 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMuint32 RUAMalloc(struct RUA *pRua, RMuint32 dramIndex, enum RUADramType dramtype, RMuint32 size);







void RUAFree(struct RUA *pRUA, RMuint32 ptr);
# 452 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAGetAvailableMemory(struct RUA *pRUA, RMuint32 dramIndex, enum RUADramType dramtype, RMuint32 *pAvailSize);
# 462 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMuint8 *RUAMap(struct RUA *pRua, RMuint32 address, RMuint32 size);
# 471 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
void RUAUnMap(struct RUA *pRua, RMuint8 *ptr, RMuint32 size);
# 490 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUALock(struct RUA *pRua, RMuint32 address, RMuint32 size);
# 500 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAUnLock(struct RUA *pRua, RMuint32 address, RMuint32 size);
# 513 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUASetAddressID(struct RUA *pRua, RMuint32 address, RMuint32 ID);
# 523 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMuint32 RUAGetAddressID(struct RUA *pRua, RMuint32 ID);
# 534 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAAcquireAddress(struct RUA *pRua, RMuint32 address);
# 544 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua.h"
RMstatus RUAReleaseAddress(struct RUA *pRua, RMuint32 address);


}
# 4 "/home/davidhu/svn.32M/apps/../middleware/HYHWStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua_property.h" 1
# 21 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua_property.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_properties_1000.h" 1
# 24 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_properties_1000.h"
enum RMSystemBlockPropertyID {


 RMSystemBlockPropertyID_GPIO = 4001,


 RMSystemBlockPropertyID_QueryGPIO = 4002,


 RMSystemBlockPropertyID_PWM = 4003,


 RMSystemBlockPropertyID_QueryPWM = 4004,


 RMSystemBlockPropertyID_DRAMSize = 4005,


 RMSystemBlockPropertyID_DRAMConfig = 4006,


 RMSystemBlockPropertyID_DRAMDelay = 4007,


 RMSystemBlockPropertyID_DRAMDelayAuto = 4008,


 RMSystemBlockPropertyID_BWMonitorSelection = 4575,


 RMSystemBlockPropertyID_BWMonitorEnable = 4577,


 RMSystemBlockPropertyID_BWMonitorSample = 4576,


 RMSystemBlockPropertyID_Version = 1001,
};


enum RMCPUBlockPropertyID {


 RMCPUBlockPropertyID_State = 1,


 RMCPUBlockPropertyID_IRQHandler = 3001,


 RMCPUBlockPropertyID_ProcessInterrupt = 1002,


 RMCPUBlockPropertyID_AddDataFifoXferTask = 1003,


 RMCPUBlockPropertyID_AddRawDataXferTask = 1004,


 RMCPUBlockPropertyID_AddSoftIrqTask = 1005,


 RMCPUBlockPropertyID_DelTransferTask = 1006,


 RMCPUBlockPropertyID_DelSoftIrqTask = 1007,


 RMCPUBlockPropertyID_DataFifoTransferTaskSize = 1008,


 RMCPUBlockPropertyID_RawDataTransferTaskSize = 1009,


 RMCPUBlockPropertyID_SoftIrqTaskSize = 1010,


 RMCPUBlockPropertyID_FlushTransferTask = 1011,


 RMCPUBlockPropertyID_EndOfStreamTransferTask = 1012,


 RMCPUBlockPropertyID_DataFifoChunk = 1013,


 RMCPUBlockPropertyID_RawDataChunk = 1014,


 RMCPUBlockPropertyID_AddDataFifoReadBuffer = 1015,


 RMCPUBlockPropertyID_AddRawDataReadBuffer = 1016,


 RMCPUBlockPropertyID_ProgramRawDataXfer = 4009,


 RMCPUBlockPropertyID_DisableTransferTask = 1017,


 RMCPUBlockPropertyID_SetSoftIrqTaskEvent = 1018,


 RMCPUBlockPropertyID_ClearSoftIrqTaskEvent = 1019,


 RMCPUBlockPropertyID_EnableSoftIrqTaskEvent = 1020,


 RMCPUBlockPropertyID_DisableSoftIrqTaskEvent = 1021,


 RMCPUBlockPropertyID_PCIEnableInterrupt = 3002,


 RMCPUBlockPropertyID_PCIDisableInterrupt = 3003,


 RMCPUBlockPropertyID_Error = 4010,


 RMCPUBlockPropertyID_EMhwlibError = 1023,


 RMCPUBlockPropertyID_HeartBeatCounters = 4534,


 RMCPUBlockPropertyID_ReadBufferThreshold = 1106,
};


enum RMXPUBlockPropertyID {


 RMXPUBlockPropertyID_DoXrpc = 3005,


 RMXPUBlockPropertyID_UnloadIrqHandler = 3006,


 RMXPUBlockPropertyID_ZeroIrqHandlerAPI = 3007,


 RMXPUBlockPropertyID_Error = 4011,
};


enum RMIPUBlockPropertyID {


 RMIPUBlockPropertyID_Error = 4598,
};


enum RMDisplayBlockPropertyID {


 RMDisplayBlockPropertyID_VsyncApiInfo = 4012,


 RMDisplayBlockPropertyID_SurfaceSize = 4013,


 RMDisplayBlockPropertyID_PictureSize = 4014,


 RMDisplayBlockPropertyID_MultiplePictureSurfaceSize = 4015,


 RMDisplayBlockPropertyID_InitSurface = 6001,


 RMDisplayBlockPropertyID_InitMultiplePictureSurface = 6002,


 RMDisplayBlockPropertyID_InitMultiplePictureSurfaceX = 6191,


 RMDisplayBlockPropertyID_InitPicture = 4016,


 RMDisplayBlockPropertyID_InitPictureX = 4470,


 RMDisplayBlockPropertyID_SurfaceInfo = 6003,


 RMDisplayBlockPropertyID_PictureInfo = 6183,


 RMDisplayBlockPropertyID_InsertPictureInSurfaceFifo = 4017,


 RMDisplayBlockPropertyID_SetPaletteOnPicture = 4471,


 RMDisplayBlockPropertyID_ErasePicturesInSurfaceFifo = 4018,


 RMDisplayBlockPropertyID_SurfaceAspectRatio = 6004,


 RMDisplayBlockPropertyID_SurfaceSTC = 6204,


 RMDisplayBlockPropertyID_ForcePictureBufferAddress = 6005,


 RMDisplayBlockPropertyID_EnableGFXInteraction = 6006,


 RMDisplayBlockPropertyID_Lock = 5006,


 RMDisplayBlockPropertyID_AltOutConfig = 5007,


 RMDisplayBlockPropertyID_AlternateOutput = 5008,


 RMDisplayBlockPropertyID_OutputNumber = 1024,


 RMDisplayBlockPropertyID_OutputModuleID = 1025,


 RMDisplayBlockPropertyID_InputNumber = 1026,


 RMDisplayBlockPropertyID_InputModuleID = 1027,


 RMDisplayBlockPropertyID_PortNumber = 1028,


 RMDisplayBlockPropertyID_PortModuleID = 1029,


 RMDisplayBlockPropertyID_TVPixelClockAnalog = 1030,


 RMDisplayBlockPropertyID_TVPixelClockDigital = 1031,


 RMDisplayBlockPropertyID_TVFormatAnalog = 1032,


 RMDisplayBlockPropertyID_TVFormatDigital = 1033,


 RMDisplayBlockPropertyID_AnalogSDParams = 1034,


 RMDisplayBlockPropertyID_AnalogHDParams = 1035,


 RMDisplayBlockPropertyID_AnalogOffsetParams = 1036,


 RMDisplayBlockPropertyID_DigitalParams = 1037,


 RMDisplayBlockPropertyID_VBUSBandwidth = 6007,


 RMDisplayBlockPropertyID_EnableDirtyBits = 4021,


 RMDisplayBlockPropertyID_EnableVBUSArbiter = 4022,


 RMDisplayBlockPropertyID_HDMIState = 4023,


 RMDisplayBlockPropertyID_HDMIConfig = 4024,


 RMDisplayBlockPropertyID_PixelClock = 1038,


 RMDisplayBlockPropertyID_AnalogFrameInfoToCGMSWSS525 = 1096,


 RMDisplayBlockPropertyID_AnalogFrameInfoToCGMSWSS625 = 1097,


 RMDisplayBlockPropertyID_CGMSWSS525ToAnalogFrameInfo = 1098,


 RMDisplayBlockPropertyID_CGMSWSS625ToAnalogFrameInfo = 1099,


 RMDisplayBlockPropertyID_PeekNextPicture = 1100,


 RMDisplayBlockPropertyID_GetNextPicture = 1101,


 RMDisplayBlockPropertyID_AcquirePicture = 1102,


 RMDisplayBlockPropertyID_ReleasePicture = 1103,


 RMDisplayBlockPropertyID_ErasePicture = 4548,


 RMDisplayBlockPropertyID_SequencePicture = 4589,


 RMDisplayBlockPropertyID_SurfaceDefaultColorSpaceAlgorithm = 4590,


 RMDisplayBlockPropertyID_ConnectReader = 6197,


 RMDisplayBlockPropertyID_DisconnectReader = 6198,
};


enum RMDispOSDScalerPropertyID {


 RMDispOSDScalerPropertyID_ScalingConfig = 6014,
};


enum RMDispHardwareCursorPropertyID {


 RMDispHardwareCursorPropertyID_Bitmap = 6031,


 RMDispHardwareCursorPropertyID_Lut = 6032,


 RMDispHardwareCursorPropertyID_Size = 6033,
};


enum RMDispMainVideoScalerPropertyID {


 RMDispMainVideoScalerPropertyID_DeinterlacingMode = 6045,


 RMDispMainVideoScalerPropertyID_DeinterlacingProportion = 6046,


 RMDispMainVideoScalerPropertyID_DeinterlacingMotionConfig = 6047,


 RMDispMainVideoScalerPropertyID_DeinterlacingMotionScaler = 6048,


 RMDispMainVideoScalerPropertyID_Enable_3_2_PullDownDetection = 6049,


 RMDispMainVideoScalerPropertyID_FilterSelection = 6050,
};


enum RMDispSubPictureScalerPropertyID {


 RMDispSubPictureScalerPropertyID_ScalingConfig = 6053,
};


enum RMDispVCRMultiScalerPropertyID {
 RMDispVCRMultiScaler_unused = 0,
};


enum RMDispCRTMultiScalerPropertyID {
 RMDispCRTMultiScaler_unused = 0,
};


enum RMDispGFXMultiScalerPropertyID {
 RMDispGFXMultiScaler_unused = 0,
};


enum RMDispMainMixerPropertyID {


 RMDispMainMixerPropertyID_LayerOrder = 6056,
};


enum RMDispVCRMixerPropertyID {


 RMDispVCRMixerPropertyID_LayerOrder = 6065,
};


enum RMDispColorBarsPropertyID {


 RMDispColorBarsPropertyID_Intensity = 6066,


 RMDispColorBarsPropertyID_Standard = 6067,
};


enum RMDispRoutingPropertyID {


 RMDispRoutingPropertyID_Route = 4031,


 RMDispRoutingPropertyID_Routing = 4032,
};


enum RMDispVideoInputPropertyID {


 RMDispVideoInputPropertyID_DRAMSize = 4033,


 RMDispVideoInputPropertyID_Open = 4034,


 RMDispVideoInputPropertyID_Close = 4035,


 RMDispVideoInputPropertyID_BusSize = 6069,


 RMDispVideoInputPropertyID_InputFormat = 6070,
};


enum RMDispGraphicInputPropertyID {


 RMDispGraphicInputPropertyID_DRAMSize = 4040,


 RMDispGraphicInputPropertyID_Open = 4041,


 RMDispGraphicInputPropertyID_Close = 4042,


 RMDispGraphicInputPropertyID_InputFormat = 6079,


 RMDispGraphicInputPropertyID_OutputFormat = 6080,


 RMDispGraphicInputPropertyID_KeyColor = 6081,


 RMDispGraphicInputPropertyID_SyncControlModuleID = 6082,
};


enum RMDispDigitalOutPropertyID {


 RMDispDigitalOutPropertyID_TimingSignal = 6083,


 RMDispDigitalOutPropertyID_EnableClipping = 6084,


 RMDispDigitalOutPropertyID_ClippingLevel = 6085,


 RMDispDigitalOutPropertyID_BusSize = 6086,


 RMDispDigitalOutPropertyID_EnableMPEG1Chroma = 6087,


 RMDispDigitalOutPropertyID_ColorOrder = 6088,


 RMDispDigitalOutPropertyID_DoubleRate = 6089,


 RMDispDigitalOutPropertyID_VSyncDelay1PixClk = 6184,


 RMDispDigitalOutPropertyID_TrailingEdge = 6185,


 RMDispDigitalOutPropertyID_SyncControlModuleID = 6090,


 RMDispDigitalOutPropertyID_EnableDataPAD = 6091,


 RMDispDigitalOutPropertyID_EnableSyncPAD = 6092,


 RMDispDigitalOutPropertyID_EnableVVLDPAD = 6093,


 RMDispDigitalOutPropertyID_PadsConfig = 6094,


 RMDispDigitalOutPropertyID_InputPadsConfig = 6095,


 RMDispDigitalOutPropertyID_PadsControl = 6202,


 RMDispDigitalOutPropertyID_QueryPadsControl = 6203,


 RMDispDigitalOutPropertyID_Matrix = 4043,


 RMDispDigitalOutPropertyID_EnableMatrix = 4044,


 RMDispDigitalOutPropertyID_GPIOFieldID = 4047,


 RMDispDigitalOutPropertyID_GammaLut = 4048,


 RMDispDigitalOutPropertyID_EnableGammaCorrection = 4049,


 RMDispDigitalOutPropertyID_TemperatureLut = 4050,


 RMDispDigitalOutPropertyID_EnableTemperatureCorrection = 4051,


 RMDispDigitalOutPropertyID_UpdateVSyncTimes = 6209,


 RMDispDigitalOutPropertyID_VSyncTimes = 6208,
};


enum RMDispMainAnalogOutPropertyID {


 RMDispMainAnalogOutPropertyID_EnableSDTVInput2xOversample = 6107,


 RMDispMainAnalogOutPropertyID_EnableSync = 6108,


 RMDispMainAnalogOutPropertyID_EnablePicture = 6109,


 RMDispMainAnalogOutPropertyID_Sharpness = 6110,


 RMDispMainAnalogOutPropertyID_ChromaFilter = 6111,


 RMDispMainAnalogOutPropertyID_LumaFilter = 6112,


 RMDispMainAnalogOutPropertyID_Matrix = 4052,


 RMDispMainAnalogOutPropertyID_EnableMatrix = 4053,


 RMDispMainAnalogOutPropertyID_MatrixCVBS = 4054,


 RMDispMainAnalogOutPropertyID_EnableMatrixCVBS = 4055,


 RMDispMainAnalogOutPropertyID_ColorSpaceCVBS = 6113,
};


enum RMDispComponentOutPropertyID {


 RMDispComponentOutPropertyID_EnableSDTVInput2xOversample = 6114,


 RMDispComponentOutPropertyID_EnableSync = 6115,


 RMDispComponentOutPropertyID_EnablePicture = 6116,


 RMDispComponentOutPropertyID_ChromaFilter = 6117,


 RMDispComponentOutPropertyID_LumaFilter = 6118,


 RMDispComponentOutPropertyID_Matrix = 4061,


 RMDispComponentOutPropertyID_EnableMatrix = 4062,
};


enum RMDispCompositeOutPropertyID {


 RMDispCompositeOutPropertyID_EnableSDTVInput2xOversample = 6119,


 RMDispCompositeOutPropertyID_EnableSync = 6120,


 RMDispCompositeOutPropertyID_EnablePicture = 6121,


 RMDispCompositeOutPropertyID_Sharpness = 6122,


 RMDispCompositeOutPropertyID_ChromaFilter = 6123,


 RMDispCompositeOutPropertyID_LumaFilter = 6124,
};


enum RMDemuxEnginePropertyID {


 RMDemuxEnginePropertyID_MicrocodeVersion = 4063,


 RMDemuxEnginePropertyID_Microcode = 4064,


 RMDemuxEnginePropertyID_MicrocodeDRAMSize = 4065,


 RMDemuxEnginePropertyID_State = 4066,


 RMDemuxEnginePropertyID_AllocatePidEntry = 1048,


 RMDemuxEnginePropertyID_FreePidEntry = 1049,


 RMDemuxEnginePropertyID_AllocateSectionEntry = 1050,


 RMDemuxEnginePropertyID_FreeSectionEntry = 1051,


 RMDemuxEnginePropertyID_AllocateCipherEntry = 1052,


 RMDemuxEnginePropertyID_FreeCipherEntry = 1053,


 RMDemuxEnginePropertyID_TimerInit = 1054,


 RMDemuxEnginePropertyID_PidUsage = 1104,
};


enum RMMpegEnginePropertyID {


 RMMpegEnginePropertyID_MicrocodeVersion = 4101,


 RMMpegEnginePropertyID_Microcode = 4102,


 RMMpegEnginePropertyID_MicrocodeDRAMSize = 4103,


 RMMpegEnginePropertyID_State = 4104,


 RMMpegEnginePropertyID_DecoderSharedMemory = 4105,


 RMMpegEnginePropertyID_SchedulerSharedMemory = 4106,


 RMMpegEnginePropertyID_ConnectedTaskCount = 4107,


 RMMpegEnginePropertyID_ConnectTask = 1059,


 RMMpegEnginePropertyID_InitMicrocodeSymbols = 1091,
};


enum RMVideoDecoderPropertyID {


 RMVideoDecoderPropertyID_DRAMSize = 4108,


 RMVideoDecoderPropertyID_Open = 4109,


 RMVideoDecoderPropertyID_Close = 4110,


 RMVideoDecoderPropertyID_Codec = 4111,


 RMVideoDecoderPropertyID_Command = 4112,


 RMVideoDecoderPropertyID_State = 4113,


 RMVideoDecoderPropertyID_VopInfo = 4114,


 RMVideoDecoderPropertyID_VideoTimeScale = 4115,


 RMVideoDecoderPropertyID_DisplayInbandCommandX = 4117,


 RMVideoDecoderPropertyID_FrameCounter = 6132,


 RMVideoDecoderPropertyID_WMV9VSProp = 4118,


 RMVideoDecoderPropertyID_DIVX3VSProp = 4119,


 RMVideoDecoderPropertyID_StorePreviousVideoHeader = 6133,


 RMVideoDecoderPropertyID_InbandSurfaceAspectRatio = 4120,


 RMVideoDecoderPropertyID_InbandScalingMode = 4121,


 RMVideoDecoderPropertyID_ForceColorSpace = 4122,


 RMVideoDecoderPropertyID_ScanMode = 4123,


 RMVideoDecoderPropertyID_LastDecodedPTS = 4124,


 RMVideoDecoderPropertyID_DecodedPictureCount = 4125,


 RMVideoDecoderPropertyID_SkippedPictureCount = 4126,


 RMVideoDecoderPropertyID_Error = 4127,


 RMVideoDecoderPropertyID_Skip = 4128,


 RMVideoDecoderPropertyID_Overlay = 1061,


 RMVideoDecoderPropertyID_PeekNextPicture = 6134,


 RMVideoDecoderPropertyID_ConnectReader = 6135,


 RMVideoDecoderPropertyID_DisconnectReader = 6136,


 RMVideoDecoderPropertyID_ReleasePicture = 6137,


 RMVideoDecoderPropertyID_AcquirePicture = 6138,


 RMVideoDecoderPropertyID_KeepPictureBeforeFlushing = 6139,


 RMVideoDecoderPropertyID_FlushReaderDisplayFIFO = 6140,


 RMVideoDecoderPropertyID_NextPicture = 6141,


 RMVideoDecoderPropertyID_DecoderDataMemory = 4129,


 RMVideoDecoderPropertyID_DRAMSizeX = 4130,


 RMVideoDecoderPropertyID_OpenX = 4131,


 RMVideoDecoderPropertyID_CodecX = 4132,


 RMVideoDecoderPropertyID_BtsFIFO = 4133,


 RMVideoDecoderPropertyID_UserDataFIFOInfo = 4134,


 RMVideoDecoderPropertyID_CommandStatus = 4135,


 RMVideoDecoderPropertyID_DisplayErrorThreshold = 4479,


 RMVideoDecoderPropertyID_AnchorErrPropagation = 4560,


 RMVideoDecoderPropertyID_LowDelay = 4485,


 RMVideoDecoderPropertyID_InterlacedProgressiveAlgorithm = 4487,


 RMVideoDecoderPropertyID_InitialHwPts = 4501,


 RMVideoDecoderPropertyID_ActiveFormat = 6192,


 RMVideoDecoderPropertyID_SkipNotCodedPFrames = 4559,


 RMVideoDecoderPropertyID_SequenceEndCodeResetFlags = 4606,
};


enum RMAudioEnginePropertyID {


 RMAudioEnginePropertyID_MicrocodeVersion = 4136,


 RMAudioEnginePropertyID_Microcode = 4137,


 RMAudioEnginePropertyID_MicrocodeDRAMSize = 4138,


 RMAudioEnginePropertyID_State = 4139,


 RMAudioEnginePropertyID_SampleFrequency = 4140,


 RMAudioEnginePropertyID_SampleFrequencyFromStream = 4141,


 RMAudioEnginePropertyID_SampleFrequencyFromSource = 4142,


 RMAudioEnginePropertyID_MasterClockFactor = 4480,


 RMAudioEnginePropertyID_Volume = 4143,


 RMAudioEnginePropertyID_Delay = 4144,


 RMAudioEnginePropertyID_PL2x = 4594,


 RMAudioEnginePropertyID_QueryVolume = 4145,


 RMAudioEnginePropertyID_SerialOut = 4146,


 RMAudioEnginePropertyID_I2SConfig = 4147,


 RMAudioEnginePropertyID_SpdifOut = 4148,


 RMAudioEnginePropertyID_I2sOut = 4591,


 RMAudioEnginePropertyID_ChannelStatus = 4149,


 RMAudioEnginePropertyID_OutputSpdif = 1064,


 RMAudioEnginePropertyID_SpdifForce16Bit = 1092,


 RMAudioEnginePropertyID_STC = 4150,


 RMAudioEnginePropertyID_Memcpy = 4151,


 RMAudioEnginePropertyID_InputSPDIFStatus = 4572,


 RMAudioEnginePropertyID_DecoderSharedMemoryInfo = 4586,


 RMAudioEnginePropertyID_DecoderSharedMemory = 4587,


 RMAudioEnginePropertyID_ConnectedTaskCount = 4588,


 RMAudioEnginePropertyID_ConnectTask = 1108,


 RMAudioEnginePropertyID_Downmixing_tables = 4592,


 RMAudioEnginePropertyID_CustomizedDownmixing = 1109,
};


enum RMAudioDecoderPropertyID {


 RMAudioDecoderPropertyID_DRAMSize = 4152,


 RMAudioDecoderPropertyID_Open = 4153,


 RMAudioDecoderPropertyID_DRAMSizePCMX = 4154,


 RMAudioDecoderPropertyID_OpenPCMX = 4155,


 RMAudioDecoderPropertyID_Close = 4156,


 RMAudioDecoderPropertyID_PCMXMix = 4157,


 RMAudioDecoderPropertyID_Command = 4158,


 RMAudioDecoderPropertyID_State = 4159,


 RMAudioDecoderPropertyID_Codec = 4160,


 RMAudioDecoderPropertyID_AudioBtsThreshold = 4161,


 RMAudioDecoderPropertyID_PCMXParameters = 4162,


 RMAudioDecoderPropertyID_AACParameters = 4163,


 RMAudioDecoderPropertyID_DVDAParameters = 4482,


 RMAudioDecoderPropertyID_TToneParameters = 4603,


 RMAudioDecoderPropertyID_BSACParameters = 4481,


 RMAudioDecoderPropertyID_Ac3Parameters = 4164,


 RMAudioDecoderPropertyID_DtsParameters = 4165,


 RMAudioDecoderPropertyID_LpcmVobParameters = 4166,


 RMAudioDecoderPropertyID_LpcmAobParameters = 4167,


 RMAudioDecoderPropertyID_PcmCdaParameters = 4168,


 RMAudioDecoderPropertyID_LpcmBDParameters = 4169,


 RMAudioDecoderPropertyID_MpegParameters = 4170,


 RMAudioDecoderPropertyID_WMAParameters = 4171,


 RMAudioDecoderPropertyID_CurrentPTS = 6143,


 RMAudioDecoderPropertyID_Overlay = 1066,


 RMAudioDecoderPropertyID_Skip = 4172,


 RMAudioDecoderPropertyID_PreFillBuffer = 4173,


 RMAudioDecoderPropertyID_MixerWeight = 4174,


 RMAudioDecoderPropertyID_DRAMSizeX = 4175,


 RMAudioDecoderPropertyID_OpenX = 4176,


 RMAudioDecoderPropertyID_BtsFIFO = 4177,


 RMAudioDecoderPropertyID_SynchroniseAudioWithDisplayPTS = 6145,


 RMAudioDecoderPropertyID_AudioPlayTime = 6187,


 RMAudioDecoderPropertyID_AudioBDJPanning = 6199,


 RMAudioDecoderPropertyID_AudioBDJGain = 6200,


 RMAudioDecoderPropertyID_AudioControlPCMX = 6207,


 RMAudioDecoderPropertyID_SyncSTCEnable = 4593,
};


enum RMAudioCapturePropertyID {


 RMAudioCapturePropertyID_DRAMSize = 4179,


 RMAudioCapturePropertyID_Open = 4180,


 RMAudioCapturePropertyID_Close = 4181,


 RMAudioCapturePropertyID_Capture = 4182,


 RMAudioCapturePropertyID_Source = 4183,


 RMAudioCapturePropertyID_AudioStd = 4184,


 RMAudioCapturePropertyID_SpdifDataType = 4185,


 RMAudioCapturePropertyID_SpdifBitstreamNumber = 4580,
};


enum RMVoipCodecPropertyID {


 RMVoipCodecPropertyID_DRAMSize = 4508,


 RMVoipCodecPropertyID_Open = 4509,


 RMVoipCodecPropertyID_Close = 4510,


 RMVoipCodecPropertyID_Encoder_Codec = 4511,


 RMVoipCodecPropertyID_Decoder_Codec = 4512,


 RMVoipCodecPropertyID_Command = 4513,


 RMVoipCodecPropertyID_Capture = 4514,


 RMVoipCodecPropertyID_Playback = 4515,


 RMVoipCodecPropertyID_CoderState = 4516,


 RMVoipCodecPropertyID_CoderVadState = 4517,


 RMVoipCodecPropertyID_DecoderState = 4518,


 RMVoipCodecPropertyID_ToneGeneratorState = 4519,


 RMVoipCodecPropertyID_CidGeneratorState = 4520,


 RMVoipCodecPropertyID_AecState = 4521,


 RMVoipCodecPropertyID_DTMFState = 4522,


 RMVoipCodecPropertyID_DTMF_Empty = 4523,


 RMVoipCodecPropertyID_DTMF_Ascii = 4524,


 RMVoipCodecPropertyID_AecTddState = 4525,


 RMVoipCodecPropertyID_NlpCngState = 4526,


 RMVoipCodecPropertyID_Tone_parameters = 4527,


 RMVoipCodecPropertyID_Cid_parameters = 4528,


 RMVoipCodecPropertyID_Recording_volume = 4529,


 RMVoipCodecPropertyID_Playback_volume = 4530,


 RMVoipCodecPropertyID_WriteChunk = 4531,


 RMVoipCodecPropertyID_ReadChunk = 4532,
};


enum RMCRCDecoderPropertyID {


 RMCRCDecoderPropertyID_DRAMSize = 4186,


 RMCRCDecoderPropertyID_Open = 4187,


 RMCRCDecoderPropertyID_Close = 4188,


 RMCRCDecoderPropertyID_Reset = 4189,


 RMCRCDecoderPropertyID_EndOfStream = 4190,


 RMCRCDecoderPropertyID_Sum = 4191,


 RMCRCDecoderPropertyID_Command = 4192,


 RMCRCDecoderPropertyID_State = 4193,
};


enum RMXCRCDecoderPropertyID {


 RMXCRCDecoderPropertyID_DRAMSize = 4194,


 RMXCRCDecoderPropertyID_Open = 4195,


 RMXCRCDecoderPropertyID_Close = 4196,


 RMXCRCDecoderPropertyID_Reset = 4197,


 RMXCRCDecoderPropertyID_EndOfStream = 4198,


 RMXCRCDecoderPropertyID_Sum = 4199,


 RMXCRCDecoderPropertyID_Command = 4200,


 RMXCRCDecoderPropertyID_State = 4201,
};


enum RMStreamCapturePropertyID {


 RMStreamCapturePropertyID_DRAMSize = 4202,


 RMStreamCapturePropertyID_Open = 4203,


 RMStreamCapturePropertyID_Close = 4204,


 RMStreamCapturePropertyID_Reset = 4205,


 RMStreamCapturePropertyID_EndOfStream = 4206,


 RMStreamCapturePropertyID_Command = 4207,


 RMStreamCapturePropertyID_State = 4208,
};


enum RMRawDataTransferPropertyID {


 RMRawDataTransferPropertyID_DRAMSize = 4209,


 RMRawDataTransferPropertyID_Open = 4210,


 RMRawDataTransferPropertyID_ProgramLinearTransfer = 4211,


 RMRawDataTransferPropertyID_ProgramRectangleTransfer = 4212,


 RMRawDataTransferPropertyID_Close = 4213,


 RMRawDataTransferPropertyID_Reset = 4214,
};


enum RMI2CPropertyID {


 RMI2CPropertyID_DeviceParams = 6146,


 RMI2CPropertyID_DeviceParameter = 6205,


 RMI2CPropertyID_QueryDeviceParameter = 6206,


 RMI2CPropertyID_WriteRMuint8 = 6147,


 RMI2CPropertyID_QueryRMuint8 = 6148,


 RMI2CPropertyID_RMuint8Access_NoSubAddress = 6149,


 RMI2CPropertyID_WriteData = 6150,


 RMI2CPropertyID_QueryData = 6151,


 RMI2CPropertyID_SelectSegment = 6152,
};


enum RMGFXEnginePropertyID {


 RMGFXEnginePropertyID_DRAMSize = 4215,


 RMGFXEnginePropertyID_Open = 4216,


 RMGFXEnginePropertyID_Close = 4217,


 RMGFXEnginePropertyID_CommandBuffer = 4463,


 RMGFXEnginePropertyID_Correction = 4218,


 RMGFXEnginePropertyID_ColorFormat = 4219,


 RMGFXEnginePropertyID_AlphaFormat = 4220,


 RMGFXEnginePropertyID_Surface = 4221,


 RMGFXEnginePropertyID_BCS = 4222,


 RMGFXEnginePropertyID_FillRectangle = 4223,


 RMGFXEnginePropertyID_BlendRectangles = 4224,


 RMGFXEnginePropertyID_BlendGradient = 4225,


 RMGFXEnginePropertyID_RasterBlendGradient = 4466,


 RMGFXEnginePropertyID_RasterBlendRectangles = 4465,


 RMGFXEnginePropertyID_ReplaceGradient = 4226,


 RMGFXEnginePropertyID_FillGradient = 4227,


 RMGFXEnginePropertyID_SingleColorBlendRectangles = 4228,


 RMGFXEnginePropertyID_BlendAndScaleRectangles = 4229,


 RMGFXEnginePropertyID_Blend = 4230,


 RMGFXEnginePropertyID_Move = 4231,


 RMGFXEnginePropertyID_Replace = 4232,


 RMGFXEnginePropertyID_MoveRectangle = 4233,


 RMGFXEnginePropertyID_ReplaceRectangle = 4234,


 RMGFXEnginePropertyID_ReplaceAndScaleRectangle = 4235,


 RMGFXEnginePropertyID_MoveAndScaleRectangle = 4236,


 RMGFXEnginePropertyID_DisplayPicture = 4237,


 RMGFXEnginePropertyID_WaitForPicture = 4238,


 RMGFXEnginePropertyID_LinearGradientSurface = 4239,


 RMGFXEnginePropertyID_RadialGradientSurface = 4240,


 RMGFXEnginePropertyID_Palette_1BPP = 4241,


 RMGFXEnginePropertyID_Palette_2BPP = 4242,


 RMGFXEnginePropertyID_Palette_4BPP = 4243,


 RMGFXEnginePropertyID_Palette_8BPP = 4244,


 RMGFXEnginePropertyID_KeyColor = 4245,


 RMGFXEnginePropertyID_FieldType = 4246,


 RMGFXEnginePropertyID_NonlinearScale = 4247,


 RMGFXEnginePropertyID_GlyphMask = 4248,


 RMGFXEnginePropertyID_GlyphScaleMatrix = 4249,


 RMGFXEnginePropertyID_LPFThresholds = 4250,


 RMGFXEnginePropertyID_GlyphOutputSize = 4251,


 RMGFXEnginePropertyID_FlushCommandQueue = 4252,


 RMGFXEnginePropertyID_CommandQueueEmpty = 4253,


 RMGFXEnginePropertyID_PictureBufferAddress = 4254,


 RMGFXEnginePropertyID_EnableAlphaFading = 4255,


 RMGFXEnginePropertyID_HoldCommandQueue = 4256,


 RMGFXEnginePropertyID_ReleaseCommandQueue = 4257,


 RMGFXEnginePropertyID_AlphaPalette = 4258,
};


enum RMMMPropertyID {


 RMMMPropertyID_Malloc = 1067,


 RMMMPropertyID_Free = 1068,


 RMMMPropertyID_DumpMallocedBlocks = 1069,


 RMMMPropertyID_AreaSize = 1070,


 RMMMPropertyID_MemoryArea = 4259,


 RMMMPropertyID_TopRemovableArea = 4260,


 RMMMPropertyID_MicrocodeROMFSStart = 1071,


 RMMMPropertyID_RemoveTopRemovableArea = 4261,


 RMMMPropertyID_Stats = 4262,
};


enum RMSpuDecoderPropertyID {


 RMSpuDecoderPropertyID_DRAMSize = 4263,


 RMSpuDecoderPropertyID_Open = 4264,


 RMSpuDecoderPropertyID_Close = 4265,


 RMSpuDecoderPropertyID_Command = 4266,


 RMSpuDecoderPropertyID_State = 4267,


 RMSpuDecoderPropertyID_Scaler = 6153,


 RMSpuDecoderPropertyID_Palette = 6154,


 RMSpuDecoderPropertyID_StreamType = 6155,


 RMSpuDecoderPropertyID_SubpictureOn = 6156,


 RMSpuDecoderPropertyID_Hilight = 6157,


 RMSpuDecoderPropertyID_BDRLECommand = 6158,


 RMSpuDecoderPropertyID_BDRLEBatchCommand = 6190,


 RMSpuDecoderPropertyID_VSyncSurface = 6160,


 RMSpuDecoderPropertyID_DRAMSizeX = 4268,


 RMSpuDecoderPropertyID_OpenX = 4269,


 RMSpuDecoderPropertyID_DecoderDataMemory = 4270,


 RMSpuDecoderPropertyID_CodecX = 4271,


 RMSpuDecoderPropertyID_BtsFIFO = 4272,


 RMSpuDecoderPropertyID_Error = 4273,
};


enum RMPictureTransformPropertyID {


 RMPictureTransformPropertyID_Open = 4562,


 RMPictureTransformPropertyID_Close = 4563,


 RMPictureTransformPropertyID_OrientationMode = 4571,


 RMPictureTransformPropertyID_Command = 4565,


 RMPictureTransformPropertyID_State = 4566,


 RMPictureTransformPropertyID_CommandStatus = 4567,


 RMPictureTransformPropertyID_DecoderMemory = 4607,
};


enum RMClosedCaptionDecoderPropertyID {


 RMClosedCaptionDecoderPropertyID_DRAMSize = 4274,


 RMClosedCaptionDecoderPropertyID_Open = 1072,


 RMClosedCaptionDecoderPropertyID_Close = 1073,


 RMClosedCaptionDecoderPropertyID_FeedDecoder = 1074,
};


enum RMRTCPropertyID {


 RMRTCPropertyID_FreeEventID = 4275,


 RMRTCPropertyID_Alarm = 4276,


 RMRTCPropertyID_CancelAlarm = 4277,
};


enum RMCipherPropertyID {


 RMCipherPropertyID_AES_128_KeySetup = 4278,


 RMCipherPropertyID_AES_128_IVSetup = 4279,


 RMCipherPropertyID_AES_128_ECB_Encrypt = 4280,


 RMCipherPropertyID_AES_128_ECB_Decrypt = 4281,


 RMCipherPropertyID_AES_128_CTR_Cipher = 4282,


 RMCipherPropertyID_DES_ECB_KeySetup = 4283,


 RMCipherPropertyID_DES_ECB_Encrypt = 4284,


 RMCipherPropertyID_DES_ECB_Decrypt = 4285,


 RMCipherPropertyID_RC4_KeySetup = 4286,


 RMCipherPropertyID_RC4_Cipher = 4287,


 RMCipherPropertyID_RC4_KeySetup_Completion = 4288,


 RMCipherPropertyID_Hardware_Cipher_Completion = 4289,


 RMCipherPropertyID_AES_128_KeySetupLE = 4290,


 RMCipherPropertyID_AES_128_IVSetupLE = 4291,


 RMCipherPropertyID_RC4_BytesRemain = 4292,


 RMCipherPropertyID_Open = 4293,


 RMCipherPropertyID_Close = 4294,
};


enum RMSTCPropertyID {


 RMSTCPropertyID_Open = 4295,


 RMSTCPropertyID_AudioEngineModuleID = 4296,


 RMSTCPropertyID_VideoOutMasterModuleID = 4297,


 RMSTCPropertyID_Close = 4298,


 RMSTCPropertyID_StcTimeResolution = 4299,


 RMSTCPropertyID_VideoTimeResolution = 4300,


 RMSTCPropertyID_AudioTimeResolution = 4301,


 RMSTCPropertyID_VideoOffset = 4302,


 RMSTCPropertyID_AudioOffset = 4303,


 RMSTCPropertyID_Time = 4304,


 RMSTCPropertyID_TimeInfo = 4305,


 RMSTCPropertyID_Play = 4306,


 RMSTCPropertyID_Stop = 4307,


 RMSTCPropertyID_Speed = 4308,


 RMSTCPropertyID_Discontinuity = 4309,


 RMSTCPropertyID_VCXOModuleID = 1107,


 RMSTCPropertyID_StcInfo = 4310,


 RMSTCPropertyID_StcTimeDirectAccess = 4599,


 RMSTCPropertyID_VideoTimeDirectAccess = 4600,


 RMSTCPropertyID_AudioTimeDirectAccess = 4601,
};


enum RMPLLPropertyID {


 RMPLLPropertyID_PLL = 4311,


 RMPLLPropertyID_PLLUsage = 4312,


 RMPLLPropertyID_QueryPLL = 4313,


 RMPLLPropertyID_QueryPLLNominal = 4314,


 RMPLLPropertyID_CD = 4315,


 RMPLLPropertyID_CDUsage = 4316,


 RMPLLPropertyID_QueryCD = 4317,


 RMPLLPropertyID_QueryCDNominal = 4318,


 RMPLLPropertyID_PLLSource = 4319,


 RMPLLPropertyID_QueryPLLSource = 4320,


 RMPLLPropertyID_SourceFrequency = 4321,


 RMPLLPropertyID_QuerySourceFrequency = 4322,


 RMPLLPropertyID_RouteClockFromPLL = 4323,


 RMPLLPropertyID_RouteClockFromSource = 4324,


 RMPLLPropertyID_QueryClockRoute = 4325,


 RMPLLPropertyID_Frequency = 4326,


 RMPLLPropertyID_QueryFrequency = 4327,


 RMPLLPropertyID_CounterSource = 4328,


 RMPLLPropertyID_QueryCounterSource = 4329,


 RMPLLPropertyID_Counter = 4330,


 RMPLLPropertyID_QueryCounter = 4331,


 RMPLLPropertyID_QueryCounterFrequency = 4332,


 RMPLLPropertyID_BootirqSettings = 4333,
};


enum RMDemuxCipherPropertyID {


 RMDemuxCipherPropertyID_DRAMSize = 4558,


 RMDemuxCipherPropertyID_Open = 4537,


 RMDemuxCipherPropertyID_Close = 4538,


 RMDemuxCipherPropertyID_DemuxInterface = 4539,


 RMDemuxCipherPropertyID_AllocateCipherEntry = 4540,


 RMDemuxCipherPropertyID_FreeCipherEntry = 4541,


 RMDemuxCipherPropertyID_AESCipherEntry = 4542,


 RMDemuxCipherPropertyID_AllocateKeyEntry = 4543,


 RMDemuxCipherPropertyID_FreeKeyEntry = 4544,


 RMDemuxCipherPropertyID_OutbandKeyChange = 4545,
};


enum RMDemuxTaskPropertyID {


 RMDemuxTaskPropertyID_DRAMSize = 4334,


 RMDemuxTaskPropertyID_Open = 4335,


 RMDemuxTaskPropertyID_DRAMSizeX = 4336,


 RMDemuxTaskPropertyID_OpenX = 4337,


 RMDemuxTaskPropertyID_Close = 4338,


 RMDemuxTaskPropertyID_AvailableResourcesInfo = 4339,


 RMDemuxTaskPropertyID_Command = 4340,


 RMDemuxTaskPropertyID_State = 4341,


 RMDemuxTaskPropertyID_InputParameters = 4342,


 RMDemuxTaskPropertyID_TsSkipBytes = 4343,


 RMDemuxTaskPropertyID_IrqOutputSource = 4345,


 RMDemuxTaskPropertyID_IrqThresholdOutputSource = 4346,


 RMDemuxTaskPropertyID_IrqSectionOutputSource = 4347,


 RMDemuxTaskPropertyID_IrqPesOutputSource = 4348,


 RMDemuxTaskPropertyID_SoftIrq = 1075,


 RMDemuxTaskPropertyID_XferSourceAddress = 1076,


 RMDemuxTaskPropertyID_ConnectOutput = 1077,


 RMDemuxTaskPropertyID_AuxiliaryData = 4349,


 RMDemuxTaskPropertyID_AuxiliaryInfoValue = 4350,


 RMDemuxTaskPropertyID_Encryption = 4351,


 RMDemuxTaskPropertyID_PesEntry = 4352,


 RMDemuxTaskPropertyID_PesEntryInfo = 4353,


 RMDemuxTaskPropertyID_PesEntryAddOutputs = 4354,


 RMDemuxTaskPropertyID_PesEntryRemoveOutputs = 4355,


 RMDemuxTaskPropertyID_AllocateMatchSectionEntry = 4356,


 RMDemuxTaskPropertyID_FreeMatchSectionEntry = 4357,


 RMDemuxTaskPropertyID_MatchSectionEntry = 4358,


 RMDemuxTaskPropertyID_MatchSectionEntryInfo = 4359,


 RMDemuxTaskPropertyID_AllocatePidEntry = 4360,


 RMDemuxTaskPropertyID_FreePidEntry = 4361,


 RMDemuxTaskPropertyID_PidEntry = 4362,


 RMDemuxTaskPropertyID_PidEntryInfo = 4363,


 RMDemuxTaskPropertyID_PidEntryEnable = 4364,


 RMDemuxTaskPropertyID_PidEntryDisable = 4365,


 RMDemuxTaskPropertyID_PidEntryAddOutputs = 4366,


 RMDemuxTaskPropertyID_PidEntryRemoveOutputs = 4367,


 RMDemuxTaskPropertyID_PidEntryAddCipher = 4368,


 RMDemuxTaskPropertyID_PidEntryRemoveCipher = 4369,


 RMDemuxTaskPropertyID_PATPidEntry = 4370,


 RMDemuxTaskPropertyID_PATPidEntryInfo = 4371,


 RMDemuxTaskPropertyID_PATPidEntryEnable = 4372,


 RMDemuxTaskPropertyID_PATPidEntryDisable = 4373,


 RMDemuxTaskPropertyID_PATPidEntryAddOutputs = 4374,


 RMDemuxTaskPropertyID_PATPidEntryRemoveOutputs = 4375,


 RMDemuxTaskPropertyID_CATPidEntry = 4376,


 RMDemuxTaskPropertyID_CATPidEntryInfo = 4377,


 RMDemuxTaskPropertyID_CATPidEntryEnable = 4378,


 RMDemuxTaskPropertyID_CATPidEntryDisable = 4379,


 RMDemuxTaskPropertyID_CATPidEntryAddOutputs = 4380,


 RMDemuxTaskPropertyID_CATPidEntryRemoveOutputs = 4381,


 RMDemuxTaskPropertyID_MGTPidEntry = 4382,


 RMDemuxTaskPropertyID_MGTPidEntryInfo = 4383,


 RMDemuxTaskPropertyID_MGTPidEntryEnable = 4384,


 RMDemuxTaskPropertyID_MGTPidEntryDisable = 4385,


 RMDemuxTaskPropertyID_MGTPidEntryAddOutputs = 4386,


 RMDemuxTaskPropertyID_MGTPidEntryRemoveOutputs = 4387,


 RMDemuxTaskPropertyID_PCRPidEntry = 4388,


 RMDemuxTaskPropertyID_PCRPidEntryInfo = 4389,


 RMDemuxTaskPropertyID_PCRPidEntryEnable = 4390,


 RMDemuxTaskPropertyID_PCRPidEntryDisable = 4391,


 RMDemuxTaskPropertyID_PidBankPCRPid = 4392,


 RMDemuxTaskPropertyID_TimerSync = 4393,


 RMDemuxTaskPropertyID_PcrDiscontinuity = 4394,


 RMDemuxTaskPropertyID_OutputThreshold = 1078,


 RMDemuxTaskPropertyID_OutputTimerSync = 1079,


 RMDemuxTaskPropertyID_PreprocessCipher = 4395,


 RMDemuxTaskPropertyID_AllocateCipherEntry = 4397,


 RMDemuxTaskPropertyID_FreeCipherEntry = 4398,


 RMDemuxTaskPropertyID_DESCipherEntry = 4399,


 RMDemuxTaskPropertyID_TDESCipherEntry = 4400,


 RMDemuxTaskPropertyID_AESCipherEntry = 4401,


 RMDemuxTaskPropertyID_RC4CipherEntry = 4402,


 RMDemuxTaskPropertyID_DVBCSACipherEntry = 4403,


 RMDemuxTaskPropertyID_Multi2CipherEntry = 4404,


 RMDemuxTaskPropertyID_C2CipherEntry = 4405,


 RMDemuxTaskPropertyID_DVDCSSCipherEntry = 4406,


 RMDemuxTaskPropertyID_OutbandKeyChange = 4407,


 RMDemuxTaskPropertyID_InbandFifoWritableSize = 4408,


 RMDemuxTaskPropertyID_AllocateKeyEntry = 4409,


 RMDemuxTaskPropertyID_FreeKeyEntry = 4410,


 RMDemuxTaskPropertyID_InbandKeyChange = 4411,


 RMDemuxTaskPropertyID_DESKey = 4412,


 RMDemuxTaskPropertyID_TDESKey = 4413,


 RMDemuxTaskPropertyID_AESKey = 4414,


 RMDemuxTaskPropertyID_RC4Key = 4415,


 RMDemuxTaskPropertyID_DVBCSAKey = 4416,


 RMDemuxTaskPropertyID_Multi2Key = 4417,


 RMDemuxTaskPropertyID_C2Key = 4418,


 RMDemuxTaskPropertyID_CurrentPcrInfo = 4420,


 RMDemuxTaskPropertyID_FirstPcrInfo = 4421,


 RMDemuxTaskPropertyID_OutputDisableCommand = 4422,


 RMDemuxTaskPropertyID_CSSKeyPtr = 4423,


 RMDemuxTaskPropertyID_C2KeyPtr = 4424,


 RMDemuxTaskPropertyID_C2TablePtr = 4425,


 RMDemuxTaskPropertyID_IdleInputPort = 4426,


 RMDemuxTaskPropertyID_TSSyncLockCount = 4427,


 RMDemuxTaskPropertyID_DiscontinuityCounter = 4428,


 RMDemuxTaskPropertyID_ErrorInfo = 4469,


 RMDemuxTaskPropertyID_CSSchlgkey1 = 6177,


 RMDemuxTaskPropertyID_CSSkey1 = 6178,


 RMDemuxTaskPropertyID_CSSchlgkey2 = 6179,


 RMDemuxTaskPropertyID_CSSkey2 = 6180,


 RMDemuxTaskPropertyID_CSSdisckey = 6181,


 RMDemuxTaskPropertyID_CSStitlekey = 6182,


 RMDemuxTaskPropertyID_PidUsage = 4561,


 RMDemuxTaskPropertyID_FirstPcrOrPtsDetection = 4595,


 RMDemuxTaskPropertyID_PidEntryRecipher = 4596,


 RMDemuxTaskPropertyID_RecipherOptions = 4597,


 RMDemuxTaskPropertyID_BtsFIFO = 4602,
};


enum RMDemuxOutputPropertyID {


 RMDemuxOutputPropertyID_DRAMSize = 4429,


 RMDemuxOutputPropertyID_Open = 4430,


 RMDemuxOutputPropertyID_DRAMSizeX = 4431,


 RMDemuxOutputPropertyID_OpenX = 4432,


 RMDemuxOutputPropertyID_Close = 4433,


 RMDemuxOutputPropertyID_Connect = 4434,


 RMDemuxOutputPropertyID_Disconnect = 4435,


 RMDemuxOutputPropertyID_Enable = 4436,


 RMDemuxOutputPropertyID_Disable = 4437,


 RMDemuxOutputPropertyID_Flush = 4438,


 RMDemuxOutputPropertyID_SectionMask = 4439,


 RMDemuxOutputPropertyID_DataType = 4441,


 RMDemuxOutputPropertyID_Trigger = 4442,


 RMDemuxOutputPropertyID_TimerSync = 4443,


 RMDemuxOutputPropertyID_Cipher = 4444,


 RMDemuxOutputPropertyID_EndOfStream = 1086,


 RMDemuxOutputPropertyID_BtsFIFO = 4445,


 RMDemuxOutputPropertyID_TransportPriority = 4446,


 RMDemuxOutputPropertyID_EnablePts = 4467,


 RMDemuxOutputPropertyID_Pts45kFifoEntry = 4488,


 RMDemuxOutputPropertyID_ByteCounter = 4489,


 RMDemuxOutputPropertyID_EnableTrickModeTs = 4605,
};


enum RMCCFifoPropertyID {


 RMCCFifoPropertyID_DRAMSize = 4447,


 RMCCFifoPropertyID_Open = 4448,


 RMCCFifoPropertyID_AllowedTypes = 4449,


 RMCCFifoPropertyID_Close = 4450,


 RMCCFifoPropertyID_Flush = 4451,


 RMCCFifoPropertyID_Clear = 4452,


 RMCCFifoPropertyID_Enable = 4453,


 RMCCFifoPropertyID_Mute = 4454,


 RMCCFifoPropertyID_FifoEmpty = 4455,


 RMCCFifoPropertyID_CCEntry = 4456,


 RMCCFifoPropertyID_CCSurface = 4457,
};


enum RMDispVideoPlanePropertyID {


 RMDispVideoPlanePropertyID_Transparency = 6161,
};


enum RMDispHDSDConverterPropertyID {


 RMDispHDSDConverterPropertyID_OnTheFlyModeParameters = 6162,


 RMDispHDSDConverterPropertyID_OnTheFlyModeParametersX = 6163,


 RMDispHDSDConverterPropertyID_BufferedModeParameters = 6164,


 RMDispHDSDConverterPropertyID_BufferedModeParametersX = 6165,


 RMDispHDSDConverterPropertyID_Open = 6166,


 RMDispHDSDConverterPropertyID_OpenX = 6167,


 RMDispHDSDConverterPropertyID_DumpedLines = 6168,


 RMDispHDSDConverterPropertyID_DumpedPixels = 6169,


 RMDispHDSDConverterPropertyID_Close = 6170,


 RMDispHDSDConverterPropertyID_ConversionMode = 6171,


 RMDispHDSDConverterPropertyID_ConversionBuffer = 6172,


 RMDispHDSDConverterPropertyID_422DownSamplingMode = 6174,


 RMDispHDSDConverterPropertyID_ConstrainedOutput = 6195,
};


enum RMSha1SumPropertyID {


 RMSha1SumPropertyID_DRAMSize = 4458,


 RMSha1SumPropertyID_Open = 4459,


 RMSha1SumPropertyID_Close = 4460,


 RMSha1SumPropertyID_Sum = 4461,


 RMSha1SumPropertyID_Flush = 4462,
};


enum RMXTaskPropertyID {


 RMXTaskPropertyID_DRMTaskSize = 1087,


 RMXTaskPropertyID_AddDRMTask = 1088,


 RMXTaskPropertyID_DelDRMTask = 1089,


 RMXTaskPropertyID_FlushDRMTask = 1090,
};


enum RMTTXFifoPropertyID {


 RMTTXFifoPropertyID_DRAMSize = 4490,


 RMTTXFifoPropertyID_Open = 4491,


 RMTTXFifoPropertyID_Close = 4492,


 RMTTXFifoPropertyID_Flush = 4493,


 RMTTXFifoPropertyID_Enable = 4494,


 RMTTXFifoPropertyID_FifoInfo = 4604,


 RMTTXFifoPropertyID_TTXPicture = 4503,


 RMTTXFifoPropertyID_Stc = 4496,


 RMTTXFifoPropertyID_Mixer = 4497,


 RMTTXFifoPropertyID_Decoder = 4498,


 RMTTXFifoPropertyID_Surface = 4499,


 RMTTXFifoPropertyID_TTXEntry = 4500,
};


enum RMVCXOPropertyID {


 RMVCXOPropertyID_ConnectClock = 4506,


 RMVCXOPropertyID_DisconnectClock = 4584,


 RMVCXOPropertyID_STC = 4573,


 RMVCXOPropertyID_Speed = 4507,


 RMVCXOPropertyID_Reset = 4585,
};


enum RMPPFPropertyID {


 RMPPFPropertyID_RegisterFilter = 4549,


 RMPPFPropertyID_InputSurface = 4550,


 RMPPFPropertyID_OutputSurface = 4551,


 RMPPFPropertyID_EngineMemSize = 4554,


 RMPPFPropertyID_OutputSurfaceMemSize = 4555,


 RMPPFPropertyID_OpenEngine = 4556,


 RMPPFPropertyID_OpenOutputSurface = 4557,


 RMPPFPropertyID_TriggerEvent = 4552,


 RMPPFPropertyID_Command = 4553,
};

enum RMGenericPropertyID {
 RMGenericPropertyID_Name = 6175,
 RMGenericPropertyID_DisableEvent = 4020,
 RMGenericPropertyID_LockMixerSourceScalingMode = 6060,
 RMGenericPropertyID_DisplayDuplicateCount = 4030,
 RMGenericPropertyID_DisplayEvent = 1039,
 RMGenericPropertyID_ForcePostProcessingDownmixing = 1093,
 RMGenericPropertyID_TransparentStrips = 6043,
 RMGenericPropertyID_ColorDegradationBoundary = 6028,
 RMGenericPropertyID_ReadBufferCompletion = 4581,
 RMGenericPropertyID_DMAPoolMatchDataFifo = 4078,
 RMGenericPropertyID_ProcessInbandCallback = 1060,
 RMGenericPropertyID_LumaKeying = 6196,
 RMGenericPropertyID_DecoderProcessInterrupt = 1022,
 RMGenericPropertyID_AudioPostProcessingInfo = 4477,
 RMGenericPropertyID_DisplaySkipCount = 4029,
 RMGenericPropertyID_AnalogTVFormat = 1047,
 RMGenericPropertyID_LineCrop = 4476,
 RMGenericPropertyID_VBIReadbackI2C = 6075,
 RMGenericPropertyID_DownScalingMode = 6040,
 RMGenericPropertyID_ScalerInputWindow = 6030,
 RMGenericPropertyID_ReadChunk256 = 4579,
 RMGenericPropertyID_ForceInterlacedBoundary = 6029,
 RMGenericPropertyID_TripleCVBS = 4475,
 RMGenericPropertyID_Alpha1 = 6016,
 RMGenericPropertyID_EnableFading = 6017,
 RMGenericPropertyID_RemoveSlaveOutput = 6097,
 RMGenericPropertyID_CurrentDisplayPTS = 6051,
 RMGenericPropertyID_Genlock = 6101,
 RMGenericPropertyID_Validate = 6010,
 RMGenericPropertyID_Enable = 6008,
 RMGenericPropertyID_SCARTWideScreen = 6106,
 RMGenericPropertyID_InbandCommandX = 4116,
 RMGenericPropertyID_1BPP_LUT = 6020,
 RMGenericPropertyID_TimingResetMaster = 6099,
 RMGenericPropertyID_BlackStripMode = 6042,
 RMGenericPropertyID_I2S_SEL = 1095,
 RMGenericPropertyID_CGMSWSS_525 = 4058,
 RMGenericPropertyID_EnableEvent = 4019,
 RMGenericPropertyID_DisconnectFromDemuxOutput = 1063,
 RMGenericPropertyID_VBICaptureANC = 6073,
 RMGenericPropertyID_DeinterlacingMode = 6054,
 RMGenericPropertyID_ComponentMode = 6102,
 RMGenericPropertyID_DisplayTimeInterval = 6037,
 RMGenericPropertyID_BackgroundColor = 6062,
 RMGenericPropertyID_AddXferFIFO = 4039,
 RMGenericPropertyID_NextPTS = 1040,
 RMGenericPropertyID_IsColorModeSupported = 6026,
 RMGenericPropertyID_CopyControl = 4535,
 RMGenericPropertyID_VBIReadbackI2CCC = 6210,
 RMGenericPropertyID_MixerSourceIndex = 6057,
 RMGenericPropertyID_SourceDisplayAspectRatio = 6052,
 RMGenericPropertyID_AnalogFrameInfo = 4533,
 RMGenericPropertyID_DigitalTVFormat = 1044,
 RMGenericPropertyID_8BPP_LUT = 6023,
 RMGenericPropertyID_IsColorSpaceSupported = 6025,
 RMGenericPropertyID_Contrast = 4026,
 RMGenericPropertyID_DRAMSizeXferFIFO = 4038,
 RMGenericPropertyID_KeyColor = 6019,
 RMGenericPropertyID_ComponentOrder = 4046,
 RMGenericPropertyID_Alpha0 = 6015,
 RMGenericPropertyID_SyncSourceModuleID = 6077,
 RMGenericPropertyID_PictureOverride = 4570,
 RMGenericPropertyID_DACEnable = 6188,
 RMGenericPropertyID_CbSaturation = 4027,
 RMGenericPropertyID_CCFifo = 6064,
 RMGenericPropertyID_Brightness = 4025,
 RMGenericPropertyID_MacroVisionLevel = 4056,
 RMGenericPropertyID_OutputCenterUp = 1094,
 RMGenericPropertyID_DACCompDisable = 4472,
 RMGenericPropertyID_TVStandard = 6068,
 RMGenericPropertyID_AddReadBuffer = 3008,
 RMGenericPropertyID_DefaultSurface = 6012,
 RMGenericPropertyID_ForceBackGround = 6063,
 RMGenericPropertyID_LUTAddress = 6024,
 RMGenericPropertyID_CurrentPictureInfo = 4583,
 RMGenericPropertyID_LastTransferredHwPts = 4582,
 RMGenericPropertyID_CutStripMode = 6044,
 RMGenericPropertyID_VBIData = 6074,
 RMGenericPropertyID_2BPP_LUT = 6021,
 RMGenericPropertyID_Stop = 6034,
 RMGenericPropertyID_LumaChromaDelay = 4474,
 RMGenericPropertyID_Threshold = 4440,
 RMGenericPropertyID_MixerSourceWindow = 6058,
 RMGenericPropertyID_Hue = 4045,
 RMGenericPropertyID_IsColorFormatSupported = 6027,
 RMGenericPropertyID_CurrentDisplayPTSAddr = 1041,
 RMGenericPropertyID_CGMSWSS_625 = 4059,
 RMGenericPropertyID_ClosedCaption = 4060,
 RMGenericPropertyID_MacroVision = 3009,
 RMGenericPropertyID_MasterClockGenerator = 6100,
 RMGenericPropertyID_AudioPostProcessingBuffer = 4478,
 RMGenericPropertyID_ScalingMode = 6039,
 RMGenericPropertyID_ColorSpace = 6061,
 RMGenericPropertyID_TVFormat = 1042,
 RMGenericPropertyID_VBICaptureRaw = 6072,
 RMGenericPropertyID_Detect = 6076,
 RMGenericPropertyID_CGMSA = 4057,
 RMGenericPropertyID_SyncOnPbPr = 6186,
 RMGenericPropertyID_InbandCommand = 4079,
 RMGenericPropertyID_XferFIFOBytesQueued = 4075,
 RMGenericPropertyID_AudioDecoderLog = 4468,
 RMGenericPropertyID_SlaveOutput = 6098,
 RMGenericPropertyID_ClearEventMask = 3004,
 RMGenericPropertyID_4BPP_LUT = 6022,
 RMGenericPropertyID_AudioDecoderStatus = 4178,
 RMGenericPropertyID_Step = 6036,
 RMGenericPropertyID_NonLinearScalingMode = 6041,
 RMGenericPropertyID_PixelClock = 1043,
 RMGenericPropertyID_AnalogFrameInfoQuery = 4546,
 RMGenericPropertyID_Surface = 6011,
 RMGenericPropertyID_ConnectToDemuxOutput = 1062,
 RMGenericPropertyID_DataFIFOInfo = 4076,
 RMGenericPropertyID_Profile = 6144,
 RMGenericPropertyID_XferFIFOInfo = 4074,
 RMGenericPropertyID_PersistentSurface = 6013,
 RMGenericPropertyID_SubPictureSurface = 6038,
 RMGenericPropertyID_CaptureDelay = 6078,
 RMGenericPropertyID_GPIOFieldID = 4036,
 RMGenericPropertyID_Flush = 6035,
 RMGenericPropertyID_ScalerFieldSelection = 6009,
 RMGenericPropertyID_SCARTConfig = 6104,
 RMGenericPropertyID_SCART = 6105,
 RMGenericPropertyID_VBIStore = 6071,
 RMGenericPropertyID_AddSlaveOutput = 6096,
 RMGenericPropertyID_DisplayAspectRatio = 6055,
 RMGenericPropertyID_DACDisable = 4473,
 RMGenericPropertyID_CompositeMode = 6103,
 RMGenericPropertyID_MixerSourceState = 6059,
 RMGenericPropertyID_EnableGammaCorrection = 6018,
 RMGenericPropertyID_TTXFifo = 6189,
 RMGenericPropertyID_KeepInvalidPicture = 4037,
 RMGenericPropertyID_CopyControlInfo = 4536,
 RMGenericPropertyID_SlaveClockGenerator = 1046,
 RMGenericPropertyID_PixelClockVCXOTimer = 6201,
 RMGenericPropertyID_CrSaturation = 4028,
};
# 22 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua_property.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_propertytypes.h" 1
# 24 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/../../emhwlib/include/emhwlib_propertytypes.h"
struct SystemBlock_GPIO_type {

 enum GPIOId_type Bit;

 RMbool Data;
};


struct SystemBlock_PWM_type {

 RMuint32 GeneratorNumber;

 RMbool Enable;

 RMuint32 Level;

 RMuint32 Log2Div;
};


struct SystemBlock_DRAMConfig_type {

 RMuint32 Controller;

 RMuint32 refresh;

 RMuint32 tRFC;

 RMuint32 CCL;

 RMuint32 DCL;

 RMbool d;

 RMuint32 col;

 RMbool a;

 RMbool s;
};


struct SystemBlock_DRAMDelay_type {

 RMuint32 Controller;

 RMuint32 DQS0;

 RMuint32 DQS1;

 RMuint32 DQS2;

 RMuint32 DQS3;

 RMuint32 Dout;
};


struct SystemBlock_DRAMDelayAuto_type {

 RMuint32 Controller;

 RMuint32 DQS00;

 RMuint32 DQS10;

 RMuint32 DQS20;

 RMuint32 DQS30;

 RMuint32 Dout0;

 RMuint32 DQS01;

 RMuint32 DQS11;

 RMuint32 DQS21;

 RMuint32 DQS31;

 RMuint32 Dout1;

 RMuint32 RefMan;

 RMbool A;

 RMuint32 RefAuto;

 RMuint32 min;

 RMuint32 range;
};


struct SystemBlock_BWMonitorSelection_type {

 RMuint32 DRAMControllerId;

 RMuint8 ChannelA;

 RMuint8 ChannelB;

 RMuint8 ChannelC;

 RMuint8 ChannelD;

 RMuint32 AddressHi;

 RMuint32 AddressLo;

 RMuint8 ConfigId;
};


struct SystemBlock_BWMonitorEnable_type {

 RMuint32 DRAMControllerId;

 RMbool Enable;
};


enum CPUBlock_State_type {

 CPUBlock_State_RUNNING = 0,

 CPUBlock_State_STOPPED = 1,

 CPUBlock_State_RESET = 2,
};


struct CPUBlock_ProcessInterrupt_type {

 RMuint32 status;

 void * context;
};


struct CPUBlock_AddDataFifoXferTask_type {

 RMuint32 task_address;

 RMuint32 priority;

 RMuint32 host_notification_threshold;

 enum TransferTaskCallback callback;

 void * context;

 RMuint32 data_fifo;

 RMuint32 data_mutex;

 RMuint32 pts_fifo;

 RMuint32 dmem_base;

 RMuint32 soft_irq_task_addr;

 enum TransferTaskDirection direction;

 enum TransferTaskFifoMode fifo_mode;

 RMuint32 size;
};


struct CPUBlock_AddRawDataXferTask_type {

 RMuint32 task_address;

 RMuint32 priority;

 RMuint32 host_notification_threshold;

 enum TransferTaskCallback callback;

 void * context;

 RMuint32 soft_irq_task_addr;

 enum TransferTaskDirection direction;

 RMuint32 size;
};


struct CPUBlock_AddSoftIrqTask_type {

 RMuint32 task_address;

 RMuint32 task_head;

 RMuint32 module_id;

 RMuint32 mutex;

 RMuint32 pMask;

 RMuint32 pStatus;

 RMuint32 status_fifo_addr;
};


struct CPUBlock_DataFifoChunk_type {

 RMuint32 task_address;

 RMuint32 src;

 RMuint32 size;

 void * context;

 RMuint32 pts;

 RMbool pts_valid;

 RMuint32 first_access_unit_pointer;
};


struct CPUBlock_RawDataChunk_type {

 RMuint32 task_address;

 RMuint32 src;

 RMuint32 size;

 void * context;
};


struct CPUBlock_AddDataFifoReadBuffer_type {

 RMuint32 task_address;

 RMuint32 src;

 RMuint32 size;

 void * context;
};


struct CPUBlock_AddRawDataReadBuffer_type {

 RMuint32 task_address;

 RMuint32 src;

 RMuint32 size;

 void * context;
};


struct CPUBlock_ProgramRawDataXfer_type {

 RMuint32 task_address;

 RMuint32 Address;

 RMuint32 Size;

 RMuint32 Width;

 RMuint32 TotalWidth;

 RMbool Tiled;
};


struct CPUBlock_Error_type {

 RMuint32 module_id;

 RMstatus error;

 RMuint32 time;
};


struct CPUBlock_EMhwlibError_type {

 RMuint32 module_id;

 RMstatus error;

 RMuint32 time;
};


struct CPUBlock_ReadBufferThreshold_type {

 RMuint32 task_address;

 RMuint32 threshold;
};


struct XPUBlock_Error_type {

 RMuint32 module_id;

 RMstatus error;

 RMuint32 time;
};


struct IPUBlock_Error_type {

 RMuint32 module_id;

 RMstatus error;

 RMuint32 time;
};


struct DisplayBlock_VsyncApiInfo_type {

 RMuint32 Address;

 RMuint32 Size;
};


struct DisplayBlock_InitMultiplePictureSurface_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Address;

 enum EMhwlibColorSpace ColorSpace;

 struct EMhwlibAspectRatio PixelAspectRatio;

 RMuint32 PictureCount;

 RMuint32 STCModuleId;
};


struct DisplayBlock_InitMultiplePictureSurfaceX_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Address;

 enum EMhwlibColorSpace ColorSpace;

 struct EMhwlibAspectRatio PixelAspectRatio;

 RMuint32 PictureCount;

 RMuint32 STCModuleId;

 RMbool Tiled;
};


struct DisplayBlock_InsertPictureInSurfaceFifo_type {

 RMuint32 Surface;

 RMuint32 Picture;

 RMuint64 Pts;
};


struct DisplayBlock_SetPaletteOnPicture_type {

 RMuint32 Picture;

 RMpalette_8BPP Palette;

 RMuint32 PaletteSize;
};


struct DisplayBlock_SurfaceAspectRatio_type {

 RMuint32 surface;

 enum EMhwlibAspectRatioType type;

 struct EMhwlibAspectRatio ar;
};


struct DisplayBlock_SurfaceSTC_type {

 RMuint32 surface;

 RMuint32 STCModuleId;
};


struct DisplayBlock_ForcePictureBufferAddress_type {

 RMuint32 Surface;

 RMuint32 LumaAddress;

 RMuint32 ChromaAddress;
};


struct DisplayBlock_EnableGFXInteraction_type {

 RMuint32 Surface;

 RMbool Enable;
};


struct DisplayBlock_AltOutConfig_type {

 RMint32 GPIO;

 RMbool Invert;
};


struct DisplayBlock_AnalogSDParams_type {

 struct vsync_analog_SD_registers * Struct;

 struct EMhwlibTVFormatAnalog * Format;
};


struct DisplayBlock_AnalogHDParams_type {

 struct vsync_analog_HD_registers * Struct;

 struct EMhwlibTVFormatAnalog * Format;
};


struct DisplayBlock_AnalogOffsetParams_type {

 struct vsync_analog_Offset_registers * Struct;

 struct EMhwlibTVFormatAnalog * Format;
};


struct DisplayBlock_DigitalParams_type {

 struct vsync_digital_registers * Struct;

 struct EMhwlibTVFormatDigital * Format;
};


struct DisplayBlock_VBUSBandwidth_type {

 struct BWArbiterParam VideoIn;

 struct BWArbiterParam GraphicsIn;

 struct BWArbiterParam MainVideoScalerLuma;

 struct BWArbiterParam MainVideoScalerChroma;

 struct BWArbiterParam GFXScalerLuma;

 struct BWArbiterParam GFXScalerChroma;

 struct BWArbiterParam VCRScalerLuma;

 struct BWArbiterParam VCRScalerChroma;

 struct BWArbiterParam CRTScalerLuma;

 struct BWArbiterParam CRTScalerChroma;

 struct BWArbiterParam OSDScaler;

 struct BWArbiterParam SPUScaler;

 struct BWArbiterParam GFXEngineX;

 struct BWArbiterParam GFXEngineY;

 struct BWArbiterParam GFXEngineNX;
};


enum DisplayBlock_HDMIState_type {

 DisplayBlock_HDMIState_Running = 0,

 DisplayBlock_HDMIState_ResetHDMI = 1,

 DisplayBlock_HDMIState_ResetKeymemI2C = 2,

 DisplayBlock_HDMIState_ResetConfig = 3,
};


struct DisplayBlock_HDMIConfig_type {

 RMbool ClkDiv;

 RMbool PowerUpPhy;

 RMbool OutputSelect;

 RMbool AudioClkInv;
};


struct DisplayBlock_PixelClock_type {

 RMuint32 OutputModuleID;

 RMuint32 PixelClock;

 enum PLLGen PLL;

 enum PLLOut PLLOut;

 RMbool Analog4XOver;

 struct PLLRegSet * pConfigPLL;
};


struct DisplayBlock_SurfaceDefaultColorSpaceAlgorithm_type {

 RMuint32 Surface;

 enum EMhwlibDefaultColorSpaceAlgorithm Algorithm;
};


struct DispOSDScaler_ScalingConfig_type {

 RMbool AdaptativeEnable;

 RMuint32 Taps;

 RMuint32 AntiFlickerColor;

 RMuint32 AntiFlickerAlpha;
};


struct DispHardwareCursor_Size_type {

 RMuint32 Width;

 RMuint32 Height;
};


struct DispMainVideoScaler_DeinterlacingProportion_type {

 RMuint32 NewLineProportion;

 RMuint32 ExistingLineProportion;
};


struct DispMainVideoScaler_DeinterlacingMotionConfig_type {

 RMuint32 Value0;

 RMuint32 Value8;

 RMuint32 Value16;

 RMuint32 Value32;
};


struct DispMainVideoScaler_FilterSelection_type {

 RMuint32 Boundary_0_1;

 RMuint32 Boundary_1_2;

 RMuint32 Boundary_2_3;
};


struct DispSubPictureScaler_ScalingConfig_type {

 RMbool AdaptativeEnable;

 RMuint32 AntiFlickerColor;

 RMuint32 AntiFlickerAlpha;
};


struct DispMainMixer_LayerOrder_type {

 RMuint32 Layer6SourceModuleID;

 RMuint32 Layer5SourceModuleID;

 RMuint32 Layer4SourceModuleID;

 RMuint32 Layer3SourceModuleID;

 RMuint32 Layer2SourceModuleID;

 RMuint32 Layer1SourceModuleID;

 RMuint32 Layer0SourceModuleID;
};


struct DispVCRMixer_LayerOrder_type {

 RMuint32 Layer3SourceModuleID;

 RMuint32 Layer2SourceModuleID;

 RMuint32 Layer1SourceModuleID;

 RMuint32 Layer0SourceModuleID;
};


struct DispRouting_Route_type {

 RMuint32 SourceModuleID;

 RMuint32 DestinationModuleID;

 RMuint32 Enable;
};


struct DispRouting_Routing_type {

 RMbool DigitalOutputEnable;

 RMuint32 DigitalOutputSourceModuleID;

 RMbool MainAnalogOutputEnable;

 RMuint32 MainAnalogOutputSourceModuleID;

 RMbool ComponentOutputEnable;

 RMuint32 ComponentOutputSourceModuleID;

 RMbool CompositeOutputEnable;

 RMuint32 CompositeOutputSourceModuleID;
};


struct DispVideoInput_Open_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 NumBuffer;

 RMuint32 BufferAddress;

 RMuint32 BufferSize;

 enum EMhwlibColorSpace ColorSpace;

 struct EMhwlibAspectRatio PixelAspectRatio;

 RMuint32 STCIndex;
};


struct DispVideoInput_InputFormat_type {

 RMbool ProtocolV;

 RMbool ProtocolM;

 RMbool ComponentOrderReverse;

 RMbool TrailingEdge;

 RMbool VSyncDelay;
};


struct DispGraphicInput_Open_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 NumBuffer;

 RMuint32 BufferAddress;

 RMuint32 BufferSize;

 enum EMhwlibColorSpace ColorSpace;

 struct EMhwlibAspectRatio PixelAspectRatio;

 RMuint32 STCIndex;
};


struct DispGraphicInput_InputFormat_type {

 enum EMhwlibInputColorFormat InputColorFormat;

 RMbool ProtocolV;

 RMbool ProtocolL;

 RMbool ProtocolP;

 RMbool ComponentOrderRBG;

 RMbool TrailingEdge;

 RMbool VSyncDelay;
};


struct DispGraphicInput_OutputFormat_type {

 RMuint32 OutRouteModuleID;

 RMuint32 BusSize;

 RMuint32 Alpha0;

 RMuint32 Alpha1;

 RMbool FadingEnable;

 RMbool DualEdgeInvert;

 RMbool DualEdge;

 RMbool DualEdgeWidth;
};


struct DispGraphicInput_KeyColor_type {

 RMbool KeyEnable;

 RMuint32 KeyColorRCr;

 RMuint32 KeyColorGY;

 RMuint32 KeyColorBCb;

 RMuint32 KeyColorRange;
};


enum DispDigitalOut_ClippingLevel_type {

 DispDigitalOut_ClippingLevel_Clip_16_240 = 1,

 DispDigitalOut_ClippingLevel_Clip_1_254 = 2,
};


struct DispDigitalOut_PadsConfig_type {

 RMbool InvertClock;

 RMbool DDRdout;

 RMbool InvertCaptureClock;

 RMuint32 DDRdelay;

 RMbool DisableDataDelay;
};


struct DispDigitalOut_InputPadsConfig_type {

 RMbool VideoInputV2;

 RMbool GraphicInputV2;
};


struct DispDigitalOut_PadsControl_type {

 RMuint32 APIVersion;

 RMbool ModifyInvertClock;

 RMbool InvertClock;

 RMbool ModifyDDRdout;

 RMbool DDRdout;

 RMbool ModifyInvertCaptureClock;

 RMbool InvertCaptureClock;

 RMbool ModifyDelay;

 RMuint32 Delay;

 RMbool ModifyVideoInputV2;

 RMbool VideoInputV2;

 RMbool ModifyGraphicInputV2;

 RMbool GraphicInputV2;

 RMbool ModifySCARTControl;

 RMuint32 SCARTControl;

 RMbool ModifyPadsLoop;

 RMbool PadsLoop;
};


struct DispDigitalOut_TimingResetMaster_type {

 RMuint32 ResetSourceID;

 RMuint32 DelayLines;

 RMuint32 DelayPixels;
};


struct DispDigitalOut_GPIOFieldID_type {

 RMuint32 GPIONumber;

 RMuint32 Delay;
};


struct DispDigitalOut_VSyncTimes_type {

 RMVSyncXtal VSyncTime;

 RMVSyncXtal FrameTime;
};


struct DispMainAnalogOut_TimingResetMaster_type {

 RMuint32 ResetSourceID;

 RMuint32 DelayLines;

 RMuint32 DelayPixels;
};


struct DispComponentOut_TimingResetMaster_type {

 RMuint32 ResetSourceID;

 RMuint32 DelayLines;

 RMuint32 DelayPixels;
};


struct DemuxEngine_Microcode_type {

 RMuint32 MicrocodeVersion;

 RMuint32 Address;
};


struct MpegEngine_Microcode_type {

 RMuint32 MicrocodeVersion;

 RMuint32 Address;
};


struct MpegEngine_DecoderSharedMemory_type {

 RMuint32 Address;

 RMuint32 Size;
};


struct MpegEngine_SchedulerSharedMemory_type {

 RMuint32 Address;

 RMuint32 Size;
};


struct MpegEngine_ConnectTask_type {

 RMbool connect;

 RMuint32 task_index;
};


struct VideoDecoder_Open_type {

 enum MPEG_Profile MPEGProfile;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;

 RMuint32 DemuxProgramId;

 RMuint32 TimerId;
};


enum VideoDecoder_Codec_type {

 VideoDecoder_Codec_MPEG2_SD = Profile_MPEG2_SD,

 VideoDecoder_Codec_MPEG2_DVD = Profile_MPEG2_DVD,

 VideoDecoder_Codec_MPEG2_HD = Profile_MPEG2_HD,

 VideoDecoder_Codec_MPEG4_SD = Profile_MPEG4_SD,

 VideoDecoder_Codec_MPEG4_SD_Padding = Profile_MPEG4_SD_Padding,

 VideoDecoder_Codec_MPEG4_HD = Profile_MPEG4_HD,

 VideoDecoder_Codec_MPEG4_HD_Padding = Profile_MPEG4_HD_Padding,

 VideoDecoder_Codec_MPEG2_SD_Packed = Profile_MPEG2_SD_Packed,

 VideoDecoder_Codec_MPEG2_DVD_Packed = Profile_MPEG2_DVD_Packed,

 VideoDecoder_Codec_MPEG2_HD_Packed = Profile_MPEG2_HD_Packed,

 VideoDecoder_Codec_MPEG4_SD_Packed = Profile_MPEG4_SD_Packed,

 VideoDecoder_Codec_MPEG4_HD_Packed = Profile_MPEG4_HD_Packed,

 VideoDecoder_Codec_MPEG2_SD_DeInt = Profile_MPEG2_SD_DeInt,

 VideoDecoder_Codec_MPEG2_DVD_DeInt = Profile_MPEG2_DVD_DeInt,

 VideoDecoder_Codec_MPEG2_HD_DeInt = Profile_MPEG2_HD_DeInt,

 VideoDecoder_Codec_MPEG4_SD_DeInt = Profile_MPEG4_SD_DeInt,

 VideoDecoder_Codec_MPEG4_SD_DeInt_Padding = Profile_MPEG4_SD_DeInt_Padding,

 VideoDecoder_Codec_MPEG4_HD_DeInt = Profile_MPEG4_HD_DeInt,

 VideoDecoder_Codec_MPEG4_HD_DeInt_Padding = Profile_MPEG4_HD_DeInt_Padding,

 VideoDecoder_Codec_MPEG2_SD_Packed_DeInt = Profile_MPEG2_SD_Packed_DeInt,

 VideoDecoder_Codec_MPEG2_DVD_Packed_DeInt = Profile_MPEG2_DVD_Packed_DeInt,

 VideoDecoder_Codec_MPEG2_HD_Packed_DeInt = Profile_MPEG2_HD_Packed_DeInt,

 VideoDecoder_Codec_MPEG4_SD_Packed_DeInt = Profile_MPEG4_SD_Packed_DeInt,

 VideoDecoder_Codec_MPEG4_HD_Packed_DeInt = Profile_MPEG4_HD_Packed_DeInt,

 VideoDecoder_Codec_WMV_SD = Profile_WMV_SD,

 VideoDecoder_Codec_WMV_816P = Profile_WMV_816P,

 VideoDecoder_Codec_WMV_HD = Profile_WMV_HD,

 VideoDecoder_Codec_DIVX3_SD = Profile_DIVX3_SD,

 VideoDecoder_Codec_DIVX3_HD = Profile_DIVX3_HD,

 VideoDecoder_Codec_DIVX3_SD_Packed = Profile_DIVX3_SD_Packed,

 VideoDecoder_Codec_DIVX3_HD_Packed = Profile_DIVX3_HD_Packed,

 VideoDecoder_Codec_H264_SD = Profile_H264_SD,

 VideoDecoder_Codec_H264_HD = Profile_H264_HD,

 VideoDecoder_Codec_H264_SD_DeInt = Profile_H264_SD_DeInt,

 VideoDecoder_Codec_H264_HD_DeInt = Profile_H264_HD_DeInt,

 VideoDecoder_Codec_VC1_SD = Profile_VC1_SD,

 VideoDecoder_Codec_VC1_HD = Profile_VC1_HD,
};


enum VideoDecoder_Command_type {

 VideoDecoder_Command_Uninit,

 VideoDecoder_Command_Init,

 VideoDecoder_Command_Stop,

 VideoDecoder_Command_PlayFwd,

 VideoDecoder_Command_PlayBwd,

 VideoDecoder_Command_PlayIFrame,

 VideoDecoder_Command_DecodeFwdToEvent,
};


enum VideoDecoder_State_type {

 VideoDecoder_State_Uninit,

 VideoDecoder_State_UninitPending,

 VideoDecoder_State_InitPending,

 VideoDecoder_State_Stop,

 VideoDecoder_State_StopPending,

 VideoDecoder_State_PlayFwd,

 VideoDecoder_State_PlayFwdPending,

 VideoDecoder_State_PlayBwd,

 VideoDecoder_State_PlayBwdPending,

 VideoDecoder_State_PlayIFrame,

 VideoDecoder_State_PlayIFramePending,

 VideoDecoder_State_DecodeFwdToEvent,

 VideoDecoder_State_DecodeFwdToEventPending,
};


struct VideoDecoder_VopInfo_type {

 RMuint32 VopTimeIncrementResolution;

 RMbool FixedVopRate;

 RMuint32 FixedVopTimeIncrement;
};


struct VideoDecoder_VideoTimeScale_type {

 RMbool enable;

 RMuint32 time_resolution;
};


struct VideoDecoder_WMV9VSProp_type {

 RMuint32 Sequence;

 RMuint16 Image_Width;

 RMuint16 Image_Height;

 RMuint16 MB_Width;

 RMuint16 MB_Height;
};


struct VideoDecoder_DIVX3VSProp_type {

 RMuint16 Image_Width;

 RMuint16 Image_Height;
};


struct VideoDecoder_ForceColorSpace_type {

 RMbool Enable;

 enum EMhwlibColorSpace ColorSpace;
};


struct VideoDecoder_OpenX_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 UserDataSize;

 RMuint32 DecoderDataSize;

 RMuint32 DecoderContextSize;

 RMint32 ExtraPictureBufferCount;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 XtaskInbandFIFOCount;

 RMuint32 STCId;

 RMuint32 XtaskId;

 RMuint32 PictureProtectedAddress;

 RMuint32 PictureProtectedSize;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;
};


struct VideoDecoder_AnchorErrPropagation_type {

 RMuint32 AnchorErrPropagationThreshold;

 RMuint32 AnchorErrPropagationLength;
};


struct AudioEngine_Microcode_type {

 RMuint32 MicrocodeVersion;

 RMuint32 Address;
};


struct AudioEngine_SampleFrequencyFromSource_type {

 RMuint32 GeneratorNumber;

 RMuint32 SampleFrequency;

 RMuint32 IntermediateFrequency;

 RMuint32 Source;

 RMuint32 SourceFrequency;
};


struct AudioEngine_Volume_type {

 RMuint32 Channel;

 RMuint32 Volume;
};


struct AudioEngine_Delay_type {

 RMuint32 Delay_ch0;

 RMuint32 Delay_ch1;

 RMuint32 Delay_ch2;

 RMuint32 Delay_ch3;

 RMuint32 Delay_ch4;

 RMuint32 Delay_ch5;

 RMuint32 Delay_ch6;

 RMuint32 Delay_ch7;

 RMuint32 sample_frequency;
};


struct AudioEngine_PL2x_type {

 RMuint32 mode;

 RMbool a;

 RMuint32 d;

 RMbool f;

 RMuint32 p;

 RMbool r;

 RMbool t;

 RMuint32 w;

 RMbool x;

 RMbool on;

 RMbool autoEX;
};


enum AudioEngine_SerialOut_type {

 AudioEngine_SerialOut_SO_ENABLE = 0,

 AudioEngine_SerialOut_SO_DISABLE = 1,
};


struct AudioEngine_I2SConfig_type {

 RMuint32 DataAlignment;

 RMbool SClkInvert;

 RMbool FrameInvert;

 RMbool MSBFirst;

 RMbool SampleSize16Bit;
};


enum AudioEngine_SpdifOut_type {

 AudioEngine_SpdifOut_Disabled = 0,

 AudioEngine_SpdifOut_ActiveData0 = 1,

 AudioEngine_SpdifOut_Active = 3,
};


enum AudioEngine_I2sOut_type {

 AudioEngine_I2sOut_i2s_Disabled = 0,

 AudioEngine_I2sOut_ActiveData0_i2s0 = 1,

 AudioEngine_I2sOut_ActiveData0_i2s1 = 2,

 AudioEngine_I2sOut_ActiveData0_i2s2 = 4,

 AudioEngine_I2sOut_ActiveData0_i2s3 = 8,

 AudioEngine_I2sOut_ActiveData0_i2s4 = 16,

 AudioEngine_I2sOut_Active_i2s0 = 32,

 AudioEngine_I2sOut_Active_i2s1 = 64,

 AudioEngine_I2sOut_Active_i2s2 = 128,

 AudioEngine_I2sOut_Active_i2s3 = 256,

 AudioEngine_I2sOut_Active_i2s4 = 512,
};


struct AudioEngine_ChannelStatus_type {

 RMuint32 Mask;

 RMuint32 Value;
};


struct AudioEngine_STC_type {

 RMbool Enable;

 RMuint32 time_resolution;

 RMuint64 time;
};


struct AudioEngine_Memcpy_type {

 RMuint32 dest;

 RMuint32 src;

 RMuint32 n;
};


struct AudioEngine_InputSPDIFStatus_type {

 RMuint32 ChannelStatus;

 RMuint16 Pc;

 RMuint16 Pd;

 RMuint16 Pe;

 RMuint16 Pf;
};


struct AudioEngine_DecoderSharedMemory_type {

 RMuint32 Address;

 RMuint32 Size;
};


struct AudioEngine_ConnectTask_type {

 RMbool connect;

 RMuint32 task_index;
};


struct AudioEngine_Downmixing_tables_type {

 enum AudioEngine_dmx_tables_type dmx_table_index;

 RMuint32 dmx_table_pointer;
};


struct AudioDecoder_Open_type {

 RMuint32 MaxChannelOutCount;

 RMuint32 PCMLineCount;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;

 RMuint32 DemuxProgramId;

 RMuint32 TimerId;
};


struct AudioDecoder_OpenPCMX_type {

 RMuint32 BitstreamFIFOSize0;

 RMuint32 XferFIFOCount0;

 RMuint32 BitstreamFIFOSize1;

 RMuint32 XferFIFOCount1;

 RMuint32 BitstreamFIFOSize2;

 RMuint32 XferFIFOCount2;

 RMuint32 BitstreamFIFOSize3;

 RMuint32 XferFIFOCount3;

 RMuint32 BitstreamFIFOSize4;

 RMuint32 XferFIFOCount4;

 RMuint32 BitstreamFIFOSize5;

 RMuint32 XferFIFOCount5;

 RMuint32 BitstreamFIFOSize6;

 RMuint32 XferFIFOCount6;

 RMuint32 BitstreamFIFOSize7;

 RMuint32 XferFIFOCount7;

 RMuint32 BitstreamFIFOSize8;

 RMuint32 XferFIFOCount8;

 RMuint32 UnProtectedAddress;

 RMuint32 UnProtectedSize;
};


enum AudioDecoder_Command_type {

 AudioDecoder_Command_Play = 1,

 AudioDecoder_Command_Pause = 2,

 AudioDecoder_Command_Stop = 3,

 AudioDecoder_Command_Init = 6,

 AudioDecoder_Command_Uninit = 7,
};


enum AudioDecoder_State_type {

 AudioDecoder_State_Uninitialized = 0,

 AudioDecoder_State_Error = 1,

 AudioDecoder_State_StopPending = 2,

 AudioDecoder_State_Stopped = 3,

 AudioDecoder_State_PlayPending = 4,

 AudioDecoder_State_Playing = 5,

 AudioDecoder_State_PausePending = 6,

 AudioDecoder_State_Paused = 7,

 AudioDecoder_State_UninitPending = 8,

 AudioDecoder_State_Closed = 9,
};


enum AudioDecoder_Codec_type {

 AudioDecoder_Codec_AC3 = 1,

 AudioDecoder_Codec_MPEG1 = 2,

 AudioDecoder_Codec_AAC = 3,

 AudioDecoder_Codec_DVDA = 4,

 AudioDecoder_Codec_PCM = 5,

 AudioDecoder_Codec_DTS = 6,

 AudioDecoder_Codec_WMA = 7,

 AudioDecoder_Codec_WMAPRO = 8,

 AudioDecoder_Codec_EXAC = 9,

 AudioDecoder_Codec_ATX = 10,

 AudioDecoder_Codec_WMAPRO_SPDIF = 11,

 AudioDecoder_Codec_PCMX = 12,

 AudioDecoder_Codec_BSAC = 13,

 AudioDecoder_Codec_TTONE = 14,
};


struct AudioDecoder_PCMXParameters_type {

 enum PcmCdaChannelAssign_type ChannelAssign;

 RMuint32 BitsPerSample;

 RMuint32 SamplingFrequency;

 RMbool MsbFirst;

 enum OutputDualMode_type OutputDualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 RMbool SignedPCM;

 enum OutputSpdif_type OutputSpdif;

 enum AudioOutputSurround20_type OutputSurround20;

 RMuint32 BassMode;
};


struct AudioDecoder_AACParameters_type {

 enum AACInputFormat InputFormat;

 enum OutputSpdif_type OutputSpdif;

 enum OutputDualMode_type OutputDualMode;

 enum AacOutputChannels_type OutputChannels;

 RMbool Acmod2DualMode;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 RMuint32 BassMode;
};


struct AudioDecoder_DVDAParameters_type {

 RMuint32 Chconfig;

 RMuint32 DRCenable;

 RMuint32 DRCboost;

 RMuint32 DRCcut;

 RMint32 DRCdialref;

 RMbool Lossless;

 enum OutputSpdif_type OutputSpdif;

 enum OutputDualMode_type OutputDualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 RMuint32 BassMode;
};


struct AudioDecoder_TToneParameters_type {

 enum TestToneType TToneType;

 enum AudioChannelMask_type TToneChannelMask;

 enum OutputSpdif_type OutputSpdif;

 enum OutputDualMode_type OutputDualMode;

 enum AacOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 RMuint32 BassMode;
};


struct AudioDecoder_BSACParameters_type {

 enum AACInputFormat InputFormat;

 enum OutputSpdif_type OutputSpdif;

 enum OutputDualMode_type OutputDualMode;

 enum AacOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 RMuint32 BassMode;
};


struct AudioDecoder_Ac3Parameters_type {

 enum OutputDualMode_type OutputDualMode;

 enum Ac3OutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 enum OutputSpdif_type OutputSpdif;

 RMbool Acmod2DualMode;

 enum Ac3CompMode_type CompMode;

 RMuint32 DynScaleHi;

 RMuint32 DynScaleLo;

 RMuint32 PcmScale;

 RMuint32 BassMode;
};


struct AudioDecoder_DtsParameters_type {

 enum OutputDualMode_type OutputDualMode;

 enum OutputSpdif_type OutputSpdif;

 enum DtsOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 RMuint32 BassMode;

 RMbool dts_CD;
};


struct AudioDecoder_LpcmVobParameters_type {

 enum LpcmVobChannelAssign_type ChannelAssign;

 RMuint32 BitsPerSample;

 RMuint32 SamplingFrequency;

 RMbool DownMix;

 RMuint16x8 CoefLR;

 enum OutputDualMode_type OutputDualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 enum OutputSpdif_type OutputSpdif;

 RMuint32 BassMode;
};


struct AudioDecoder_LpcmAobParameters_type {

 enum LpcmAobChannelAssign_type ChannelAssign;

 RMuint32 BitsPerSampleGroup1;

 RMuint32 BitsPerSampleGroup2;

 RMuint32 SamplingFrequencyGroup1;

 RMuint32 SamplingFrequencyGroup2;

 RMbool DownMix;

 RMuint16x6 CoefLR;

 RMuint32 PhaseLR;

 RMuint32 Group2Shift;

 enum OutputDualMode_type OutputDualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 enum OutputSpdif_type OutputSpdif;

 RMbool DownSample;

 RMuint32 BassMode;
};


struct AudioDecoder_PcmCdaParameters_type {

 enum PcmCdaChannelAssign_type ChannelAssign;

 RMuint32 BitsPerSample;

 RMuint32 SamplingFrequency;

 RMbool MsbFirst;

 enum OutputDualMode_type OutputDualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 RMbool SignedPCM;

 enum OutputSpdif_type OutputSpdif;

 RMuint32 BassMode;
};


struct AudioDecoder_LpcmBDParameters_type {

 enum PcmCdaChannelAssign_type ChannelAssign;

 RMuint32 BitsPerSample;

 RMuint32 SamplingFrequency;

 enum OutputDualMode_type OutputDualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 enum OutputSpdif_type OutputSpdif;

 RMuint32 BassMode;
};


struct AudioDecoder_MpegParameters_type {

 enum OutputDualMode_type OutputDualMode;

 RMbool Acmod2DualMode;

 enum AudioOutputChannels_type OutputChannels;

 RMbool OutputLfe;

 enum AudioOutputSurround20_type OutputSurround20;

 enum OutputSpdif_type OutputSpdif;

 RMuint32 BassMode;
};


struct AudioDecoder_WMAParameters_type {

 RMuint16 VersionNumber;

 RMuint32 SamplingFrequency;

 RMuint8 NumberOfChannels;

 RMbool OutputLfe;

 RMuint32 Bitrate;

 RMuint32 PacketSize;

 RMuint16 EncoderOptions;

 RMuint8 BitsPerSample;

 RMuint8 WMAProValidBitsPerSample;

 RMuint16 WMAProChannelMask;

 RMuint8 WMAProVersionNumber;

 enum OutputDualMode_type OutputDualMode;

 enum OutputSpdif_type OutputSpdif;

 enum WmaproOutputChannels_type OutputChannels;

 enum AudioOutputSurround20_type OutputSurround20;

 RMbool ValidDownMixCoef;

 RMuint32x64 DownMixCoef;

 enum WmaproDynamicRangeControl_type DynamicRangeControl;

 RMint32x5 DrcCoef;

 RMuint32 BassMode;
};


struct AudioDecoder_AudioPostProcessingInfo_type {

 RMuint32 dataReady;
};


struct AudioDecoder_AudioPostProcessingBuffer_type {

 RMuint32 frameSize;

 RMuint32 inputChCfg;

 RMuint32* tmpBufAddr;
};


struct AudioDecoder_MixerWeight_type {

 RMuint32 MixerValue_ch0;

 RMuint32 MixerValue_ch1;

 RMuint32 MixerValue_ch2;

 RMuint32 MixerValue_ch3;

 RMuint32 MixerValue_ch4;

 RMuint32 MixerValue_ch5;

 RMuint32 MixerValue_ch6;

 RMuint32 MixerValue_ch7;
};


struct AudioDecoder_OpenX_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 MaxChannelOutCount;

 RMuint32 PCMLineCount;

 RMuint32 XtaskInbandFIFOCount;

 RMuint32 STCId;

 RMuint32 XtaskId;

 RMuint32 OutputSamplesProtectedAddress;

 RMuint32 OutputSamplesProtectedSize;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;
};


struct AudioDecoder_SynchroniseAudioWithDisplayPTS_type {

 RMuint32 ModuleID;

 RMbool Enable;
};


struct AudioDecoder_AudioPlayTime_type {

 enum AudioPlayMode_type PlayMode;

 RMuint64 PlayStartPTS;

 RMuint64 PlayEndPTS;
};


struct AudioDecoder_AudioBDJPanning_type {

 RMuint32 src;

 RMint32 x;

 RMint32 y;
};


struct AudioDecoder_AudioBDJGain_type {

 RMuint32 src;

 RMint32 gain;
};


struct AudioDecoder_AudioControlPCMX_type {

 RMint32 control_pcmx0;

 RMint32 control_pcmx1;

 RMint32 control_pcmx2;

 RMint32 control_pcmx3;

 RMint32 control_pcmx4;

 RMint32 control_pcmx5;

 RMint32 control_pcmx6;

 RMint32 control_pcmx7;

 RMint32 control_pcmx8;
};


struct AudioCapture_Open_type {

 RMuint32 CaptureMode;

 RMuint32 Delay;

 RMuint32 SI_CONF;

 RMuint32 SerialInFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


enum AudioCapture_Capture_type {

 AudioCapture_Capture_Off = 0,

 AudioCapture_Capture_On = 1,
};


enum AudioCapture_Source_type {

 AudioCapture_Source_I2S = 0,

 AudioCapture_Source_SPDIF = 1,
};


enum AudioCapture_AudioStd_type {

 AudioCapture_AudioStd_AC3 = 0,

 AudioCapture_AudioStd_PCM = 1,

 AudioCapture_AudioStd_DTS = 2,
};


enum AudioCapture_SpdifDataType_type {

 AudioCapture_SpdifDataType_NotSpecified = 0,

 AudioCapture_SpdifDataType_PCM = 1,

 AudioCapture_SpdifDataType_Compressed = 2,
};


struct VoipCodec_Open_type {

 RMuint32 BTSInFIFOSize;

 RMuint32 BTSOutFIFOSize;

 RMuint32 DTMFCharFIFOSize;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


enum VoipCodec_Encoder_Codec_type {

 VoipCodec_Encoder_Codec_G711_LINEAR = 1,

 VoipCodec_Encoder_Codec_G711_ALAW = 2,

 VoipCodec_Encoder_Codec_G711_ULAW = 3,

 VoipCodec_Encoder_Codec_G723_1 = 4,

 VoipCodec_Encoder_Codec_G726 = 5,

 VoipCodec_Encoder_Codec_G728 = 6,

 VoipCodec_Encoder_Codec_G729 = 7,
};


enum VoipCodec_Decoder_Codec_type {

 VoipCodec_Decoder_Codec_G711_LINEAR = 1,

 VoipCodec_Decoder_Codec_G711_ALAW = 2,

 VoipCodec_Decoder_Codec_G711_ULAW = 3,

 VoipCodec_Decoder_Codec_G723_1 = 4,

 VoipCodec_Decoder_Codec_G726 = 5,

 VoipCodec_Decoder_Codec_G728 = 6,

 VoipCodec_Decoder_Codec_G729 = 7,
};


enum VoipCodec_Command_type {

 VoipCodec_Command_Capture_Start = 1,

 VoipCodec_Command_Capture_Stop = 2,

 VoipCodec_Command_Playback_Start = 3,

 VoipCodec_Command_Playback_Stop = 4,

 VoipCodec_Command_Encoder_Init = 5,

 VoipCodec_Command_Encoder_Start = 6,

 VoipCodec_Command_Encoder_Stop = 7,

 VoipCodec_Command_Encoder_Vad_Init = 8,

 VoipCodec_Command_Encoder_Vad_Start = 9,

 VoipCodec_Command_Encoder_Vad_Stop = 10,

 VoipCodec_Command_Decoder_Init = 11,

 VoipCodec_Command_Decoder_Start = 12,

 VoipCodec_Command_Decoder_Stop = 13,

 VoipCodec_Command_Aec_Init = 14,

 VoipCodec_Command_Aec_Reset = 15,

 VoipCodec_Command_Aec_Start = 16,

 VoipCodec_Command_Aec_Stop = 17,

 VoipCodec_Command_NlpCng_Init = 18,

 VoipCodec_Command_NlpCng_Start = 19,

 VoipCodec_Command_NlpCng_Stop = 20,

 VoipCodec_Command_ToneGen_Init = 21,

 VoipCodec_Command_ToneGen_Reset = 22,

 VoipCodec_Command_ToneGen_Start = 23,

 VoipCodec_Command_ToneGen_Stop = 24,

 VoipCodec_Command_DTMF_Init = 25,

 VoipCodec_Command_DTMF_Start = 26,

 VoipCodec_Command_DTMF_Stop = 27,

 VoipCodec_Command_AecTdd_Init = 28,

 VoipCodec_Command_AecTdd_Start = 29,

 VoipCodec_Command_AecTdd_Stop = 30,

 VoipCodec_Command_Cid_Init = 31,

 VoipCodec_Command_Cid_Reset = 32,

 VoipCodec_Command_Cid_Start = 33,

 VoipCodec_Command_Cid_Stop = 34,
};


enum VoipCodec_Capture_type {

 VoipCodec_Capture_Disabled = 0,

 VoipCodec_Capture_Enabled = 1,
};


enum VoipCodec_Playback_type {

 VoipCodec_Playback_Disabled = 0,

 VoipCodec_Playback_Enabled = 1,
};


enum VoipCodec_CoderState_type {

 VoipCodec_CoderState_Uninitialized = 0,

 VoipCodec_CoderState_Error = 1,

 VoipCodec_CoderState_StopPending = 2,

 VoipCodec_CoderState_Stopped = 3,

 VoipCodec_CoderState_PlayPending = 4,

 VoipCodec_CoderState_Playing = 5,
};


enum VoipCodec_CoderVadState_type {

 VoipCodec_CoderVadState_Uninitialized = 0,

 VoipCodec_CoderVadState_Error = 1,

 VoipCodec_CoderVadState_StopPending = 2,

 VoipCodec_CoderVadState_Stopped = 3,

 VoipCodec_CoderVadState_PlayPending = 4,

 VoipCodec_CoderVadState_Playing = 5,
};


enum VoipCodec_DecoderState_type {

 VoipCodec_DecoderState_Uninitialized = 0,

 VoipCodec_DecoderState_Error = 1,

 VoipCodec_DecoderState_StopPending = 2,

 VoipCodec_DecoderState_Stopped = 3,

 VoipCodec_DecoderState_PlayPending = 4,

 VoipCodec_DecoderState_Playing = 5,
};


enum VoipCodec_ToneGeneratorState_type {

 VoipCodec_ToneGeneratorState_Uninitialized = 0,

 VoipCodec_ToneGeneratorState_Error = 1,

 VoipCodec_ToneGeneratorState_StopPending = 2,

 VoipCodec_ToneGeneratorState_Stopped = 3,

 VoipCodec_ToneGeneratorState_PlayPending = 4,

 VoipCodec_ToneGeneratorState_Playing = 5,
};


enum VoipCodec_CidGeneratorState_type {

 VoipCodec_CidGeneratorState_Uninitialized = 0,

 VoipCodec_CidGeneratorState_Error = 1,

 VoipCodec_CidGeneratorState_StopPending = 2,

 VoipCodec_CidGeneratorState_Stopped = 3,

 VoipCodec_CidGeneratorState_PlayPending = 4,

 VoipCodec_CidGeneratorState_Playing = 5,
};


enum VoipCodec_AecState_type {

 VoipCodec_AecState_Uninitialized = 0,

 VoipCodec_AecState_Error = 1,

 VoipCodec_AecState_StopPending = 2,

 VoipCodec_AecState_Stopped = 3,

 VoipCodec_AecState_PlayPending = 4,

 VoipCodec_AecState_Playing = 5,
};


enum VoipCodec_DTMFState_type {

 VoipCodec_DTMFState_Uninitialized = 0,

 VoipCodec_DTMFState_Error = 1,

 VoipCodec_DTMFState_StopPending = 2,

 VoipCodec_DTMFState_Stopped = 3,

 VoipCodec_DTMFState_PlayPending = 4,

 VoipCodec_DTMFState_Playing = 5,
};


enum VoipCodec_AecTddState_type {

 VoipCodec_AecTddState_Uninitialized = 0,

 VoipCodec_AecTddState_Error = 1,

 VoipCodec_AecTddState_StopPending = 2,

 VoipCodec_AecTddState_Stopped = 3,

 VoipCodec_AecTddState_PlayPending = 4,

 VoipCodec_AecTddState_Playing = 5,
};


enum VoipCodec_NlpCngState_type {

 VoipCodec_NlpCngState_Uninitialized = 0,

 VoipCodec_NlpCngState_Error = 1,

 VoipCodec_NlpCngState_StopPending = 2,

 VoipCodec_NlpCngState_Stopped = 3,

 VoipCodec_NlpCngState_PlayPending = 4,

 VoipCodec_NlpCngState_Playing = 5,
};


struct CRCDecoder_Open_type {

 RMuint32 SlowCycle;

 RMuint32 UcodeChunkSize;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


enum CRCDecoder_Command_type {

 CRCDecoder_Command_Play,

 CRCDecoder_Command_Pause,

 CRCDecoder_Command_Flush,
};


enum CRCDecoder_State_type {

 CRCDecoder_State_Playing,

 CRCDecoder_State_Flushing,

 CRCDecoder_State_Flushed,

 CRCDecoder_State_Pausing,
};


struct XCRCDecoder_Open_type {

 RMuint32 SlowCycle;

 RMuint32 UcodeChunkSize;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


enum XCRCDecoder_Command_type {

 XCRCDecoder_Command_Play,

 XCRCDecoder_Command_Pause,

 XCRCDecoder_Command_Flush,
};


enum XCRCDecoder_State_type {

 XCRCDecoder_State_Playing,

 XCRCDecoder_State_Flushing,

 XCRCDecoder_State_Flushed,

 XCRCDecoder_State_Pausing,
};


struct StreamCapture_Open_type {

 RMuint32 SpiChannel;

 RMbool SerialSpi;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


enum StreamCapture_Command_type {

 StreamCapture_Command_Play,

 StreamCapture_Command_Pause,

 StreamCapture_Command_Flush,
};


enum StreamCapture_State_type {

 StreamCapture_State_Playing,

 StreamCapture_State_Flushing,

 StreamCapture_State_Flushed,

 StreamCapture_State_Pausing,
};


struct RawDataTransfer_Open_type {

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


struct RawDataTransfer_ProgramLinearTransfer_type {

 enum RawDataTransferDirection Direction;

 RMuint32 Address;

 RMuint32 Size;
};


struct RawDataTransfer_ProgramRectangleTransfer_type {

 enum RawDataTransferDirection Direction;

 RMuint32 Address;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 TotalWidth;

 RMbool Tiled;
};


struct I2C_DeviceParams_type {

 RMuint8 PioClock;

 RMuint8 PioData;

 RMuint8 WrAddr;

 RMuint8 RdAddr;

 RMuint32 DelayUs;
};


struct I2C_WriteRMuint8_type {

 RMuint8 SubAddr;

 RMuint8 Data;
};


struct I2C_WriteData_type {

 RMbool UseSubAddr;

 RMuint8 SubAddr;

 RMuint32 DataSize;

 RMuint8 Data[256];
};


struct I2C_SelectSegment_type {

 RMuint8 SegmentPtr;

 RMuint8 Segment;
};


struct GFXEngine_Open_type {

 RMuint32 CommandFIFOCount;

 RMuint32 Priority;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;
};


struct GFXEngine_Correction_type {

 enum gfx_surface_id SurfaceID;

 enum gfx_correction_mode AlphaCorrect;

 enum gfx_correction_mode ColorCorrect;
};


struct GFXEngine_ColorFormat_type {

 enum gfx_surface_id SurfaceID;

 enum EMhwlibColorMode MainMode;

 enum EMhwlibColorFormat SubMode;

 enum EMhwlibSamplingMode SamplingMode;

 enum EMhwlibColorSpace ColorSpace;
};


struct GFXEngine_AlphaFormat_type {

 enum gfx_alpha_format AlphaFormat;
};


struct GFXEngine_Surface_type {

 enum gfx_surface_id SurfaceID;

 RMuint32 TotalWidth;

 RMbool Tiled;

 RMuint32 StartAddress;

 RMuint32 ChromaStartAddress;

 RMuint32 ChromaTotalWidth;
};


struct GFXEngine_BCS_type {

 enum gfx_surface_id SurfaceID;

 RMint32 Brightness;

 RMuint32 Contrast;

 RMuint32 SaturationCb;

 RMuint32 SaturationCr;
};


struct GFXEngine_FillRectangle_type {

 RMuint32 X;

 RMuint32 Y;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Color;
};


struct GFXEngine_BlendRectangles_type {

 RMuint32 Src1X;

 RMuint32 Src1Y;

 RMuint32 Src2X;

 RMuint32 Src2Y;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 Width;

 RMuint32 Height;

 RMbool SaturateAlpha;
};


struct GFXEngine_BlendGradient_type {

 RMuint32 Src2X;

 RMuint32 Src2Y;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 Width;

 RMuint32 Height;

 RMbool SaturateAlpha;
};


struct GFXEngine_RasterBlendGradient_type {

 RMuint32 Src2X;

 RMuint32 Src2Y;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 RasterOp;
};


struct GFXEngine_RasterBlendRectangles_type {

 RMuint32 Src1X;

 RMuint32 Src1Y;

 RMuint32 Src2X;

 RMuint32 Src2Y;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 RasterOp;
};


struct GFXEngine_SingleColorBlendRectangles_type {

 RMuint32 SrcX;

 RMuint32 SrcY;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Color;

 RMbool SaturateAlpha;
};


struct GFXEngine_BlendAndScaleRectangles_type {

 RMuint32 Src1X;

 RMuint32 Src1Y;

 RMuint32 Src2X;

 RMuint32 Src2Y;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 SrcWidth;

 RMuint32 SrcHeight;

 RMuint32 DstWidth;

 RMuint32 DstHeight;

 RMbool SaturateAlpha;
};


struct GFXEngine_Blend_type {

 RMuint32 Src1X;

 RMuint32 Src1Y;

 RMuint32 Src1Width;

 RMuint32 Src1Height;

 enum gfx_input_type Src1Input;

 RMuint32 Src2X;

 RMuint32 Src2Y;

 RMuint32 Src2Width;

 RMuint32 Src2Height;

 enum gfx_input_type Src2Input;

 RMuint32 DstX;

 RMuint32 DstY;

 RMuint32 DstWidth;

 RMuint32 DstHeight;

 RMbool SaturateAlpha;

 enum gfx_blend_mode BlendMode;

 RMuint32 Color;
};


struct GFXEngine_DisplayPicture_type {

 RMuint32 Surface;

 RMuint32 Picture;

 RMuint64 Pts;
};


struct GFXEngine_LinearGradientSurface_type {

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Color0;

 RMuint32 Color1;

 RMuint32 Weave;
};


struct GFXEngine_RadialGradientSurface_type {

 RMuint32 IntRadius;

 RMuint32 ExtRadius;

 RMuint32 Color0;

 RMuint32 Color1;

 RMuint32 CenterX;

 RMuint32 CenterY;

 RMbool TransparentInt;

 RMbool TransparentExt;

 RMuint32 Weave;
};


struct GFXEngine_Palette_1BPP_type {

 enum gfx_surface_id SurfaceID;

 RMpalette_1BPP Palette;
};


struct GFXEngine_Palette_2BPP_type {

 enum gfx_surface_id SurfaceID;

 RMpalette_2BPP Palette;
};


struct GFXEngine_Palette_4BPP_type {

 enum gfx_surface_id SurfaceID;

 RMpalette_4BPP Palette;
};


struct GFXEngine_Palette_8BPP_type {

 enum gfx_surface_id SurfaceID;

 RMpalette_8BPP Palette;
};


struct GFXEngine_KeyColor_type {

 enum gfx_surface_id SurfaceID;

 RMuint32 Color;

 RMuint8 Range;
};


struct GFXEngine_FieldType_type {

 enum gfx_surface_id SurfaceID;

 enum EMhwlibFieldType FieldType;

 RMint32 LineSkipFactor;
};


struct GFXEngine_NonlinearScale_type {

 enum gfx_surface_id SurfaceID;

 RMuint32 Level;

 RMuint32 Width;

 RMuint32 PARQuotient;
};


struct GFXEngine_GlyphMask_type {

 RMuint32 GlyphAddr;

 RMuint32 Size;

 RMuint32 OutAddr;

 RMuint32 ScaleFactor;

 RMint16 XMax;

 RMint16 XMin;

 RMint16 YMax;

 RMint16 YMin;
};


struct GFXEngine_GlyphScaleMatrix_type {

 RMuint16 XScale;

 RMuint16 YScale;

 RMuint16 XYScale;

 RMuint16 YXScale;

 RMint16 YOffset;

 RMint16 XOffset;
};


struct GFXEngine_LPFThresholds_type {

 enum gfx_surface_id SurfaceID;

 RMuint32 Threshold0;

 RMuint32 Threshold1;

 RMuint32 Threshold2;

 RMbool Discard;
};


struct GFXEngine_PictureBufferAddress_type {

 RMuint32 Surface;

 RMuint32 Y_addr;
};


struct GFXEngine_AlphaPalette_type {

 enum gfx_surface_id SurfaceID;

 RMuint8 Alpha0;

 RMuint8 Alpha1;

 RMuint8 Alpha2;

 RMuint8 Alpha3;
};


struct MM_MemoryArea_type {

 RMuint32 Address;

 RMuint32 Size;
};


struct MM_TopRemovableArea_type {

 RMuint32 Address;

 RMuint32 Size;
};


struct MM_Stats_type {

 RMuint32 TotalMallocCount;

 RMuint32 TotalFreeCount;

 RMint32 TotalBytesUsed;

 RMint32 MaximumBytesUsed;
};


struct SpuDecoder_Open_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;

 RMuint32 DemuxProgramId;
};


enum SpuDecoder_Command_type {

 SpuDecoder_Command_Uninit,

 SpuDecoder_Command_Init,

 SpuDecoder_Command_Stop,

 SpuDecoder_Command_Play,
};


enum SpuDecoder_State_type {

 SpuDecoder_State_Uninitialized,

 SpuDecoder_State_UninitPending,

 SpuDecoder_State_InitPending,

 SpuDecoder_State_Stopped,

 SpuDecoder_State_StopPending,

 SpuDecoder_State_Playing,

 SpuDecoder_State_PlayPending,
};


struct SpuDecoder_Palette_type {

 RMuint8 LUT[16*4];
};


enum SpuDecoder_StreamType_type {

 SpuDecoder_StreamType_4by3 = 0,

 SpuDecoder_StreamType_Wide,

 SpuDecoder_StreamType_Letterbox,

 SpuDecoder_StreamType_PanScan,
};


struct SpuDecoder_Hilight_type {

 RMuint16 leftb;

 RMuint16 topb;

 RMuint16 rightb;

 RMuint16 bottomb;

 RMuint16 color;

 RMuint16 contrast;

 RMbool on;

 RMuint64 pts;
};


struct SpuDecoder_BDRLECommand_type {

 RMuint32 command;

 RMuint32 parameter1;

 RMuint32 parameter2;
};


struct SpuDecoder_BDRLEBatchCommand_type {

 struct SpuDecoder_BDRLECommands commands;
};


struct SpuDecoder_OpenX_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 DecoderDataSize;

 RMuint32 DecoderContextSize;

 RMuint32 ExtraPictureBufferCount;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 XtaskInbandFIFOCount;

 RMuint32 STCId;

 RMuint32 XtaskId;

 RMuint32 PictureProtectedAddress;

 RMuint32 PictureProtectedSize;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;

 RMuint32 HilightCount;
};


struct PictureTransform_Open_type {

 RMuint32 InputSurface;

 enum EMhwlibPictureTransformType TransformType;

 RMbool InPlace;

 RMuint32 STCId;

 RMuint32 InbandFIFOCount;

 RMuint32 DecoderDataAddress;

 RMuint32 DecoderInterfaceAddress;

 RMuint32 DecoderDataSize;

 RMuint32 DecoderInterfaceSize;
};


enum PictureTransform_Command_type {

 PictureTransform_Command_Uninit,

 PictureTransform_Command_Init,

 PictureTransform_Command_Stop,

 PictureTransform_Command_Play,
};


enum PictureTransform_State_type {

 PictureTransform_State_Uninitialized,

 PictureTransform_State_UninitPending,

 PictureTransform_State_InitPending,

 PictureTransform_State_Stopped,

 PictureTransform_State_StopPending,

 PictureTransform_State_Playing,

 PictureTransform_State_PlayPending,
};


struct ClosedCaptionDecoder_DRAMSize_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct ClosedCaptionDecoder_Open_type {

 RMuint32 CachedAddress;

 RMuint32 CachedSize;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;

 RMuint32 ModuleNumber;

 RMuint32 OSDAddress;

 RMuint32 OSDWidth;

 RMuint32 OSDHeight;

 RMuint32 OSDVisiblePartX;

 RMuint32 OSDVisiblePartY;

 RMuint32 OSDColorDepth;
};


struct ClosedCaptionDecoder_FeedDecoder_type {

 RMuint8 Data[0x100];

 RMuint32 Size;
};


struct RTC_Alarm_type {

 RMuint32 EventID;

 RMuint32 Delay;
};


struct Cipher_RC4_KeySetup_type {

 RMRC4Key key;

 RMuint32 size;
};


struct STC_Open_type {

 enum Master_type master;

 RMuint32 stc_timer_id;

 RMuint32 stc_time_resolution;

 RMuint32 video_timer_id;

 RMuint32 video_time_resolution;

 RMint32 video_offset;

 RMuint32 audio_timer_id;

 RMuint32 audio_time_resolution;

 RMint32 audio_offset;
};


struct STC_VideoOffset_type {

 RMuint32 time_resolution;

 RMint32 time;
};


struct STC_AudioOffset_type {

 RMuint32 time_resolution;

 RMint32 time;
};


struct STC_Time_type {

 RMuint32 time_resolution;

 RMuint64 time;
};


struct STC_Speed_type {

 RMint32 nominator;

 RMuint32 denominator;

 enum StcFilter_type stc_filter;

 enum CorrectionMethod_type stc_correction_method;

 enum CorrectionMethod_type video_correction_method;

 enum CorrectionMethod_type audio_correction_method;
};


struct STC_Discontinuity_type {

 RMuint32 time_resolution;

 RMuint64 time;
};


struct STC_StcInfo_type {

 RMuint32 status;

 enum Master_type master;

 RMuint32 stc_timer_id;

 RMuint32 stc_time_resolution;

 RMuint32 video_timer_id;

 RMuint32 video_time_resolution;

 RMint32 video_offset;

 RMuint32 audio_timer_id;

 RMuint32 audio_time_resolution;

 RMint32 audio_offset;
};


struct PLL_PLL_type {

 enum PLLGen PLL;

 RMuint32 MaxM;

 RMuint32 Frequency0;

 RMuint32 Frequency1;

 RMuint32 Frequency2;
};


struct PLL_PLLUsage_type {

 enum PLLGen PLL;

 RMuint32 MaxM;

 RMuint32 Frequency0;

 RMuint32 Frequency1;

 RMuint32 Frequency2;
};


struct PLL_CD_type {

 enum PLLGen PLL;

 RMuint32 Frequency;
};


struct PLL_CDUsage_type {

 enum PLLGen PLL;

 RMuint32 Frequency;
};


struct PLL_PLLSource_type {

 enum PLLGen PLL;

 enum PLLSource ClockSource;
};


struct PLL_SourceFrequency_type {

 enum PLLSource ClockSource;

 RMuint32 Frequency;
};


struct PLL_RouteClockFromPLL_type {

 enum PLLGen PLL;

 enum PLLOut PLLOutput;

 enum ClockSignal Clock;
};


struct PLL_RouteClockFromSource_type {

 enum PLLSource ClockSource;

 enum ClockSignal Clock;
};


struct PLL_Frequency_type {

 enum PLLGen PLL;

 enum PLLOut PLLOutput;

 RMuint32 MaxM;

 enum ClockSignal Clock;

 RMuint32 Frequency;
};


struct PLL_CounterSource_type {

 enum ClockCounter Counter;

 enum ClockCounterSource Source;
};


struct PLL_Counter_type {

 enum ClockCounter Counter;

 enum ClockCounterSource Source;

 RMuint32 Ticks;
};


struct PLL_BootirqSettings_type {

 RMuint32 SYS_cleandiv8_div_val;

 RMuint32 SYS_cleandiv8_ctrl_val;

 RMuint32 SYS_cleandiv9_div_val;

 RMuint32 SYS_cleandiv9_ctrl_val;

 RMuint32 SYS_cleandiv10_div_val;

 RMuint32 SYS_cleandiv10_ctrl_val;

 RMuint32 SYS_clkgen1_pll_val;

 RMuint32 SYS_clkgen1_div_val;

 RMuint32 SYS_sysclk_premux_val;

 RMuint32 SYS_avclk_mux_val;
};


struct DemuxCipher_Open_type {

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;

 RMuint32 bufferCount;
};


struct DemuxCipher_DemuxInterface_type {

 RMuint32 fifoWrPtr;

 RMuint32 fifoRdPtr;

 RMuint32 errStatus;
};


struct DemuxCipher_AESCipherEntry_type {

 RMuint32 index;

 enum EMhwlibAESCipherMode mode;

 RMuint32 key_size;

 RMuint32 block_size;

 enum EMhwlibAESEncryptedPacketFormat encrypted_packet_format;
};


struct DemuxCipher_FreeKeyEntry_type {

 enum EMhwlibCipher cipher_type;

 RMuint32 key_index;
};


struct DemuxCipher_OutbandKeyChange_type {

 enum EMhwlibCipher cipher_type;

 RMuint32 cipher_index;

 RMuint32 key_index;

 enum EMhwlibScramblingBits scrambling;
};


struct DemuxTask_Open_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 InputPort;

 RMuint32 PrimaryMPM;

 RMuint32 SecondaryMPM;

 RMuint32 InbandFIFOCount;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;
};


struct DemuxTask_OpenX_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 InputPort;

 RMuint32 PrimaryMPM;

 RMuint32 SecondaryMPM;

 RMuint32 InbandFIFOCount;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;

 RMuint32 XTaskModuleId;

 RMuint32 XTaskContext;

 RMuint32 XTaskInbandFIFOCount;
};


struct DemuxTask_AvailableResourcesInfo_type {

 RMuint32 pid_count;

 RMuint32 section_count;

 RMuint32 cipher_count;

 RMuint32 AES_key_count;

 RMuint32 DES_key_count;

 RMuint32 DVBCSA_key_count;

 RMuint32 Multi2_key_count;

 RMuint32 C2_key_count;

 RMuint32 DVD_key_count;
};


enum DemuxTask_Command_type {

 DemuxTask_Command_Play,

 DemuxTask_Command_Pause,

 DemuxTask_Command_Stop,
};


enum DemuxTask_State_type {

 DemuxTask_State_Playing,

 DemuxTask_State_Paused,

 DemuxTask_State_Stopped,

 DemuxTask_State_PlayPending,

 DemuxTask_State_PausePending,

 DemuxTask_State_StopPending,
};


struct DemuxTask_InputParameters_type {

 enum DemuxSpiType Spi;

 enum DemuxSourceType SourceType;
};


struct DemuxTask_ConnectOutput_type {

 RMuint32 output_index;

 RMuint32 stc_module_id;
};


struct DemuxTask_AuxiliaryInfoValue_type {

 RMuint32 InfoIndex;

 RMuint32 InfoValue;
};


struct DemuxTask_Encryption_type {

 enum EncryptionType Type;

 RMuint8x32 Key;

 RMuint8x32 IV;
};


struct DemuxTask_PesEntry_type {

 RMuint32 index;

 struct EMhwlibPesEntry_type PesEntry;
};


struct DemuxTask_MatchSectionEntry_type {

 RMuint32 Index;

 struct PSFMatchSection_type SectionEntry;
};


struct DemuxTask_PidEntry_type {

 RMuint32 index;

 struct EMhwlibPidEntry_type PidEntry;
};


struct DemuxTask_PidEntryAddCipher_type {

 RMuint32 index;

 RMuint32 pid_cipher_index;

 RMuint32 cipher_index;
};


struct DemuxTask_PidEntryRemoveCipher_type {

 RMuint32 index;

 RMuint32 pid_cipher_index;
};


struct DemuxTask_PcrDiscontinuity_type {

 RMuint32 threshold;

 RMuint32 time_resolution;
};


struct DemuxTask_OutputThreshold_type {

 RMuint32 output_index;

 RMbool partial_read;

 RMuint32 threshold;
};


struct DemuxTask_OutputTimerSync_type {

 RMuint32 output_index;

 enum EMhwlibTimerSync timer_sync;
};


struct DemuxTask_PreprocessCipher_type {

 RMuint32 cipher_index;

 RMbool enable;
};


struct DemuxTask_DESCipherEntry_type {

 RMuint32 index;

 enum EMhwlibDESCipherMode mode;

 enum EMhwlibDESEncryptedPacketFormat encrypted_packet_format;
};


struct DemuxTask_TDESCipherEntry_type {

 RMuint32 index;

 enum EMhwlibDESCipherMode mode;

 enum EMhwlibDESEncryptedPacketFormat encrypted_packet_format;
};


struct DemuxTask_AESCipherEntry_type {

 RMuint32 index;

 enum EMhwlibAESCipherMode mode;

 RMuint32 key_size;

 RMuint32 block_size;

 enum EMhwlibAESEncryptedPacketFormat encrypted_packet_format;
};


struct DemuxTask_RC4CipherEntry_type {

 RMuint32 index;

 RMuint32 key_size;
};


struct DemuxTask_DVBCSACipherEntry_type {

 RMuint32 index;
};


struct DemuxTask_Multi2CipherEntry_type {

 RMuint32 index;

 enum EMhwlibMulti2CipherMode mode;

 RMuint32 round_value;
};


struct DemuxTask_C2CipherEntry_type {

 RMuint32 index;

 enum EMhwlibC2CipherMode mode;
};


struct DemuxTask_DVDCSSCipherEntry_type {

 RMuint32 index;
};


struct DemuxTask_OutbandKeyChange_type {

 enum EMhwlibCipher cipher_type;

 RMuint32 cipher_index;

 RMuint32 key_index;

 enum EMhwlibScramblingBits scrambling;
};


struct DemuxTask_FreeKeyEntry_type {

 enum EMhwlibCipher cipher_type;

 RMuint32 key_index;
};


struct DemuxTask_InbandKeyChange_type {

 RMuint32 cipher_index;

 RMuint32 key_index;

 enum EMhwlibScramblingBits scrambling;

 enum EMhwlibInbandOffset offset_control;

 RMuint32 offset_value;
};


struct DemuxTask_DESKey_type {

 RMuint32 key_index;

 RMuint8x8 key;

 RMuint8x8 iv;
};


struct DemuxTask_TDESKey_type {

 RMuint32 key_index;

 RMuint8x8 key1;

 RMuint8x8 key2;

 RMuint8x8 key3;

 RMuint8x8 iv;
};


struct DemuxTask_AESKey_type {

 RMuint32 key_index;

 RMuint32 key_size;

 RMuint8x32 key;

 RMuint8x32 iv;
};


struct DemuxTask_RC4Key_type {

 RMuint32 key_index;

 RMuint8x32 key;
};


struct DemuxTask_DVBCSAKey_type {

 RMuint32 key_index;

 RMuint8x8 key;
};


struct DemuxTask_Multi2Key_type {

 RMuint32 key_index;

 RMuint8x32 system_key;

 RMuint8x8 data_key;

 RMuint8x8 iv;
};


struct DemuxTask_C2Key_type {

 RMuint32 key_index;

 RMuint8x6 key;
};


struct DemuxTask_FirstPcrOrPtsDetection_type {

 RMuint32 wait_for_pcr_time;

 RMuint32 pts_taken_as_pcr_offset;
};


struct DemuxTask_PidEntryRecipher_type {

 RMuint32 index;

 RMbool enable;
};


struct DemuxTask_RecipherOptions_type {

 RMuint32 cipher_index;

 enum EMhwlibRecipherMode mode;

 RMuint32 scrambling_bits;
};


struct DemuxOutput_Open_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 demux_task_module_id;

 RMuint32 stc_module_id;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;
};


struct DemuxOutput_OpenX_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 demux_task_module_id;

 RMuint32 stc_module_id;

 RMuint32 BitstreamProtectedAddress;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedAddress;

 RMuint32 UnprotectedSize;

 RMuint32 XtaskModuleId;

 RMuint32 XtaskContext;

 RMuint32 XtaskInbandFIFOCount;
};


struct DemuxOutput_Connect_type {

 RMuint32 demux_task_module_id;

 RMuint32 consumer_module_id;
};


struct DemuxOutput_Disconnect_type {

 RMuint32 demux_task_module_id;

 RMuint32 consumer_module_id;
};


struct DemuxOutput_Cipher_type {

 RMuint32 cipher_index;

 RMbool enable;

 RMbool in_place;
};


struct DemuxOutput_Pts45kFifoEntry_type {

 RMuint32 pts;

 RMuint32 byte_counter;
};


struct CCFifo_Open_type {

 RMuint32 EntryCount;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;

 RMuint32 STCModuleId;
};


struct CCFifo_AllowedTypes_type {

 RMbool Allow608;

 RMbool Allow708;
};


struct CCFifo_CCEntry_type {

 RMbool Enable;

 RMbool PtsEnable;

 enum EMhwlibCCType Type;

 RMuint64 Pts;

 RMuint8 CC1;

 RMuint8 CC2;
};


struct DispVideoPlane_Transparency_type {

 RMbool Y_255;

 RMbool Y_0;
};


struct DispHDSDConverter_Open_type {

 struct EMhwlibTVFormatAnalog SDFormat;

 RMuint32 BufferAddress;

 RMuint32 BufferSize;
};


struct DispHDSDConverter_OpenX_type {

 struct EMhwlibGenericTVFormat HDFormat;

 struct EMhwlibGenericTVFormat SDFormat;

 RMuint32 BufferSize;

 RMuint32 BufferAddress;
};


struct DispHDSDConverter_ConversionBuffer_type {

 RMuint32 BufferAddress;

 RMuint32 BufferSize;
};


struct Sha1Sum_Open_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 XTaskModuleID;

 RMuint32 KeyIndex;

 RMuint32 ClearAddress;

 RMuint32 ClearSize;

 RMuint32 EncryptedAddress;

 RMuint32 EncryptedSize;
};


struct XTask_AddDRMTask_type {

 RMuint32 drm_task_address;

 RMuint32 data_fifo;

 RMuint32 inband_cmd_fifo;

 RMuint32 decoder_inband_cmd_fifo;

 RMuint32 key_index;

 RMuint32 soft_irq_task;
};


struct TTXFifo_Open_type {

 RMuint32 EntryCount;

 RMuint32 UncachedAddress;

 RMuint32 UncachedSize;

 RMuint32 STCModuleId;
};


struct TTXFifo_TTXEntry_type {

 RMuint32 TtxPtr;
};


struct VCXO_Speed_type {

 RMint32 N;

 RMuint32 M;
};


struct PPF_InputSurface_type {

 RMint32 Surface;

 RMuint32 Slot;
};


struct PPF_OpenOutputSurface_type {

 RMuint32 Slot;

 struct EMhwlibMemoryBlockList BlockList;
};


struct PPF_TriggerEvent_type {

 RMint32 ModuleID;

 RMuint32 Mask;
};


struct SystemBlock_QueryGPIO_in_type {

 enum GPIOId_type Bit;
};


struct SystemBlock_QueryPWM_in_type {

 RMuint32 GeneratorNumber;
};


struct SystemBlock_DRAMSize_in_type {

 RMuint32 Controller;
};


struct DisplayBlock_SurfaceSize_in_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;
};


struct DisplayBlock_PictureSize_in_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;
};


struct DisplayBlock_InitSurface_in_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Address;

 RMuint32 LumaSize;

 RMuint32 ChromaSize;

 enum EMhwlibColorSpace ColorSpace;

 struct EMhwlibAspectRatio PixelAspectRatio;
};


struct DisplayBlock_InitPicture_in_type {

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Address;

 RMuint32 LumaSize;

 RMuint32 ChromaSize;
};


struct DisplayBlock_InitPictureX_in_type {

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Address;

 RMuint32 LumaSize;

 RMuint32 ChromaSize;

 RMuint32 PaletteSize;
};


struct DispVideoInput_DRAMSize_in_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 NumBuffer;
};


struct DispGraphicInput_DRAMSize_in_type {

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 NumBuffer;
};


struct DispDigitalOut_QueryPadsControl_in_type {

 RMuint32 APIVersion;
};


struct DemuxEngine_MicrocodeDRAMSize_in_type {

 RMuint32 MicrocodeVersion;
};


struct DemuxEngine_PidUsage_in_type {

 RMuint32 pid_value;

 RMuint32 channel;
};


struct MpegEngine_MicrocodeDRAMSize_in_type {

 RMuint32 MicrocodeVersion;
};


struct VideoDecoder_DRAMSize_in_type {

 enum MPEG_Profile MPEGProfile;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;
};


struct VideoDecoder_DecoderDataMemory_in_type {

 enum EMhwlibVideoCodec Codec;

 RMuint32 Profile;

 RMuint32 Level;

 RMint32 ExtraPictureBufferCount;

 RMuint32 MaxWidth;

 RMuint32 MaxHeight;
};


struct VideoDecoder_DRAMSizeX_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 UserDataSize;

 RMuint32 DecoderDataSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 XtaskInbandFIFOCount;
};


struct AudioEngine_MicrocodeDRAMSize_in_type {

 RMuint32 MicrocodeVersion;
};


struct AudioEngine_QueryVolume_in_type {

 RMuint32 Channel;
};


struct AudioEngine_DecoderSharedMemoryInfo_in_type {

 RMuint32 Reserved1;

 RMuint32 Reserved2;
};


struct AudioDecoder_DRAMSize_in_type {

 RMuint32 MaxChannelOutCount;

 RMuint32 PCMLineCount;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;
};


struct AudioDecoder_DRAMSizePCMX_in_type {

 RMuint32 BitstreamFIFOSize0;

 RMuint32 XferFIFOCount0;

 RMuint32 BitstreamFIFOSize1;

 RMuint32 XferFIFOCount1;

 RMuint32 BitstreamFIFOSize2;

 RMuint32 XferFIFOCount2;

 RMuint32 BitstreamFIFOSize3;

 RMuint32 XferFIFOCount3;

 RMuint32 BitstreamFIFOSize4;

 RMuint32 XferFIFOCount4;

 RMuint32 BitstreamFIFOSize5;

 RMuint32 XferFIFOCount5;

 RMuint32 BitstreamFIFOSize6;

 RMuint32 XferFIFOCount6;

 RMuint32 BitstreamFIFOSize7;

 RMuint32 XferFIFOCount7;

 RMuint32 BitstreamFIFOSize8;

 RMuint32 XferFIFOCount8;
};


struct AudioDecoder_DRAMSizeX_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 MaxChannelOutCount;

 RMuint32 PCMLineCount;

 RMuint32 XtaskInbandFIFOCount;
};


struct AudioCapture_DRAMSize_in_type {

 RMuint32 SerialInFIFOSize;

 RMuint32 XferFIFOCount;
};


struct VoipCodec_DRAMSize_in_type {

 RMuint32 BTSInFIFOSize;

 RMuint32 BTSOutFIFOSize;

 RMuint32 DTMFCharFIFOSize;
};


struct VoipCodec_WriteChunk_in_type {

 struct VoipChunk Chunk;
};


struct VoipCodec_ReadChunk_in_type {

 RMuint32 Size;
};


struct CRCDecoder_DRAMSize_in_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;
};


struct XCRCDecoder_DRAMSize_in_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;
};


struct StreamCapture_DRAMSize_in_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;
};


struct RawDataTransfer_DRAMSize_in_type {

 RMuint32 XferFIFOCount;
};


struct I2C_QueryRMuint8_in_type {

 RMuint8 SubAddr;
};


struct I2C_QueryData_in_type {

 RMbool UseSubAddr;

 RMuint8 SubAddr;

 RMuint32 DataSize;
};


struct GFXEngine_DRAMSize_in_type {

 RMuint32 CommandFIFOCount;
};


struct MM_Malloc_in_type {

 enum RUADramType dramtype;

 RMuint32 Size;
};


struct MM_AreaSize_in_type {

 void * Address;
};


struct SpuDecoder_DRAMSize_in_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;
};


struct SpuDecoder_DRAMSizeX_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 DecoderDataSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 XtaskInbandFIFOCount;

 RMuint32 HilightCount;
};


struct SpuDecoder_DecoderDataMemory_in_type {

 enum EMhwlibVideoCodec Codec;

 RMuint32 Profile;

 RMuint32 Level;

 RMuint32 ExtraPictureBufferCount;

 RMuint32 MaxWidth;

 RMuint32 MaxHeight;
};


struct PictureTransform_DecoderMemory_in_type {

 enum EMhwlibPictureTransformType TransformType;

 RMbool InPlace;

 RMuint32 PictureCount;

 RMuint32 PictureSize;

 RMuint32 InbandFIFOCount;
};


struct PLL_QueryPLL_in_type {

 enum PLLGen PLL;
};


struct PLL_QueryPLLNominal_in_type {

 enum PLLGen PLL;
};


struct PLL_QueryClockRoute_in_type {

 enum ClockSignal Clock;
};


struct PLL_QueryCounterFrequency_in_type {

 enum ClockCounter Counter;

 RMuint32 uSecDelay;
};


struct DemuxCipher_DRAMSize_in_type {

 RMuint32 bufferCount;
};


struct DemuxTask_DRAMSize_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 InbandFIFOCount;
};


struct DemuxTask_DRAMSizeX_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 XTaskModuleId;

 RMuint32 XTaskInbandFIFOCount;
};


struct DemuxTask_CurrentPcrInfo_in_type {

 RMuint32 time_resolution;
};


struct DemuxOutput_DRAMSize_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;
};


struct DemuxOutput_DRAMSizeX_in_type {

 RMuint32 ProtectedFlags;

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 PtsFIFOCount;

 RMuint32 InbandFIFOCount;

 RMuint32 XtaskInbandFIFOCount;
};


struct DispHDSDConverter_OnTheFlyModeParameters_in_type {

 struct EMhwlibTVFormatAnalog HDFormat;

 struct EMhwlibTVFormatAnalog SDFormat;
};


struct DispHDSDConverter_OnTheFlyModeParametersX_in_type {

 struct EMhwlibGenericTVFormat HDFormat;

 struct EMhwlibGenericTVFormat SDFormat;
};


struct DispHDSDConverter_BufferedModeParameters_in_type {

 struct EMhwlibTVFormatAnalog HDFormat;

 struct EMhwlibTVFormatAnalog SDFormat;
};


struct DispHDSDConverter_BufferedModeParametersX_in_type {

 struct EMhwlibGenericTVFormat HDFormat;

 struct EMhwlibGenericTVFormat SDFormat;
};


struct Sha1Sum_DRAMSize_in_type {

 RMuint32 BitstreamFIFOSize;

 RMuint32 XferFIFOCount;

 RMuint32 XTaskModuleID;
};


struct SystemBlock_QueryGPIO_out_type {

 RMbool Data;
};


struct SystemBlock_QueryPWM_out_type {

 RMbool Enable;

 RMuint32 Level;

 RMuint32 Log2Div;
};


struct SystemBlock_DRAMSize_out_type {

 RMuint32 Size;
};


struct DisplayBlock_SurfaceSize_out_type {

 RMuint32 BufferSize;

 RMuint32 LumaSize;

 RMuint32 ChromaSize;
};


struct DisplayBlock_PictureSize_out_type {

 RMuint32 BufferSize;

 RMuint32 LumaSize;

 RMuint32 ChromaSize;

 RMuint32 PaletteSize;
};


struct DisplayBlock_InitSurface_out_type {

 RMuint32 LumaAddress;

 RMuint32 ChromaAddress;

 RMuint32 PictureAddress;
};


struct DisplayBlock_InitPicture_out_type {

 RMuint32 LumaAddress;

 RMuint32 ChromaAddress;
};


struct DisplayBlock_InitPictureX_out_type {

 RMuint32 LumaAddress;

 RMuint32 ChromaAddress;

 RMuint32 PaletteAddress;
};


struct DisplayBlock_SurfaceInfo_out_type {

 RMuint32 Width;

 RMuint32 Height;

 enum EMhwlibColorMode ColorMode;

 enum EMhwlibColorFormat ColorFormat;

 enum EMhwlibColorSpace ColorSpace;

 enum EMhwlibSamplingMode SamplingMode;

 RMuint32 LumaAddress;

 RMuint32 ChromaAddress;
};


struct DisplayBlock_PictureInfo_out_type {

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 LumaAddress;

 RMuint32 ChromaAddress;
};


struct DispVideoInput_DRAMSize_out_type {

 RMuint32 BufferSize;
};


struct DispGraphicInput_DRAMSize_out_type {

 RMuint32 BufferSize;
};


struct DispDigitalOut_QueryPadsControl_out_type {

 RMbool InvertClock;

 RMbool DDRdout;

 RMbool InvertCaptureClock;

 RMuint32 Delay;

 RMbool VideoInputV2;

 RMbool GraphicInputV2;

 RMuint32 SCARTControl;

 RMbool PadsLoop;
};


struct DemuxEngine_MicrocodeDRAMSize_out_type {

 RMuint32 Size;
};


struct DemuxEngine_PidUsage_out_type {

 RMuint32 count;

 RMuint32x4 pid_entries;
};


struct MpegEngine_MicrocodeDRAMSize_out_type {

 RMuint32 Size;
};


struct VideoDecoder_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct VideoDecoder_DecoderDataMemory_out_type {

 RMuint32 DecoderDataSize;

 RMuint32 DecoderContextSize;

 RMuint32 DecoderSharedSize;
};


struct VideoDecoder_DRAMSizeX_out_type {

 RMuint32 PictureProtectedSize;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct AudioEngine_MicrocodeDRAMSize_out_type {

 RMuint32 Size;
};


struct AudioEngine_QueryVolume_out_type {

 RMuint32 Volume;
};


struct AudioEngine_DecoderSharedMemoryInfo_out_type {

 RMuint32 DecoderSharedSize;
};


struct AudioDecoder_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct AudioDecoder_DRAMSizePCMX_out_type {

 RMuint32 UnProtectedSize;
};


struct AudioDecoder_DRAMSizeX_out_type {

 RMuint32 OutputSamplesProtectedSize;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct AudioCapture_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct VoipCodec_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct VoipCodec_WriteChunk_out_type {

 RMuint32 WrittenSize;
};


struct VoipCodec_ReadChunk_out_type {

 struct VoipChunk Chunk;
};


struct CRCDecoder_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct XCRCDecoder_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct StreamCapture_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct RawDataTransfer_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct I2C_QueryRMuint8_out_type {

 RMuint8 Data;
};


struct I2C_QueryData_out_type {

 RMuint8 Data[256];
};


struct GFXEngine_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct GFXEngine_GlyphOutputSize_out_type {

 RMuint32 Width;

 RMuint32 Height;

 RMuint32 Pitch;
};


struct MM_Malloc_out_type {

 void * Address;
};


struct MM_AreaSize_out_type {

 RMuint32 Size;
};


struct SpuDecoder_DRAMSize_out_type {

 RMuint32 CachedSize;

 RMuint32 UncachedSize;
};


struct SpuDecoder_DRAMSizeX_out_type {

 RMuint32 PictureProtectedSize;

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct SpuDecoder_DecoderDataMemory_out_type {

 RMuint32 DecoderDataSize;

 RMuint32 DecoderContextSize;

 RMuint32 DecoderSharedSize;
};


struct PictureTransform_DecoderMemory_out_type {

 RMuint32 DecoderDataSize;

 RMuint32 DecoderInterfaceSize;

 RMuint32 DecoderSharedSize;
};


struct PLL_QueryPLL_out_type {

 RMuint32 Frequency0;

 RMuint32 Frequency1;

 RMuint32 Frequency2;
};


struct PLL_QueryPLLNominal_out_type {

 RMuint32 Frequency0;

 RMuint32 Frequency1;

 RMuint32 Frequency2;
};


struct PLL_QueryClockRoute_out_type {

 enum PLLSource ClockSource;

 enum PLLGen PLL;

 enum PLLOut PLLOutput;

 RMbool PLLCD;
};


struct PLL_QueryCounterFrequency_out_type {

 RMuint32 Frequency;
};


struct DemuxCipher_DRAMSize_out_type {

 RMuint32 UnprotectedSize;
};


struct DemuxTask_DRAMSize_out_type {

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct DemuxTask_DRAMSizeX_out_type {

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct DemuxTask_CurrentPcrInfo_out_type {

 RMuint64 pcr;

 RMuint64 stc;
};


struct DemuxOutput_DRAMSize_out_type {

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct DemuxOutput_DRAMSizeX_out_type {

 RMuint32 BitstreamProtectedSize;

 RMuint32 UnprotectedSize;
};


struct DispHDSDConverter_OnTheFlyModeParameters_out_type {

 RMuint32 DumpedLines;

 RMuint32 DelayLines;

 RMuint32 DelayPixels;
};


struct DispHDSDConverter_OnTheFlyModeParametersX_out_type {

 RMuint32 DumpedLines;

 RMuint32 DelayLines;

 RMuint32 DelayPixels;

 RMbool HDFirst;
};


struct DispHDSDConverter_BufferedModeParameters_out_type {

 RMuint32 BufferSize;
};


struct DispHDSDConverter_BufferedModeParametersX_out_type {

 RMuint32 BufferSize;
};


struct Sha1Sum_DRAMSize_out_type {

 RMuint32 EncryptedSize;

 RMuint32 ClearSize;
};

struct GFXEngineCommand {
 RMuint32 CommandID;
 union{
  struct GFXEngine_Correction_type Correction;
  struct GFXEngine_ColorFormat_type ColorFormat;
  struct GFXEngine_AlphaFormat_type AlphaFormat;
  struct GFXEngine_Surface_type Surface;
  struct GFXEngine_BCS_type BCS;
  struct GFXEngine_FillRectangle_type FillRectangle;
  struct GFXEngine_BlendRectangles_type BlendRectangles;
  struct GFXEngine_BlendGradient_type BlendGradient;
  struct GFXEngine_RasterBlendGradient_type RasterBlendGradient;
  struct GFXEngine_RasterBlendRectangles_type RasterBlendRectangles;
  struct GFXEngine_FillReplaceGradient_type ReplaceGradient;
  struct GFXEngine_FillReplaceGradient_type FillGradient;
  struct GFXEngine_SingleColorBlendRectangles_type SingleColorBlendRectangles;
  struct GFXEngine_BlendAndScaleRectangles_type BlendAndScaleRectangles;
  struct GFXEngine_MoveReplaceRectangle_type MoveRectangle;
  struct GFXEngine_MoveReplaceRectangle_type ReplaceRectangle;
  struct GFXEngine_MoveReplaceScaleRectangle_type ReplaceAndScaleRectangle;
  struct GFXEngine_MoveReplaceScaleRectangle_type MoveAndScaleRectangle;
  struct GFXEngine_DisplayPicture_type DisplayPicture;
  RMuint32 WaitForPicture;
  struct GFXEngine_LinearGradientSurface_type LinearGradientSurface;
  struct GFXEngine_RadialGradientSurface_type RadialGradientSurface;
  struct GFXEngine_KeyColor_type KeyColor;
  struct GFXEngine_FieldType_type FieldType;
  struct GFXEngine_NonlinearScale_type NonlinearScale;
  struct GFXEngine_GlyphMask_type GlyphMask;
  struct GFXEngine_GlyphScaleMatrix_type GlyphScaleMatrix;
  struct GFXEngine_LPFThresholds_type LPFThresholds;
 } Command;
};
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/rua/include/rua_property.h" 2
# 5 "/home/davidhu/svn.32M/apps/../middleware/HYHWStdarg.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h" 1
# 17 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 1
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmem86xxid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmplatform.h" 1
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmfeatures.h" 1
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmarchid.h" 1
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmcompilerid.h" 1
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmbtypes.h" 1
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmstatus.h" 1
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmpanic.h" 1
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmmacros.h" 1
# 45 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmstreamid.h" 1
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdbg.h" 1
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmmm.h" 1
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmsync.h" 1
# 49 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmpacketcommandops.h" 1
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmnonasciitype.h" 1
# 51 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmdef/rmdef.h" 2
# 18 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 1
# 25 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 1
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h"
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmem86xxid.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmplatform.h" 1
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmfeatures.h" 1
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmarchid.h" 1
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmcompilerid.h" 1
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmbtypes.h" 1
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmforbid.h" 1
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmstatus.h" 1
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmpanic.h" 1
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmmacros.h" 1
# 45 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmstreamid.h" 1
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdbg.h" 1
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmmm.h" 1
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmsync.h" 1
# 49 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmpacketcommandops.h" 1
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmnonasciitype.h" 1
# 51 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/../../rmdef/rmdef.h" 2
# 26 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h" 1
# 18 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
extern "C" {
# 27 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMuint32 RMasciiLength (const RMascii *string);
# 37 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMbool RMCompareAscii (const RMascii *a,
      const RMascii *b);
# 50 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMbool RMNCompareAscii (const RMascii *a,
       const RMascii *b,
       RMuint32 rank);
# 63 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMbool RMNCompareAsciiCaseInsensitively (const RMascii *a,
        const RMascii *b,
        RMuint32 rank);
# 75 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMbool RMCompareAsciiCaseInsensitively (const RMascii *a,
         const RMascii *b);





 RMascii *RMMallocAndDuplicateAscii (const RMascii *string);





 RMascii *RMMallocAscii (RMuint32 sizeWithoutTrailingZero);





 void RMCopyAscii (RMascii *dest, const RMascii *src);
# 106 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 void RMNCopyAscii (RMascii *dest, const RMascii *src, RMuint32 n);
# 115 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMascii * RMCatAscii(const RMascii* str1, ...);





 void RMAppendAscii (RMascii *dest, const RMascii *src);






 void RMFreeAscii (RMascii *string);





 void RMasciiToLower (const RMascii *str, RMascii *lowStr);





 RMascii RMasciiCharacterToLower (RMascii character);





 void RMasciiToUpper (const RMascii *str, RMascii *upperStr);





 RMascii RMasciiCharacterToUpper (RMascii character);





 void RMTranslateAscii(RMascii *str, RMascii in, RMascii out);







 void RMasciiToUInt8 (const RMascii *str, RMuint8 *value);







 void RMasciiToUInt16 (const RMascii *str, RMuint16 *value);







 void RMasciiToInt32(const RMascii *str, RMint32 *value);







 void RMasciiToUInt32(const RMascii *str, RMuint32 *value);







 void RMasciiToInt64(const RMascii *str, RMint64 *value);
 void RMasciiToUInt64(const RMascii *str, RMuint64 *value);







 void RMasciiToReal(const RMascii *str, RMreal *value);







 void RMasciiHexToUint16(const RMascii *str, RMuint16 *value);
 void RMasciiHexToUint32(const RMascii *str, RMuint32 *value);
 void RMasciiHexToUint64(const RMascii *str, RMuint64 *value);
# 226 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMbool RMFindAsciiCharacter (const RMascii *str,
            RMascii character,
            RMascii **location);
# 237 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMint32 RMFindAsciiString (const RMascii *str,
          const RMascii *stringToFind,
          RMascii **location);
# 249 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMbool RMasciiCharacterIsDigit (RMuint8 c);
# 261 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmascii.h"
 RMstatus RMasciiHexCharacterToUInt8(RMascii c, RMuint8 *value);

}
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h" 1
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
extern "C" {

typedef struct _RMcoreList *RMcoreList;







 RMcoreList RMCreateCoreList(void);
# 39 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 void RMDeleteCoreList(RMcoreList list);
# 48 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 void RMInsertFirstCoreList(RMcoreList list,void *item);
# 58 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 void RMInsertLastCoreList(RMcoreList list,void *item);
# 68 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 RMstatus RMRemoveFirstCoreList(RMcoreList list, void **item);
# 79 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 RMstatus RMRemoveLastCoreList(RMcoreList list, void **item);
# 88 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 void RMReverseCoreList(RMcoreList list);
# 103 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 RMstatus RMGetNextItemCoreList(RMcoreList list, void **item, void **cookie);
# 115 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 RMstatus RMRemoveCookieItemCoreList(RMcoreList list, void **cookie);
# 134 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 RMstatus RMInsertCookieItemCoreList(RMcoreList list, void *item, void **cookie);
# 144 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorelist.h"
 RMstatus RMShowLastItemCoreList(RMcoreList list, void **item);

}
# 30 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h" 1
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
extern "C" {

typedef struct _RMcoreQueue *RMcoreQueue;
# 34 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMcoreQueue RMCreateCoreQueue(RMuint32 maxItems);
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 void RMDeleteCoreQueue(RMcoreQueue corequeue);
# 54 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMInsertFirstCoreQueue(const RMcoreQueue corequeue, void * item);
# 64 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMInsertLastCoreQueue(const RMcoreQueue corequeue, void * item);
# 74 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMRemoveFirstCoreQueue(const RMcoreQueue corequeue, void **item);
# 84 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMRemoveLastCoreQueue(const RMcoreQueue corequeue, void **item);
# 96 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMGetNextItemCoreQueue(RMcoreQueue corequeue, void **item, void **cookie);
# 108 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMRemoveCookieItemCoreQueue(RMcoreQueue corequeue, void **cookie);
# 125 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMInsertCookieItemCoreQueue(RMcoreQueue corequeue, void *item, void **cookie);
# 135 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMShowLastCoreQueue(const RMcoreQueue corequeue, void **item);
# 145 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorequeue.h"
 RMstatus RMShowFirstCoreQueue(const RMcoreQueue corequeue, void **item);






 RMuint32 RMGetCountCoreQueue (const RMcoreQueue corequeue);






 RMuint32 RMGetMaxCountCoreQueue (const RMcoreQueue corequeue);

}
# 31 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
extern "C" {

typedef struct _RMcorePool *RMcorePool;
# 36 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 RMcorePool RMCreateCorePool(RMalignment alignment,RMuint32 nObjects,RMuint32 objectSize);
# 52 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 RMcorePool RMCreateCorePoolInArea(RMalignment alignment,const RMuint8 *area,
          RMuint32 areaSize, RMuint32 objectSize);
# 66 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 void RMDeleteCorePool(RMcorePool corepool);
# 77 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 void RMBorrowObjectFromCorePool(RMcorePool corepool, void **pObject);
# 93 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 void RMReturnObjectToCorePool(RMcorePool corepool,void *object);
# 102 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 RMuint32 RMGetAvailableCountCorePool(RMcorePool corepool);
# 115 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 void RMGetArrayOfBorrowedOnesCorePool(RMcorePool pool,void **borrowedOnes,RMuint32 *pBorrowedCount);







 void *RMGetObjectFromCorePoolByIndex(RMcorePool pool, RMuint32 index);
# 132 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 RMuint32 RMGetCorePoolObjectIndex(RMcorePool pool, void *object);
# 141 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcorepool.h"
 RMuint32 RMGetCorePoolMaxObject(RMcorePool pool);

}
# 32 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmgrep.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmgrep.h"
extern "C" {







typedef enum {
        RMGREP_NOTHING=2963,
        RMGREP_GOT_00xxxxxx,
        RMGREP_GOT_0000xxxx,
        RMGREP_GOT_000001xx,
} RMGrepStartCode_state;
# 55 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmgrep.h"
 RMint32 RMGrepAnyStartCode(RMuint8 *buf,
          RMint32 size,
          RMuint8 *pResult,
          RMGrepStartCode_state *pState);
# 80 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmgrep.h"
 RMint32 RMGrepSpecificStartCode(RMuint8 *buf,
        RMint32 size,
        RMuint8 desiredStartCode,
        RMGrepStartCode_state *pState);

}
# 34 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmstatustostring.h" 1
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmstatustostring.h"
extern "C" {


 const RMascii *RMstatusToString (RMstatus error);

}
# 35 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmwrrd.h" 1
# 23 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmwrrd.h"
extern "C" {

typedef struct tagRMwrrd *RMwrrd;

typedef void *(RMMemcpyLike)(void * const dest, const void *src, RMuint32 n);
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmwrrd.h"
 RMwrrd RMCreateWRRD(RMuint8 *address,RMuint32 size,RMMemcpyLike WriteF,RMMemcpyLike ReadF,RMcriticalsectionOps *pCSops);







 void RMDeleteWRRD(RMwrrd h);
# 66 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmwrrd.h"
 RMuint32 RMWriteWRRD(RMwrrd h,RMuint8 *sourceData,RMuint32 desiredWriteLength);
# 78 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmwrrd.h"
 RMuint32 RMReadWRRD(RMwrrd h,RMuint8 *targetData,RMuint32 desiredReadLength);
# 89 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmwrrd.h"
 RMuint32 RMReportUsedWRRD(RMwrrd h);







 void RMResetWRRD(RMwrrd h);

}
# 36 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2




# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h" 1
# 28 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
extern "C" {


typedef struct _RMlist *RMlist;
# 40 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 RMlist RMCreateList(RMcriticalsectionOps *pCSops,RMsemaphoreOps *pSemops);






 void RMDeleteList(RMlist list);
# 56 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 void RMInsertFirstList(RMlist list,void *item);
# 65 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 void RMInsertLastList(RMlist list,void *item);
# 75 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 void RMRemoveFirstList(RMlist list, void **item);
# 85 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 void RMRemoveLastList(RMlist list, void **item);
# 96 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 RMstatus RMShowLastList(RMlist list, void **item);
# 105 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 RMuint32 RMGetCountList(RMlist list);







 void RMReverseList(RMlist list);
# 125 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 RMstatus RMGetNextItemList(RMlist list, void **item, void **cookie);
# 135 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 void RMRemoveCookieItemList(RMlist list, void **cookie);
# 150 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmlist.h"
 void RMInsertCookieItemList(RMlist list, void *item, void **cookie);

}
# 41 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h" 1
# 34 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
extern "C" {

typedef struct _RMqueue *RMqueue;
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
RMqueue RMCreateQueue(RMuint32 maxItems,RMcriticalsectionOps *pCSops,RMsemaphoreOps *pSemops);
# 59 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMDeleteQueue(RMqueue queue);
# 69 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMInsertFirstQueue(const RMqueue queue, void * item);
# 79 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMInsertLastQueue(const RMqueue queue, void * item);
# 89 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMRemoveFirstQueue(const RMqueue queue, void **item);
# 99 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMRemoveLastQueue(const RMqueue queue, void **item);
# 112 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 RMstatus RMGetNextItemQueue(RMqueue queue, void **item, void **cookie);
# 124 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMRemoveCookieItemQueue(RMqueue queue, void **cookie);
# 141 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMInsertCookieItemQueue(RMqueue queue,void *item,void **cookie);
# 152 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 RMstatus RMShowLastQueue(const RMqueue queue, void **item);
# 163 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 RMstatus RMShowFirstQueue(const RMqueue queue, void **item);
# 173 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 void RMBlockingShowLastQueue(const RMqueue queue, void **item);
# 183 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmqueue.h"
 RMuint32 RMGetCountQueue (const RMqueue queue);






 RMuint32 RMGetMaxCountQueue (const RMqueue queue);

}
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h" 1
# 34 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
extern "C" {

typedef struct _RMtimeoutQueue *RMtimeoutQueue;
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
RMtimeoutQueue RMCreateTimeoutQueue(RMuint32 maxItems,RMcriticalsectionOps *pCSops, RMtimeoutSemaphoreOps *pSemops);
# 59 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 void RMDeleteTimeoutQueue(RMtimeoutQueue queue);
# 69 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMInsertFirstTimeoutQueue(const RMtimeoutQueue queue, void * item, RMuint64 microsec);
# 79 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMInsertLastTimeoutQueue(const RMtimeoutQueue queue, void * item, RMuint64 microsec);
# 89 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMRemoveFirstTimeoutQueue(const RMtimeoutQueue queue, void **item, RMuint64 microsec);
# 99 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMRemoveLastTimeoutQueue(const RMtimeoutQueue queue, void **item, RMuint64 microsec);
# 112 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMGetNextItemTimeoutQueue(RMtimeoutQueue queue, void **item, void **cookie);
# 124 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMRemoveCookieItemTimeoutQueue(RMtimeoutQueue queue, void **cookie, RMuint64 microsec);
# 141 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMInsertCookieItemTimeoutQueue(RMtimeoutQueue queue,void *item,void **cookie, RMuint64 microsec);
# 152 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMShowLastTimeoutQueue(const RMtimeoutQueue queue, void **item);
# 163 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMShowFirstTimeoutQueue(const RMtimeoutQueue queue, void **item);
# 173 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMstatus RMBlockingShowLastTimeoutQueue(const RMtimeoutQueue queue, void **item, RMuint64 microsec);
# 183 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmtimeoutqueue.h"
 RMuint32 RMGetCountTimeoutQueue (const RMtimeoutQueue queue);






 RMuint32 RMGetMaxCountTimeoutQueue (const RMtimeoutQueue queue);

}
# 43 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h" 1
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
extern "C" {

typedef enum {
 RM_POOL_NONBLOCKING = 0,
 RM_POOL_BLOCKING
} RMpoolType;


typedef struct _RMpool *RMpool;
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 RMpool RMCreatePool(RMalignment alignment,RMuint32 nObjects,RMuint32 objectSize, RMpoolType poolType,RMcriticalsectionOps *pCSops,RMsemaphoreOps *pSemops);
# 57 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 RMpool RMCreatePoolInArea(RMalignment alignment, const RMuint8 *area, RMuint32 areaSize, RMuint32 objectSize, RMpoolType poolType);







 void RMDeletePool(RMpool pool);
# 77 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 void RMBorrowObjectFromPool(RMpool pool, void **pObject);
# 90 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 void RMReturnObjectToPool(RMpool pool,void *object);
# 99 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 RMuint32 RMGetAvailableCountPool(RMpool pool);
# 108 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 void *RMGetObjectFromPoolByIndex(RMpool pool, RMuint32 index);
# 117 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 RMuint32 RMGetPoolObjectIndex(RMpool pool, void *object);
# 126 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmpool.h"
 RMuint32 RMGetPoolMaxObject(RMpool pool);

}
# 44 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2

# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h" 1
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
extern "C" {
# 31 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetBoardNumberFromUrl(const RMascii *url, RMascii **urlWithoutBoardNumber, RMuint32 *pBoardNumber);
# 42 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetBoardPropertiesFromUrl(const RMascii *url, RMascii **urlWithoutProperties, RMascii **properties);
# 57 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMuint32 RMGetPropertiesFromBoardNumber(const RMascii *boardNumberAsString, RMuint32 *properties, RMuint32 size);
# 68 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetUrlPrefix(const RMascii *url, RMascii **prefix, RMascii **newUrl);
# 79 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetServerIPFromUrl(RMascii *url, RMascii **serverIP);
# 92 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetServerPortFromUrl(RMascii *url, RMuint16 *port);
# 105 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetFileNameFromUrl(RMascii *url, RMascii **fileName);
# 116 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetParameterFromUrl(RMascii *url, RMascii *name, RMuint32 *value);
# 126 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetRealParameterFromUrl(RMascii *url, RMascii *name, RMreal *value);
# 139 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetAsciiParameterFromUrl(RMascii *url, RMascii *name, RMascii *value, RMuint32 maxLength);
# 149 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetUrlWithoutParametersFromUrl(RMascii *url, RMascii **newUrl);
# 160 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmparser.h"
 RMstatus RMGetQueryFromUrl(RMascii *url, RMascii **query);

}
# 46 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmfifo.h" 1
# 18 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmfifo.h"
extern "C" {

struct RMfifo {
 RMuint32 base;
 RMuint32 size;
 RMuint32 rd;
 RMuint32 wr;
};

 struct RMfifo *RMfifo_open (RMuint32 data_address, RMuint32 data_size, RMuint32 fifo_address);
 void RMfifo_flush (struct RMfifo *fifo);
 void RMfifo_close (struct RMfifo *fifo);
 RMbool RMfifo_is_empty (struct RMfifo *fifo);
 RMuint32 RMfifo_get_info (struct RMfifo *fifo, RMuint32 *data_start);
 RMuint32 RMfifo_get_writable_size (struct RMfifo *fifo, RMuint32 *wr_ptr1, RMuint32 *wr_size1, RMuint32 *wr_ptr2);
 RMuint32 RMfifo_get_readable_size (struct RMfifo *fifo, RMuint32 *rd_ptr1, RMuint32 *rd_size1, RMuint32 *rd_ptr2);
 RMuint32 RMfifo_incr_write_ptr (struct RMfifo *fifo, RMuint32 incr);
 RMuint32 RMfifo_incr_read_ptr (struct RMfifo *fifo, RMuint32 incr);

 RMstatus RMFifoRead( RMuint8 *dest, RMuint32 size,
 RMuint8 **src1, RMuint32 *size1, RMuint8 **src2, RMuint32 *size2, RMuint32 fifo );
 RMstatus RMFifoWrite( RMuint8 *src, RMuint32 size,
 RMuint8 **dest1, RMuint32 *size1, RMuint8 **dest2, RMuint32 *size2, RMuint32 fifo );

}
# 47 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rmcore/include/rmcore.h" 2
# 19 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rua/include/rua.h" 1
# 20 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h" 2
# 1 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/../../rua/include/rua_property.h" 1
# 21 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h" 2


extern "C" {

enum DCCMicrocode {
 DCCMicrocode_Demux = 0,
 DCCMicrocode_Audio,
 DCCMicrocode_Video
};

enum DCCInitMode {
 DCCInitMode_InitDisplay = 0,
 DCCInitMode_LeaveDisplay
};

enum DCCStopMode {
 DCCStopMode_BlackFrame = 0,
 DCCStopMode_LastFrame
};

enum DCCRoute {
 DCCRoute_Main = 0,
 DCCRoute_Secondary,
 DCCRoute_ColorBars,
 DCCRoute_HDSD,
};

enum DCCSurface {
 DCCSurface_Video = 0,
 DCCSurface_OSD,
 DCCSurface_SPU
};

struct DCCAudioProfile {
 RMuint32 BitstreamFIFOSize;
 RMuint32 XferFIFOCount;
 RMuint32 DemuxProgramID;
 RMuint32 AudioEngineID;
 RMuint32 AudioDecoderID;
 RMuint32 STCID;
};

struct DCCVideoProfile {
 RMuint32 BitstreamFIFOSize;
  RMuint32 XferFIFOCount;
 enum MPEG_Profile MPEGProfile;
 RMuint32 DemuxProgramID;
 RMuint32 MpegEngineID;
 RMuint32 VideoDecoderID;
 RMuint32 SPUBitstreamFIFOSize;
 RMuint32 SPUXferFIFOCount;
 RMuint32 STCID;
};

struct DCCCaptureProfile {
 enum EMhwlibSamplingMode SamplingMode;
 enum EMhwlibColorMode ColorMode;
 enum EMhwlibColorFormat ColorFormat;
 RMuint32 Width;
 RMuint32 Height;
 RMuint32 OrigWidth;
 RMuint32 OrigHeight;
 RMbool Interlaced;
 RMbool DeInt;
 enum EMhwlibColorSpace ColorSpace;
 struct EMhwlibAspectRatio PictureAspectRatio;
 struct EMhwlibAspectRatio PixelAspectRatio;
 RMuint32 TimerNumber;
 struct Input_GPIOFieldID_type gpio;
 RMbool UseV2Pads;
};

enum DCCVideoConnector {
 DCCVideoConnector_SVIDEO = 0,
 DCCVideoConnector_DVI,
 DCCVideoConnector_LVDS,
 DCCVideoConnector_Digital,
 DCCVideoConnector_VGA,
 DCCVideoConnector_SCART,
 DCCVideoConnector_COMPONENT,
 DCCVideoConnector_COMPOSITE
};

enum DCCVideoPlayCommand {
 DCCVideoPlayFwd = VideoDecoder_Command_PlayFwd,
 DCCVideoPlayIFrame = VideoDecoder_Command_PlayIFrame,
 DCCVideoPlayNextFrame
};

struct DCCAudioDecoderFormat {
 enum AudioDecoder_Codec_type Codec;
};

struct DCCOSDProfile {
 enum EMhwlibSamplingMode SamplingMode;
 enum EMhwlibColorMode ColorMode;
 enum EMhwlibColorFormat ColorFormat;
 RMuint32 Width;
 RMuint32 Height;
 enum EMhwlibColorSpace ColorSpace;
 struct EMhwlibAspectRatio PixelAspectRatio;
};

struct DCC;
struct DCCAudioSource;
struct DCCVideoSource;
struct DCCDemuxSource;
struct DCCOSDPicture;
struct DCCSTCSource;

typedef RMuint32 (*DCCAllocFunc) (struct RUA *pRua, RMuint32 ModuleID, RMuint32 dramIndex, enum RUADramType dramtype, RMuint32 size);
typedef void (*DCCFreeFunc) (struct RUA *pRUA, RMuint32 ptr);
# 141 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCOpen(struct RUA *pRUA, struct DCC **ppDCC);
# 150 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCClose(struct DCC *pDCC);
# 159 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCInitChain(struct DCC *pDCC);
# 170 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCInitChainEx(struct DCC *pDCC, enum DCCInitMode init_mode);
# 180 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCInitMicroCode(struct DCC *pDCC);
# 192 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCInitMicroCodeEx(struct DCC *pDCC, enum DCCInitMode init_mode);
# 202 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCInitSpecificMicroCode(struct DCC *pDCC, enum DCCMicrocode ucode);
# 215 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetRouteDisplayAspectRatio(struct DCC *pDCC, enum DCCRoute route, RMuint8 ar_x, RMuint8 ar_y);
# 227 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetRouteDisplayAspectRatioFromSource(struct DCC *pDCC, enum DCCRoute route, RMuint32 scaler);
# 239 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetStandard(struct DCC *pDCC, enum DCCRoute route, enum EMhwlibTVStandard standard);







RMbool DCCGetDoubleRate(enum EMhwlibTVStandard standard);
# 256 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetMasterConnector(struct DCC *pDCC,
          enum DCCVideoConnector connector,
          enum DCCRoute route,
          enum EMhwlibTVStandard standard);
# 269 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetSlaveConnector(struct DCC *pDCC,
         enum DCCVideoConnector slave_connector,
         enum DCCVideoConnector master_connector,
         enum DCCRoute route);
# 282 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetSDSlaveConnector(struct DCC *pDCC,
    enum DCCVideoConnector sd_connector,
    enum DCCVideoConnector hd_connector,
    enum EMhwlibTVStandard sd_standard,
    enum EMhwlibHDSDConversionMode hdsd_mode);
# 298 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetStandardDual(
 struct DCC *pDCC,
 enum DCCRoute route_video,
 enum DCCRoute route_vga,
 enum EMhwlibTVStandard standard_video,
 enum EMhwlibTVStandard standard_vga);
# 317 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetHDSDStandards(struct DCC *pDCC,
        enum DCCRoute route,
        enum EMhwlibTVStandard sd_standard,
        enum EMhwlibTVStandard hd_standard,
        enum EMhwlibHDSDConversionMode hdsd_mode);
# 335 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetTVFormat(struct DCC *pDCC, enum DCCRoute route, struct EMhwlibTVFormatDigital *fmt_d, struct EMhwlibTVFormatAnalog *fmt_a);
# 351 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetSCART(struct DCC *pDCC,
 enum DCCRoute route,
 enum DCCVideoConnector connector,
 RMbool Enable,
 RMuint32 EnableBit,
 RMbool EnableInvert,
 RMuint32 WideBit,
 RMbool WideInvert,
 enum EMhwlibSCARTWideBitState WideState);
# 370 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCEnableVideoConnector(struct DCC *pDCC, enum DCCRoute route, enum DCCVideoConnector connector, RMbool state);
# 383 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetVideoConnectorModuleID(struct DCC *pDCC, enum DCCRoute route, enum DCCVideoConnector connector, RMuint32 *moduleID);
# 395 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetDVIOutFormat(struct DCC *pDCC, enum DCCRoute route, enum EMhwlibColorSpace color_space, enum EMhwlibDigitalTimingSignal timing, RMuint32 bus_size);
# 406 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetComponentOutFormat(struct DCC *pDCC, enum DCCRoute route, enum EMhwlibColorSpace color_space, enum EMhwlibComponentMode component);
# 422 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCEnableSPUSurface(struct DCC *pDCC, enum DCCRoute route, RMuint32 index, struct DCCVideoSource *pVideoSource, RMbool enable);
# 436 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetScalerModuleID(struct DCC *pDCC, enum DCCRoute route, enum DCCSurface surface, RMuint32 index, RMuint32 *surfaceID);
# 449 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetSurfaceSource(struct DCC *pDCC, RMuint32 surfaceID, struct DCCVideoSource *pVideoSource);
# 463 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCOpenVideoDecoderSource(struct DCC *pDCC, struct DCCVideoProfile *dcc_profile, struct DCCVideoSource **ppVideoSource);
# 475 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCOpenOSDVideoSource(struct DCC *pDCC, struct DCCOSDProfile *profile, struct DCCVideoSource **ppVideoSource);
# 485 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCOpenMultiplePictureOSDVideoSource(struct DCC *pDCC, struct DCCOSDProfile *profile, RMuint32 picture_count,
           struct DCCVideoSource **ppVideoSource, struct DCCSTCSource *pStcSource);







RMstatus DCCInsertPictureInMultiplePictureOSDVideoSource(struct DCCVideoSource *pVideoSource, RMuint32 Index, RMuint64 Pts);
# 506 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetOSDPictureInfo(struct DCCVideoSource *pVideoSource, RMuint32 index, RMuint32 *PictureAddr, RMuint32 *LumaAddr, RMuint32 *LumaSize, RMuint32 *ChromaAddr, RMuint32 *ChromaSize);
# 521 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCOpenVideoInputSource(struct DCC *pDCC, struct DCCCaptureProfile *pProfile, RMuint32 TimerNumber, RMuint32 dram, struct DCCVideoSource **ppVideoSource);
# 535 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCOpenGraphicInputSource(struct DCC *pDCC, struct DCCCaptureProfile *pProfile, RMuint32 TimerNumber, RMuint32 dram, struct DCCVideoSource **ppVideoSource);
# 544 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCCloseVideoSource(struct DCCVideoSource *pVideoSource);
# 557 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetVideoDecoderSourceInfo(struct DCCVideoSource *pVideoSource, RMuint32 *video_decoder, RMuint32 *spu_decoder, RMuint32 *timer);
# 569 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetOSDSurfaceInfo(struct DCC *pDCC, struct DCCVideoSource *pVideoSource, struct DCCOSDProfile *profile, RMuint32 *SurfaceAddr, RMuint32 *SurfaceSize);






RMstatus DCCSetVideoDecoderSourceCodec(struct DCCVideoSource *pVideoSource, enum VideoDecoder_Codec_type codec);
# 587 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetOSDVideoSourceInfo(struct DCCVideoSource *pVideoSource, RMuint32 *LumaAddr, RMuint32 *LumaSize, RMuint32 *ChromaAddr, RMuint32 *ChromaSize);






RMstatus DCCClearOSDVideoSource(struct DCCVideoSource *pVideoSource);






RMstatus DCCClearOSDPicture(struct DCCVideoSource *pVideoSource, RMuint32 index);







RMstatus DCCSetOSDVideoSource(struct DCCVideoSource *pVideoSource, RMuint8 * pUserLuma, RMuint8 * pUserChroma);
# 618 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetOSDPicture(struct DCCVideoSource *pVideoSource, RMuint32 index, RMuint8 * pUserLuma, RMuint8 * pUserChroma);






RMstatus DCCPlayVideoSource(struct DCCVideoSource *pVideoSource, enum DCCVideoPlayCommand cmd);






RMstatus DCCStopVideoSource(struct DCCVideoSource *pVideoSource, enum DCCStopMode stop_mode);





RMstatus DCCPauseVideoSource(struct DCCVideoSource *pVideoSource);






RMstatus DCCEnableVideoSource(struct DCCVideoSource *pVideoSource, RMbool enable);







RMstatus DCCOpenAudioDecoderSource(struct DCC *pDCC, struct DCCAudioProfile *profile, struct DCCAudioSource **ppAudioSource);





RMstatus DCCCloseAudioSource(struct DCCAudioSource *pAudioSource);
# 668 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetAudioDecoderSourceInfo(struct DCCAudioSource *pAudioSource, RMuint32 *decoder, RMuint32 *engine, RMuint32 *timer);






RMstatus DCCSetAudioDecoderSourceFormat(struct DCCAudioSource *pAudioSource, struct DCCAudioDecoderFormat *pFormat);




RMstatus DCCSetAudioBtsThreshold(struct DCCAudioSource *pAudioSource, RMuint32 level);






RMstatus DCCSetAudioDVDAFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_DVDAParameters_type *pFormat);






RMstatus DCCSetAudioBSACFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_BSACParameters_type *pFormat);






RMstatus DCCSetAudioAc3Format(struct DCCAudioSource *pAudioSource, struct AudioDecoder_Ac3Parameters_type *pFormat);






RMstatus DCCSetAudioDtsFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_DtsParameters_type *pFormat);






RMstatus DCCSetAudioTToneFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_TToneParameters_type *pFormat);






RMstatus DCCSetAudioMpegFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_MpegParameters_type *pFormat);






RMstatus DCCSetAudioPcmxFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_PCMXParameters_type *pFormat);





RMstatus DCCSetAudioPcmCdaFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_PcmCdaParameters_type *pFormat);






RMstatus DCCSetAudioLpcmVobFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_LpcmVobParameters_type *pFormat);






RMstatus DCCSetAudioLpcmBDFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_LpcmBDParameters_type *pFormat);






RMstatus DCCSetAudioLpcmAobFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_LpcmAobParameters_type *pFormat);






RMstatus DCCSetAudioWMAFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_WMAParameters_type *pFormat);






RMstatus DCCSetAudioAACFormat(struct DCCAudioSource *pAudioSource, struct AudioDecoder_AACParameters_type *pFormat);





RMstatus DCCPlayAudioSource(struct DCCAudioSource *pAudioSource);





RMstatus DCCStopAudioSource(struct DCCAudioSource *pAudioSource);





RMstatus DCCPauseAudioSource(struct DCCAudioSource *pAudioSource);



RMstatus DCCSetAudioSourceVolume(struct DCCAudioSource *pAudioSource, RMuint32 volume);
RMstatus DCCGetAudioSourceVolume(struct DCCAudioSource *pAudioSource, RMuint32 *volume);






RMstatus DCCEnableAudioPTS(struct DCCAudioSource *pAudioSource, RMbool enable_pts);







RMstatus DCCSetSystemTimeBase(struct DCC *pDCC, RMuint32 timer, RMuint64 base);







RMstatus DCCSetSystemTimeScale(struct DCC *pDCC, RMuint32 timer, RMuint32 tir);
# 825 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetSystemTimeSpeedFactor(struct DCC *pDCC, RMuint32 timer, RMint32 N, RMuint32 M);
# 834 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetSystemTimeSource(struct DCC *pDCC, RMuint32 timer, RMuint32 offset, RMuint32 frequency);







RMstatus DCCGetSystemTimeBase(struct DCC *pDCC, RMuint32 timer, RMuint64 *base);







RMstatus DCCGetSystemTimeScale(struct DCC *pDCC, RMuint32 timer, RMuint32 *tir);
# 859 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetSystemTimeSpeedFactor(struct DCC *pDCC, RMuint32 timer, RMint32 *N, RMuint32 *M);



RMstatus DCCSetupVideoInputFormat(
 struct DCC *pDCC,
 struct EMhwlibTVFormatDigital fmt,
 enum EMhwlibDigitalTimingSignal DigitalTimingSignal,
 RMbool UseVideoValid,
 RMuint32 bussize,
 RMint32 over_pos_x,
 RMint32 over_pos_y,
 RMuint32 over_width,
 RMuint32 over_height,
 RMbool InvertVSync,
 RMbool InvertHSync,
 RMbool InvertFieldID,
 RMbool UseGPIOFieldID);

RMstatus DCCSetupVideoInput(
 struct DCC *pDCC,
 enum EMhwlibTVStandard standard,
 enum EMhwlibDigitalTimingSignal DigitalTimingSignal,
 RMbool UseVideoValid,
 RMuint32 bussize,
 RMint32 over_pos_x,
 RMint32 over_pos_y,
 RMuint32 over_width,
 RMuint32 over_height,
 RMbool InvertVSync,
 RMbool InvertHSync,
 RMbool InvertFieldID,
 RMbool UseGPIOFieldID);



RMstatus DCCSetupGraphicInputFormat(
 struct DCC *pDCC,
 struct EMhwlibTVFormatDigital fmt,
 enum EMhwlibDigitalTimingSignal DigitalTimingSignal,
 RMbool UseVideoValid,
 RMuint32 bussize,
 RMint32 over_pos_x,
 RMint32 over_pos_y,
 RMuint32 over_width,
 RMuint32 over_height,
 RMbool DualEdge,
 RMbool DualEdgeWidth,
 RMbool DualEdgeInvert,
 enum EMhwlibInputColorFormat InputColorFormat,
 enum EMhwlibColorSpace InputColorSpace,
 RMbool InvertVSync,
 RMbool InvertHSync,
 RMbool InvertFieldID,
 RMbool UseGPIOFieldID);

RMstatus DCCSetupGraphicInput(
 struct DCC *pDCC,
 enum EMhwlibTVStandard standard,
 enum EMhwlibDigitalTimingSignal DigitalTimingSignal,
 RMbool UseVideoValid,
 RMuint32 bussize,
 RMint32 over_pos_x,
 RMint32 over_pos_y,
 RMuint32 over_width,
 RMuint32 over_height,
 RMbool DualEdge,
 RMbool DualEdgeWidth,
 RMbool DualEdgeInvert,
 enum EMhwlibInputColorFormat InputColorFormat,
 enum EMhwlibColorSpace InputColorSpace,
 RMbool InvertVSync,
 RMbool InvertHSync,
 RMbool InvertFieldID,
 RMbool UseGPIOFieldID);
# 948 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetupVBICapture(
 struct DCC *pDCC,
 RMuint32 input,
 RMuint32 x,
 RMuint32 y,
 RMuint32 w,
 RMuint32 h,
 RMuint32 buf,
 RMuint32 size);
# 971 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetupVBICaptureRaw(
 struct DCC *pDCC,
 RMuint32 input,
 RMuint32 TopVBIOffset,
 RMuint32 TopVBILineEnable,
 RMuint32 BottomVBIOffset,
 RMuint32 BottomVBILineEnable,
 RMuint32 buf,
 RMuint32 size);
# 995 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetupVBICaptureANC(
 struct DCC *pDCC,
 RMuint32 input,
 RMbool Enable,
 RMuint32 ActiveWidth,
 RMuint32 ActiveHeight,
 RMuint32 YOffsetTop,
 RMuint32 YOffsetBottom,
 RMuint32 buf,
 RMuint32 size);
# 1018 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetVBIData(
 struct DCC *pDCC,
 RMuint32 input,
 RMuint32 *pFlags,
 RMuint32 *pPTS,
 RMuint32 *pSequenceNumber,
 RMuint32 *pDataSize,
 RMuint16 **pData);





enum DCCOutportState {
 DCCOutportState_Disable,
 DCCOutportState_Enable,
 DCCOutportState_Keep,
};



struct DCCOutportConfig{
 enum DCCOutportState state;
 struct EMhwlibGenericTVFormat format;
 enum DCCRoute route;
 RMuint32 flags;
};


struct DCCOutportsConfig{
 struct DCCOutportConfig digital;
 struct DCCOutportConfig analog;
 struct DCCOutportConfig component;
 struct DCCOutportConfig composite;
 RMbool allow_hdsd_on_the_fly;
 RMbool allow_hdsd_buffered;
};

struct DCCOutportInfo{
 RMuint32 source_id;

};



struct DCCOutportsInfo {

 struct DCCOutportInfo digital;
 struct DCCOutportInfo analog;
 struct DCCOutportInfo component;
 struct DCCOutportInfo composite;
};
# 1080 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetOutports(struct DCC *pDCC, struct DCCOutportsConfig *info);
# 1094 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCInitOutportsConfigStructure(struct DCC *pDCC,
     struct DCCOutportsConfig *config);
# 1109 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCGetOutportsInfo(struct DCC *pDCC,
       struct DCCOutportsConfig *config,
       struct DCCOutportsInfo *info);
# 1124 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetOutports(struct DCC *pDCC,
   struct DCCOutportsConfig *config,
   struct DCCOutportsInfo *info);






RMstatus DCCSetMemoryManager(struct DCC *pDCC, RMuint8 dram);
# 1146 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMstatus DCCSetMemoryManagerCallbacks(struct DCC *pDCC, DCCAllocFunc alloc_cb, DCCFreeFunc free_cb);
# 1157 "/home/davidhu/svn.32M/apps/../HW/SD8634/mrua_SMP8634_2.8.0.1_GCC4_dev.mips/MRUA_src/dcc/include/dcc.h"
RMuint32 DCCMalloc(struct DCC *pDCC, RMuint32 dramIndex, enum RUADramType dramtype, RMuint32 size);







void DCCFree(struct DCC *pDCC, RMuint32 ptr);






struct Receive_type {
 struct RUA *pRUA;
 RMuint32 targetModule;
 RMuint32 buffer_count;
 RMuint32 buffer_size_log2;
 RMuint32 threshold_size;
 RMbool partial_read;
};

struct ReceiveObject_type {
 struct RUA *pRUA;
 RMuint32 targetModule;
 RMuint32 buffer_count;
 RMuint32 buffer_size_log2;
 RMuint32 threshold_size;
 RMbool partial_read;

 struct RUABufferPool *pDMA;
 RMuint32 CachedAddr;
 RMuint32 UncachedAddr;
};

RMstatus DCCOpenReceive (struct Receive_type *Receive, struct ReceiveObject_type **ppR, struct RUABufferPool **ppDma);
RMstatus DCCCloseReceive (struct ReceiveObject_type *pR);
RMstatus DCCGetReceiveEvent (struct ReceiveObject_type *pR, struct RUAEvent* pEvent);
RMstatus DCCResetReceive (struct ReceiveObject_type *pR);





enum DCCStreamType {
 DCC_Stc = 0,
 DCC_Video,
 DCC_Audio
};

struct DCCStcProfile {
 RMuint32 STCID;
 enum Master_type master;
 RMuint32 stc_timer_id;
 RMuint32 stc_time_resolution;
 RMuint32 video_timer_id;
 RMuint32 video_time_resolution;
 RMint32 video_offset;
 RMuint32 audio_timer_id;
 RMuint32 audio_time_resolution;
 RMint32 audio_offset;
};

struct DCCSTCSource;

RMstatus DCCSTCOpen(struct DCC *pDCC, struct DCCStcProfile *stc_profile, struct DCCSTCSource **ppStcSource);
RMstatus DCCSTCClose(struct DCCSTCSource *pStcSource);
RMstatus DCCSTCSetTimeResolution(struct DCCSTCSource *pStcSource, enum DCCStreamType type, RMuint32 time_resolution);
RMstatus DCCSTCGetTimeResolution(struct DCCSTCSource *pStcSource, enum DCCStreamType type, RMuint32 *ptime_resolution);
RMstatus DCCSTCSetVideoOffset(struct DCCSTCSource *pStcSource, RMint32 time, RMuint32 time_resolution);
RMstatus DCCSTCSetAudioOffset(struct DCCSTCSource *pStcSource, RMint32 time, RMuint32 time_resolution);
RMstatus DCCSTCSetTime(struct DCCSTCSource *pStcSource, RMuint64 time, RMuint32 time_resolution);
RMstatus DCCSTCGetTime(struct DCCSTCSource *pStcSource, RMuint64 *ptime, RMuint32 time_resolution);
RMstatus DCCSTCSetSpeed(struct DCCSTCSource *pStcSource, RMint32 numerator, RMuint32 denominator);
RMstatus DCCV